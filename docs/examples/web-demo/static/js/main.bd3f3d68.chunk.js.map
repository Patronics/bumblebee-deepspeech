{"version":3,"sources":["../../../../jaxcore-client/lib/CollectionModel.js","../../../../jaxcore-client/lib/Listen.js","../../../../jaxcore-client/lib/State.js","../../../../jaxcore-client/lib/Sound.js","../../../../jaxcore-client/lib/MonauralScope.js","../../../../jaxcore-client/lib/index.js","serviceWorker.js","index.js","../../../../jaxcore-client/lib/spin/transports/browser.js","../../../../jaxcore-client/lib/spin/spin.js","../../../../jaxcore-client/lib/logger.js","../../../../jaxcore-client/lib/Store.js","../../../../jaxcore-client/lib/Color.js","ListenApp.js","../../../../jaxcore-client/lib/spin/buffer.js","../../../../jaxcore-client/lib/colors.js"],"names":["events_default","a","Listen","_EventEmitter","Listener","postCommand","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","console","log","listenCommand","command","options","arguments","text","emit","lib_State","State","defaults","state","data","callback","changes","hasChanges","s","i","handler","addListener","removeListener","lib_MonauralScope","MonauralScope","canvas","width","height","audioContext","meter","mediaStreamSource","_draw","draw","bind","assertThisInitialized","isRecording","setTheme","lineWidth","strokeColor","clipColor","fillColor","bgOnColor","bgOffColor","dotColor","dotSize","background","theme","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","event","x","buf","inputBuffer","getChannelData","bufLength","length","sum","Math","abs","clipping","lastClip","window","performance","now","rms","sqrt","volume","max","maxVolume","connect","destination","checkClipping","shutdown","disconnect","startRecording","stopRecording","close","isDrawing","_this2","AudioContext","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","stream","createMediaStreamSource","createAudioMeter","startDrawing","e","alert","source","_this3","onended","isPlaying","stop","stopDrawing","start","ctx","getContext","fillStyle","fillRect","clearRect","maxsize","min","beginPath","arc","PI","fill","closePath","size","error","strokeStyle","_maxsize","_size","stroke","requestAnimationFrame","postMessage","msg","_jaxcore_client","message","protocol","document","location","host","__webpack_require__","d","__webpack_exports__","lib_Listen","browser_default","setPostCommand","lib_JaxcoreClient","_State","JaxcoreClient","reconnect","setState","connectedExtension","extensionReady","addEventListener","href","indexOf","origin","_jaxcore_content","socketDisconnected","spin","listen","recognizedText","target","on","args","disconnectExtension","once","connectExtension","_this4","jaxcore","logger_default","create","spin_default","connectAll","connectSpins","Boolean","hostname","match","ReactDOM","render","react_default","createElement","ListenApp","getElementById","serviceWorker","ready","then","registration","unregister","EventEmitter","Spin","BrowserTransport","constructor","prototype","store","id","add","created","update","spinIds","destroyed","c","knobPushed","buttonPushed","_lastSpinPosition","spinPosition","spinDirection","connected","remove","sendCommand","shift","method","postCommandFn","spinCommand","fn","spinBrowser","module","exports","plugin","createLogger","spinStore","createStore","Client","SpinBuffer","_instance","device","transport","instance","ip","Date","setStore","setDefaults","spinPreviousTime","spinTime","knobPushTime","knobReleaseTime","knobPushDuration","knobHold","buttonPushTime","buttonReleaseTime","buttonPushDuration","buttonHold","batteryVoltage","batteryPercent","isCharging","isCharged","sleeping","inactivityTime","createSettings","brightness","knobHoldThreshold","buttonHoldThreshold","sleepEnabled","sleepTimer","Buffer","config","settings","settingDefaults","settingNames","push","changeSettings","name","buffer","_buffer","apply","Array","slice","bufferDelay","delay","bufferReset","reset","cancelHoldEvents","clearTimeout","_knobHoldTimer","_buttonHoldTimer","isConnected","_connected","resetDefaults","_sleeping","_removeEvents","knobReleased","buttonReleased","processSpin","position","direction","processEncoder","throttled","getTime","processKnob","pushed","me","setTimeout","wasHeld","processButton","processStatus","round","first","processSleep","status","millis","flash","color","quickFlash","repeat","bleDevice","join","lightsOn","lights","lightsOff","setThrottle","throttle","setBrightness","setName","rotate","mode","color1","color2","scale","percent","color3","sleep","delaySleep","setKnobHoldThreshold","th","setButtonHoldThreshold","setSleepTimer","minutes","ms","destroy","debug","q","logger","quiet","chalk","green","yellow","cyan","magenta","_quiet","map","arg","index","loggerName","colors","n","unshift","Store","ids","removeAllListeners","set","isColor","Color","rgb","from","toString","alpha","v","lighten","darken","saturate","desaturate","shiftHSL","h","l","shiftHue","combine","t","tint","hue","saturation","lightness","invert","setRGB","hsl","setHSL","red","r","g","blue","b","getAlpha","getRGB","getHex","full","getRed","getGreen","getBlue","getHSL","getHue","getSaturation","getLightness","rgba","hsla","letterPhonetics","f","j","k","m","o","p","u","w","y","z","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_demo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_demo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_demo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","canvasRef","React","createRef","results","global","app","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_demo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","Jaxcore","subscribe","jaxcoreState","micVisualization","current","wordsToNumbers","words","word","split","letter","wordsToLetters","wordsToAlphaNumberic","react__WEBPACK_IMPORTED_MODULE_6___default","className","ref","onMouseDown","onMouseUp","onMouseOut","type","checked","onChange","onChangeMode","htmlFor","startMicVisualization","stopMicVisualization","_this5","_this6","Component","delayTime","spinDelayed","staticBuffer","kineticBuffer","lastSpinTime","defaultDelay","staticTimeout","delayLength","_onPushKnob","onPushKnob","forceStatic","timeSinceLastSpin","isDelayed","diff","cancelDelay","isArray","isString","String","hslval","hsl2rgb","test","substring","parseInt","Number","int2hex","toUpperCase","sourceColor","targetColor","amount","al","sH"],"mappings":"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","file":"static/js/main.bd3f3d68.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\n// The object previously known as Client (minus bindInterface)\nimport EventEmitter from 'events';\n\nvar CollectionModel =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(CollectionModel, _EventEmitter);\n\n  function CollectionModel() {\n    _classCallCheck(this, CollectionModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionModel).apply(this, arguments));\n  }\n\n  _createClass(CollectionModel, [{\n    key: \"setStore\",\n    value: function setStore(store, singleton) {\n      if (singleton) {\n        this.store = null;\n        this.state = store;\n      } else {\n        this.store = store;\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(data) {\n      if (typeof arguments[0] === 'string') {\n        var type = arguments[0];\n        data = arguments[1];\n        var d = Object.assign({}, this.state[type]);\n        this.state[type] = d;\n        var changes = {};\n        changes[type] = {};\n\n        for (var name in data) {\n          if (d[name] !== data[name]) {\n            d[name] = data[name];\n            changes[type][name] = data[name];\n          }\n        }\n\n        return changes;\n      } else {\n        if (this.store) {\n          var id = this.state ? this.state.id : data.id;\n          var changes = this.store.set(id, data);\n          this.state = this.store[id];\n          this.emit('update', changes);\n          return changes;\n        } else {\n          return this._setState(data);\n        }\n      }\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(data) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        // this.emit('update', this.state, changes);\n        this.emit('update', changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state.id in this.store ? this.store[this.state.id] : {};\n    }\n  }]);\n\n  return CollectionModel;\n}(EventEmitter);\n\nexport default CollectionModel;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Listener =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Listener, _EventEmitter);\n\n  function Listener(postCommand) {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listener).call(this));\n    _this.postCommand = postCommand;\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"start\",\n    value: function start() {\n      console.log('listen start');\n      this.postCommand({\n        listenCommand: {\n          command: 'start'\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      console.log('listen stop');\n      this.postCommand({\n        listenCommand: {\n          command: 'stop'\n        }\n      });\n    }\n  }, {\n    key: \"startContinuous\",\n    value: function startContinuous(options) {\n      console.log('startContinuous', options);\n      this.postCommand({\n        listenCommand: {\n          command: 'start-continuous',\n          arguments: options\n        }\n      });\n    }\n  }, {\n    key: \"stopContinuous\",\n    value: function stopContinuous() {\n      this.postCommand({\n        listenCommand: {\n          command: 'stop-continuous'\n        }\n      });\n    }\n  }, {\n    key: \"recognizedText\",\n    value: function recognizedText(text) {\n      this.emit('recognized', text);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.emit('start', text);\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.emit('stop', text);\n    }\n  }, {\n    key: \"onStartContinuous\",\n    value: function onStartContinuous() {\n      this.emit('start-continuous', text);\n    }\n  }, {\n    key: \"onStopContinuous\",\n    value: function onStopContinuous() {\n      this.emit('stop-continuous', text);\n    }\n  }]);\n\n  return Listener;\n}(EventEmitter);\n\nexport default Listener;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar State =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(defaults) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(State).call(this));\n    _this.state = defaults || {};\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: \"setState\",\n    value: function setState(data, callback) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        this.emit('update', this.state, changes);\n        if (callback) callback(changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.addListener('update', handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.removeListener('update', handler);\n    }\n  }]);\n\n  return State;\n}(EventEmitter);\n\nexport default State;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Sound =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Sound, _EventEmitter);\n\n  function Sound(url, options) {\n    var _this;\n\n    _classCallCheck(this, Sound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sound).call(this));\n    if (!options) options = {};\n    if (options.context) _this.context = options.context;\n\n    if (options.source) {\n      _this.source = options.source;\n    }\n\n    _this.connected = false;\n    _this.loaded = false;\n    _this.looping = false;\n\n    if (options.autoplay) {\n      _this.connect();\n\n      _this.on('load', function () {\n        if (options.loop) {\n          _this.loop();\n        } else _this.play(options.callback);\n      });\n    }\n\n    if (typeof url === 'string') {\n      _this.url = url;\n\n      _this.load();\n    } else if (typeof url === 'object') {\n      _this.loadArrayBuffer(url);\n    }\n\n    return _this;\n  }\n\n  _createClass(Sound, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.context) {\n        this.createContext(); // this.context = new AudioContext();\n        // this.reset();\n      } // if (!this.source) {\n      // \tthis.source = this.context.createBufferSource();\n      // }\n\n\n      if (!this.source.buffer) this.source.buffer = this.buffer;\n      this.source.connect(this.context.destination);\n      this.connected = true;\n    }\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(data) {}\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open('GET', this.url, true);\n      request.responseType = 'arraybuffer';\n\n      request.onload = function () {\n        _this2.response = request.response;\n\n        if (_this2.context) {\n          // debugger;\n          _this2.loadData();\n        } else {\n          console.log('loaded no context', _this2.url);\n        }\n      };\n\n      request.send();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      if (!this.response) {\n        debugger;\n      }\n\n      this.context.decodeAudioData(this.response, function (response) {\n        _this3.buffer = response;\n\n        if (_this3.source) {\n          // debugger;\n          _this3.source.buffer = _this3.buffer;\n        }\n\n        _this3.loaded = true;\n\n        _this3.emit('load');\n      }, function (e) {\n        console.error('Sound: failed to load', this.url); // this.emit('error', e);\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      this.context = new AudioContext();\n      this.source = this.context.createBufferSource();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.createContext();\n      this.connect(); // this.source.buffer = this.buffer;\n      // this.source.connect(this.context.destination);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.source.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.source.resume();\n    }\n  }, {\n    key: \"play\",\n    value: function play(callback) {\n      var _this4 = this;\n\n      if (this.isPlaying) {\n        console.log('isPlaying');\n        return;\n      }\n\n      if (!this.loaded) {\n        if (!this.context) {\n          this.createContext();\n        }\n\n        this.once('load', function () {\n          _this4.connect();\n\n          _this4.source.loop = _this4.looping;\n\n          _this4.source.onended = function () {\n            _this4.stop();\n\n            if (callback) callback();\n          };\n\n          _this4.isPlaying = true;\n\n          _this4.source.start(0);\n        });\n        this.loadData();\n      } else {\n        if (!this.connected) {\n          // debugger;\n          this.connect();\n        }\n\n        this.source.onended = function () {\n          // debugger;\n          _this4.stop();\n\n          if (callback) callback();\n        };\n\n        this.isPlaying = true;\n        this.source.start(0);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n      this.source.stop();\n      this.source.disconnect();\n      this.context.close();\n      this.connected = false;\n      this.looping = false;\n      this.reset();\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      this.looping = true;\n      this.play(); // if (!this.loaded) {\n      // \tthis.once('load', () => {\n      // \t\tthis.connect();\n      // \t\tthis.source.loop = true;\n      // \t\tthis.source.start(0);\n      // \t});\n      // \tthis.load();\n      // }\n      // else {\n      // \tif (!this.connected) this.connect();\n      // }\n      // this.source.loop = true;\n      // this.source.start(0);\n    }\n  }]);\n\n  return Sound;\n}(EventEmitter);\n\nexport default Sound;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport EventEmitter from 'events';\n\nvar MonauralScope =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(MonauralScope, _EventEmitter);\n\n  function MonauralScope(canvas, options) {\n    var _this;\n\n    _classCallCheck(this, MonauralScope);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonauralScope).call(this));\n    if (!options) options = {};\n    _this.canvas = canvas;\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n    _this.audioContext = null;\n    _this.meter = null;\n    _this.mediaStreamSource = null;\n    _this._draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isRecording = false;\n\n    _this.setTheme({\n      lineWidth: options.lineWidth || 3,\n      strokeColor: options.strokeColor || '#FF0000',\n      clipColor: options.clipColor || options.strokeColor || '#FF0000',\n      fillColor: options.fillColor || 'rgba(255,0,0,0.1)',\n      bgOnColor: options.bgOnColor || null,\n      bgOffColor: options.bgOffColor || null,\n      dotColor: options.dotColor || '#FF0000',\n      dotSize: options.dotSize || 3,\n      background: options.background || null\n    });\n\n    return _this;\n  }\n\n  _createClass(MonauralScope, [{\n    key: \"setTheme\",\n    value: function setTheme(options) {\n      this.theme = options;\n    }\n  }, {\n    key: \"createAudioMeter\",\n    value: function createAudioMeter(audioContext, clipLevel, averaging, clipLag) {\n      // this.audioContext = audioContext;\n      var processor = audioContext.createScriptProcessor(512); //this.processor = processor;\n\n      processor.onaudioprocess = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var bufLength = buf.length;\n        var sum = 0;\n        var x; // Do a root-mean-square on the samples: sum up the squares...\n\n        for (var i = 0; i < bufLength; i++) {\n          x = buf[i];\n\n          if (Math.abs(x) >= this.clipLevel) {\n            this.clipping = true;\n            this.lastClip = window.performance.now();\n          }\n\n          sum += x * x;\n        } // ... then take the square root of the sum.\n\n\n        var rms = Math.sqrt(sum / bufLength); // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n\n        this.volume = Math.max(rms, this.volume * this.averaging);\n        if (!this.maxVolume) this.maxVolume = this.volume;\n        this.maxVolume = Math.max(this.volume, this.maxVolume);\n      };\n\n      processor.clipping = false;\n      processor.lastClip = 0;\n      processor.volume = 0;\n      processor.clipLevel = clipLevel || 0.99; //0.98;\n\n      processor.averaging = averaging || 0.97; //0.95;\n\n      processor.clipLag = clipLag || 500; //750;\n\n      processor.connect(audioContext.destination);\n\n      processor.checkClipping = function () {\n        if (!this.clipping) return false;\n        if (this.lastClip + this.clipLag < window.performance.now()) this.clipping = false;\n        return this.clipping;\n      };\n\n      processor.shutdown = function () {\n        this.disconnect();\n        this.onaudioprocess = null;\n      };\n\n      return processor;\n    }\n  }, {\n    key: \"setIsRecording\",\n    value: function setIsRecording(isRecording) {\n      if (this.isRecording === isRecording) {\n        console.log('same');\n        return;\n      }\n\n      this.isRecording = isRecording;\n      if (isRecording) this.startRecording();else this.stopRecording();\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (this.isRecording) {\n        if (this.audioContext) {\n          this.meter.disconnect(this.audioContext.destination);\n        } else {\n          console.log('error: no audioContext');\n        }\n\n        if (this.mediaStreamSource && this.meter) {\n          this.mediaStreamSource.disconnect(this.meter);\n        }\n\n        if (this.meter) {\n          this.meter.shutdown();\n        }\n\n        if (this.audioContext) {\n          this.audioContext.close();\n        }\n      }\n\n      this.isRecording = false;\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording() {\n      var _this2 = this;\n\n      if (this.isRecording) {\n        console.log('already recording');\n        return;\n      }\n\n      console.log('startRecording');\n      this.isRecording = true;\n      var audioContext = new AudioContext();\n      this.audioContext = audioContext;\n\n      var success = function success(stream) {\n        console.log('startRecording success');\n        _this2.mediaStreamSource = audioContext.createMediaStreamSource(stream);\n        _this2.meter = _this2.createAudioMeter(audioContext);\n\n        _this2.mediaStreamSource.connect(_this2.meter);\n\n        _this2.startDrawing();\n      };\n\n      var fail = function fail(e) {\n        alert('Microphone Error');\n        console.log('startRecording fail');\n        debugger;\n      };\n\n      try {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia; // ask for an audio input\n\n        navigator.getUserMedia({\n          \"audio\": {\n            \"mandatory\": {\n              \"googEchoCancellation\": \"false\",\n              \"googAutoGainControl\": \"false\",\n              \"googNoiseSuppression\": \"false\",\n              \"googHighpassFilter\": \"false\"\n            },\n            \"optional\": []\n          }\n        }, success, fail);\n      } catch (e) {\n        alert('getUserMedia threw exception :' + e);\n      }\n    }\n  }, {\n    key: \"loadAudioData\",\n    value: function loadAudioData(audioContext, source, callback) {\n      var _this3 = this;\n\n      this.audioContext = audioContext;\n      this.source = source;\n      source.connect(audioContext.destination);\n      var meter = this.createAudioMeter(audioContext);\n      this.meter = meter;\n      source.connect(this.meter);\n\n      source.onended = function () {\n        _this3.isPlaying = false;\n        source.disconnect(audioContext.destination);\n\n        _this3.meter.shutdown();\n\n        source.stop();\n\n        _this3.stopDrawing();\n\n        if (callback) callback();\n      };\n\n      this.isPlaying = true;\n      this.startDrawing();\n      source.start(0);\n    }\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing() {\n      this.isDrawing = true;\n      this.draw();\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.meter.volume = 0;\n      this.draw();\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (!this.canvas) {\n        console.log('no canvas');\n        return;\n      }\n\n      var ctx = this.canvas.getContext('2d');\n\n      if (this.theme.background) {\n        ctx.fillStyle = this.theme.background;\n        ctx.fillRect(0, 0, this.width, this.height);\n      } else {\n        ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      if (this.theme.bgOnColor || this.theme.bgOffColor) {\n        var maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, maxsize, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.isPlaying || this.isRecording ? this.theme.bgOnColor : this.theme.bgOffColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      ctx.lineWidth = this.theme.lineWidth;\n\n      if (this.theme.dotSize) {\n        var size = this.theme.dotSize;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, size, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.theme.dotColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      if (!this.isRecording && !this.isDrawing) {\n        console.log('not drawing');\n      } else {\n        // console.log('IS drawing ', this.meter.volume);\n        if (!this.meter) {\n          console.error('no mater');\n          this.startDrawing();\n          this.startRecording();\n          return;\n        }\n\n        ctx.strokeStyle = this.meter.checkClipping() ? this.theme.clipColor : this.theme.strokeColor;\n\n        var _maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n\n        var _size = this.meter.volume * _maxsize * 5;\n\n        if (_size > this.width / 2 - this.theme.lineWidth) _size = this.width / 2 - this.theme.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, _size, 0, 2 * Math.PI, false);\n\n        if (this.theme.fillColor) {\n          ctx.fillStyle = this.theme.fillColor;\n          ctx.fill();\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.isDrawing) {\n          window.requestAnimationFrame(this._draw);\n        }\n      }\n    }\n  }]);\n\n  return MonauralScope;\n}(EventEmitter);\n\nexport default MonauralScope;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\n// import EventEmitter from 'events';\nimport spinBrowser from './spin/transports/browser';\nimport CollectionModel from './CollectionModel'; // import SingletonModel from './SingletonModel';\n\nimport Spin from './spin/spin';\nimport Listener from './Listen';\nimport State from './State';\nimport Store from './Store';\nimport logger from './logger';\nimport Color from './Color';\nimport Sound from './Sound'; // import AudioScope from './AudioScope';\n\nimport MonauralScope from './MonauralScope';\n\nfunction postMessage(msg) {\n  console.log('client post', msg);\n  var data = {\n    '_jaxcore_client': {\n      message: msg,\n      protocol: 1\n    }\n  }; // if (msg.spin) {\n  // \tconsole.log(data);\n  // \tdebugger;\n  // }\n\n  window.postMessage(data, window.document.location.protocol + window.document.location.host);\n}\n\nvar Listen = new Listener(postMessage); //.setPostCommand();\n\nspinBrowser.setPostCommand(postMessage);\n\nvar JaxcoreClient =\n/*#__PURE__*/\nfunction (_State) {\n  _inherits(JaxcoreClient, _State);\n\n  function JaxcoreClient() {\n    var _this;\n\n    _classCallCheck(this, JaxcoreClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JaxcoreClient).call(this));\n    _this.reconnect = true;\n\n    _this.setState({\n      connectedExtension: false,\n      extensionReady: false\n    });\n\n    var onMessage = function onMessage(event) {\n      //event.isTrusted &&\n      if (document.location.href.indexOf(event.origin) === 0) {\n        if (event.data._jaxcore_content) {\n          var msg = event.data._jaxcore_content.message;\n\n          if (msg.socketDisconnected) {\n            _this.setState({\n              connectedExtension: false\n            });\n          } else if ('extensionReady' in msg) {\n            //console.log('extensionReady', msg);\n            _this.setState({\n              extensionReady: true\n            });\n\n            _this.emit('extension-ready'); // debugger;\n\n          } else if ('connectedExtension' in msg) {\n            _this.setState({\n              connectedExtension: msg.connectedExtension\n            });\n\n            if (msg.connectedExtension) {\n              //callback(null, true);\n              console.log('connectedExtension !');\n\n              _this.emit('connectedExtension');\n            } else {// this.connectExtension();\n            }\n          } else if (msg.spin) {\n            console.log('got spin data from bg', msg.spin);\n            spinBrowser.data(msg.spin);\n          } else if (msg.listen) {\n            console.log('got listen data from bg', msg.spin); //alert('Listen said: ' + msg.listen.recognizedText);\n            // spinBrowser.data(msg.spin);\n\n            Listen.recognizedText(msg.listen.recognizedText);\n          } else if (event.data.target && event.data.target === 'inpage') {} else {\n            console.log('client unhandled message', event.data);\n          }\n        } else {// console.log('not _jaxcore_content', event.data, event.origin);\n        }\n      } else {\n        console.log('nope', event);\n      }\n    };\n\n    window.addEventListener(\"message\", onMessage);\n    spinBrowser.on('command', function (spin, args) {\n      console.log('spin command', spin, args);\n    });\n    return _this;\n  }\n\n  _createClass(JaxcoreClient, [{\n    key: \"disconnectExtension\",\n    value: function disconnectExtension() {\n      this.reconnect = false; // console.log('disconnectExtension');\n\n      postMessage({\n        disconnectExtension: true\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      this.once('connectedExtension', callback);\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this2.connectExtension();\n        });\n      }\n    }\n  }, {\n    key: \"connectExtension\",\n    value: function connectExtension(callback) {\n      if (this.state.connectedExtension) {\n        console.log('already connectedExtension');\n        this.emit('connectedExtension');\n      } else {\n        // TO DO CHANGE TO LISTENER ?\n        console.log('Jaxcore connectExtension');\n        postMessage({\n          connectExtension: true\n        });\n      }\n    }\n  }, {\n    key: \"connectSpins\",\n    value: function connectSpins(callback) {\n      var _this3 = this;\n\n      console.log('connectSpins');\n      spinBrowser.addListener('spin-created', function (spin) {\n        callback(spin);\n      });\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this3.connectExtension();\n        });\n      } // if (this.state.connectedExtension) {\n      //\n      // }\n      //\n      // if (this.state.connectedExtension) {\n      // \tthis.onCreate(callback);\n      // } else {\n      // \tthis.once('connectedExtension', () => {\n      // \t\tthis.onCreate(callback);\n      // \t});\n      // \t// setTimeout(() => {\n      // \t\tthis.connectExtension(callback);\n      // \t// }, 1000);\n      // }\n\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(callback) {\n      var _this4 = this;\n\n      spinBrowser.addListener('spin-created', function (spin) {\n        _this4.emit(); // if (spin.state.connected) {\n        // \tcallback(spin);\n        // } else {\n        // \tspin.once('connected', function () {\n        // \t\tcallback(spin)\n        // \t});\n        // }\n\n      });\n    }\n  }]);\n\n  return JaxcoreClient;\n}(State);\n\nvar createStore = function createStore(name) {\n  return new Store(name);\n};\n\nvar createLogger = logger.create;\nexport { CollectionModel, State, Store, createStore, logger, createLogger, Color, Sound, Spin, Listen, MonauralScope };\nvar jaxcore = new JaxcoreClient();\nSpin.connectAll = jaxcore.connectSpins.bind(jaxcore); // todo: refactor this in a better way\n\nexport default jaxcore; // var Client = require('./client');\n// // var ES6Client = require('./es6client');\n//\n// module.exports = {\n// \tlogger: logger,\n// \tcreateLogger: logger.create,\n// \tStore: Store,\n// \tcreateStore: function(name) {\n// \t\treturn new Store(name);\n// \t},\n// \tClient: Client\n// \t// ES6Client: ES6Client\n// };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ListenApp from './ListenApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ListenApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var EventEmitter = require('events');\n\nvar Spin = require('../spin');\n\nfunction BrowserTransport() {\n  this.constructor();\n}\n\nBrowserTransport.prototype = new EventEmitter();\nBrowserTransport.prototype.constructor = EventEmitter;\n\nBrowserTransport.prototype.data = function (data) {\n  // console.log('onStoreUpdate', data);\n  if (data.store) {\n    // console.log('transport store', data.store);\n    for (var id in data.store) {\n      // console.log('on store', id, data.store[id]);\n      this.add(data.store[id]);\n    } //this.emit('spin-connected', spin);\n\n  } else if (data.created) {\n    // console.log('transport created', data.id, data.created);\n    this.add(data.created);\n  } else if (data.update) {\n    if (data.id in Spin.spinIds) {\n      // console.log('transport update', data.id);\n      this.update(data.id, data.update); //Spin.store.set();\n    } else {\n      console.log('transport postcreate', data.id);\n      data.update.id = data.id;\n      this.add(data.update); // this.add(data);\n    }\n  } else if (data.destroyed) {// console.log('transport created', data.id, data.created);\n  }\n};\n\nBrowserTransport.prototype.update = function (id, changes) {\n  var spin = Spin.spinIds[id]; // var changed = spin.setState(changes);\n  // if (!changed) {\n  // \tconsole.log('no changes');\n  // \treturn;\n  // }\n\n  for (var c in changes) {\n    spin.state[c] = changes[c];\n  } // console.log('update changed', changed);\n\n\n  if ('knobPushed' in changes) {\n    spin.emit('knob', changes.knobPushed);\n  }\n\n  if ('buttonPushed' in changes) {\n    spin.emit('button', changes.buttonPushed);\n  }\n\n  if ('spinPosition' in changes) {\n    // let diff;\n    // let throttled = false;\n    // if (spin._lastSpinPosition !== undefined) {\n    // \tdiff = spin.state.spinPosition - spin._lastSpinPosition;\n    // \tif (Math.abs(diff) > 1) {\n    // \t\tthrottled = true;\n    // \t\twhile (spin._lastSpinPosition !== spin.state.spinPosition) {\n    // \t\t\tconsole.log('skipping from', spin._lastSpinPosition, 'to', spin.state.spinPosition);\n    // \t\t\tspin._lastSpinPosition += diff>0? 1 : -1;\n    // \t\t\tspin.emit('spin', spin.state.spinDirection, spin._lastSpinPosition);\n    // \t\t}\n    // \t}\n    // }\n    // if (!throttled) {\n    // \tconsole.log('SPIN not throttled', spin.state.spinPosition);\n    // \tspin._lastSpinPosition = spin.state.spinPosition;\n    // \tspin.emit('spin', spin.state.spinDirection, spin.state.spinPosition);\n    // }\n    spin._lastSpinPosition = spin.state.spinPosition; // TODO: connected gets set to false upon reconnections\n    // if (spin.state.connected) {\n    // \tconsole.log('emit connected', spin.state.spinPosition);\n\n    spin.emit('spin', spin.state.spinDirection, spin.state.spinPosition); // }\n    // else {\n    // \tconsole.log('not connected?', spin.state.connected);\n    // }\n    // if (spin._lastSpinPosition === undefined) {\n    // \tconsole.log('first _lastSpinPosition', spin.state.spinPosition);\n    // \tdebugger;\n    // }\n    // else {\n    // }\n    // this.emit('update', spin.state);\n  }\n\n  if ('connected' in changes) {\n    if (changes.connected) {\n      this.emit('spin-connected', spin);\n      spin.emit('connect');\n    } else {\n      this.emit('spin-disconnected', spin);\n      spin.emit('disconnect');\n    }\n  }\n\n  console.log('update', changes);\n  spin.emit('update', changes); // spin.on('update', function(changes) {\n  // \tconsole.log('on update', changes);\n  // });\n};\n\nBrowserTransport.prototype.add = function (state) {\n  if (state.id in Spin.spinIds) {\n    // console.log('already added', state.id);\n    this.update(state.id, state);\n    return;\n  }\n\n  var spin = Spin.create(state, this);\n  this.emit('spin-created', spin); // if ('knobPushed' in data) {\n  // \tspin.processKnob(data['knobPushed']);\n  // }\n  // if ('buttonPushed' in data) {\n  // \tspin.processButton(data['buttonPushed']);\n  // }\n  // var me = this;\n  // if (spin.state.connected) {\n  // \t// me.emit('spin-created', spin);\n  // }\n  // else {\n  // \tspin.once('connect', function() {\n  // \t\tme.emit('spin-connected', spin);\n  // \t});\n  // }\n};\n\nBrowserTransport.prototype.remove = function (data) {};\n\nBrowserTransport.prototype.sendCommand = function (spin, args) {\n  // this.emit('command', spin, args);\n  console.log('sendCommand', spin.id, args);\n  var id = args.shift();\n  var method = args.shift();\n  console.log('args', args); //debugger;\n\n  this.postCommandFn({\n    spinCommand: {\n      id: id,\n      method: method,\n      args: args\n    }\n  });\n};\n\nBrowserTransport.prototype.setPostCommand = function (fn) {\n  this.postCommandFn = fn;\n};\n\nvar spinBrowser = new BrowserTransport();\nmodule.exports = spinBrowser;","var EventEmitter = require('events');\n\nvar plugin = require('jaxcore-plugin');\n\nvar log = plugin.createLogger('Spin Service');\nvar spinStore = plugin.createStore('Spin Store');\nvar Client = plugin.Client;\n\nvar SpinBuffer = require('./buffer'); // var udp, tcp, usb;\n// var SpinUDPService = require('./udp');\n// var udp = new SpinUDPService();\n//\n// var SpinTCPService = require('./tcp');\n// var tcp = new SpinTCPService();\n//\n// var SpinUSBService = require('./usb');\n// var usb = new SpinUSBService();\n//\n// var SpinBLEService = require('./ble');\n// var ble = new SpinBLEService();\n\n\nvar spinIds = {};\nvar spinIps = {}; // tcp.on('connect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp connect', id);\n//\n// \tudp.connectedTCP(id);\n//\n// \tspinIps[ip] = id;\n//\n// \tif (id in spinIds) {\n// \t\tspinIds[id]._connected();\n// \t\t// spinIds[id].emit('connect', spinIds[id]);\n// \t}\n// \t// var ip = socket.remoteAddress;\n// \t// log('connected',id,ip);\n// });\n//\n// tcp.on('disconnect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp disconnect', id, ip, spinIps);\n//\n// \tudp.disconnectedTCP(id);\n//\n// \tif (ip in spinIps) {\n//\n//\n// \t\tlog('destroying ', id, ip, spinIps[ip]);\n// \t\t//spinIds[id]._disconnected();\n//\n// \t\tspinIds[id].destroy();\n// \t\tdelete spinIds[id];\n// \t\tdelete spinIps[ip];\n//\n// \t}\n// \telse {\n// \t\tlog('got disconnected from unknown', ip);\n// \t}\n// });\n//\n// usb.on('connect', function (id) {\n// \tif (id in spinIds) {\n// \t\tlog('on usb connect', id);\n// \t\tspinIds[id]._connected();\n// \t}\n// \telse {\n// \t\tlog('error on usb connect', id);\n// \t}\n// });\n\nvar _instance = 0;\n\nfunction Spin(device, transport) {\n  this.constructor();\n  if (transport) this.transport = transport;else {\n    debugger;\n  }\n  var instance = _instance++;\n  this.log = plugin.createLogger('Spin ' + instance);\n  var ip = device.ip;\n  var id = device.id;\n  spinIds[id] = this;\n  this.id = id; // if (device.port) {\n  // \tthis.udpPort = device.port;\n  // }\n  // if (device.usbDevice) {\n  // \tthis.usbDevice = device.usbDevice;\n  // }\n  // if (device.blePeripheral) {\n  // \tthis.blePeripheral = device.blePeripheral;\n  // }\n\n  var now = new Date();\n  this.setStore(spinStore);\n  this.setDefaults(device, {\n    id: id,\n    ip: ip,\n    // remove ?\n    instance: instance,\n    connected: false,\n    spinPosition: 0,\n    spinDirection: 1,\n    spinPreviousTime: now,\n    spinTime: now,\n    knobPushed: false,\n    knobPushTime: now,\n    knobReleaseTime: now,\n    knobPushDuration: 0,\n    knobHold: false,\n    buttonPushed: false,\n    buttonPushTime: now,\n    buttonReleaseTime: now,\n    buttonPushDuration: 0,\n    buttonHold: false,\n    batteryVoltage: 0,\n    batteryPercent: 0,\n    isCharging: false,\n    isCharged: false,\n    sleeping: false,\n    inactivityTime: 0\n  });\n  this.createSettings({\n    brightness: 16,\n    knobHoldThreshold: 2000,\n    buttonHoldThreshold: 2000,\n    sleepEnabled: true,\n    sleepTimer: 0\n  }); // if (this.usbDevice) {\n  // \t// usb.addSpin(this);\n  // }\n  // else {\n  // \t// tcp.addSpin(spinIds, id);\n  // }\n}\n\nSpin.store = spinStore;\nSpin.spinIds = spinIds;\nSpin.Buffer = SpinBuffer;\nSpin.prototype = new Client();\nSpin.prototype.constructor = Client;\n\nSpin.prototype.setDefaults = function (config, defaults) {\n  this.setState(config);\n  var d = {};\n\n  for (var i in defaults) {\n    if (!(i in config)) {\n      d[i] = defaults[i];\n    }\n  }\n\n  this.setState(d);\n};\n\nSpin.prototype.createSettings = function (settings) {\n  this.settingDefaults = {};\n  this.settingNames = [];\n\n  for (var i in settings) {\n    this.settingNames.push(i);\n    this.settingDefaults[i] = settings[i];\n    this.state[i] = settings[i];\n  } //this.log('created settings', this.state);\n\n};\n\nSpin.prototype.changeSettings = function (settings) {\n  log('changing settings', settings);\n  var changes = {};\n  var hasChanges = false;\n\n  for (var name in settings) {\n    if (name in this.settingDefaults) {\n      var value = settings[name];\n      var d = {};\n      d[name] = settings[name];\n      var c = this.setState(d);\n\n      if (c) {\n        this.log('changed setting:', name + ' = ' + value, '(default ' + this.settingDefaults[name] + ')');\n        hasChanges = true;\n        changes[name] = value;\n      }\n    }\n  }\n\n  if (hasChanges) {\n    this.log('settings-changed', changes);\n    this.emit('settings-changed', changes);\n  }\n};\n\nSpin.prototype.buffer = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.spin.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferDelay = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.delay.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferReset = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.reset.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.cancelHoldEvents = function () {\n  clearTimeout(this._knobHoldTimer);\n  clearTimeout(this._buttonHoldTimer);\n};\n\nSpin.prototype.isConnected = function () {\n  return this.state.connected;\n};\n\nSpin.prototype._connected = function () {\n  this.resetDefaults();\n  this.setState({\n    connected: true,\n    sleeping: false\n  });\n  this.emit('connect', this);\n};\n\nSpin.prototype.connect = function () {\n  Spin.transport.connect(this); // if (this.usbDevice) {\n  // \tusb.connectSpin(this);\n  // }\n  // else {\n  // \tthis.log('connecting (' + this.udpPort + ')');\n  // \tudp.connectTCP(this.state.id, this.state.ip, this.udpPort);\n  // }\n};\n\nSpin.prototype._sleeping = function () {\n  this.setState({\n    sleeping: true\n  });\n  this.emit('sleeping');\n};\n\nSpin.prototype._removeEvents = function () {\n  var id = this.id; //tcp.disconnect(this.state.id, this.state.ip);\n\n  Spin.transport.remove(this); // if (this.usbDevice) {\n  // \tusb.removeSpin(this);\n  // }\n  // else {\n  // \ttcp.removeSpin(this);\n  // }\n};\n\nSpin.prototype.disconnect = function () {\n  this.setState({\n    connected: false\n  });\n  this.resetDefaults();\n  this.emit('disconnect', this);\n};\n\nSpin.prototype.resetDefaults = function () {\n  this.setState({\n    spinPosition: 0,\n    knobPushed: false,\n    knobReleased: true,\n    buttonPushed: false,\n    buttonReleased: true\n  });\n};\n\nSpin.prototype.processSpin = function (position) {\n  console.log('processSpin', position);\n  var direction = position > this.state.spinPosition ? 1 : -1;\n\n  if (position !== this.state.spinPosition) {\n    // var diff = this.state.spinPosition - position;\n    //\n    // if (Math.abs(diff) > 1 && this.state.throttle!=0) {\n    // \tvar throttledPosition = this.state.spinPosition;\n    // \t// while (this.state.spinPosition !== position) {\n    // \t// \tthrottledPosition = throttledPosition + direction;\n    // \t// \tthis.processEncoder(throttledPosition, direction, true);\n    // \t// \tthis.log(direction, 'position:', throttledPosition, this.state.spinPosition === position?'(synced)':'(throttled)');\n    // \t// }\n    // }\n    // else {\n    // \tthis.log(direction, 'position:', position);\n    // \tthis.processEncoder(position, direction, false);\n    // }\n    //\n    // this.setState({\n    // \tdirection\n    // });\n    this.processEncoder(position, direction, false);\n  }\n};\n\nSpin.prototype.processEncoder = function (position, direction, throttled) {\n  var changes = {};\n  this.cancelHoldEvents();\n\n  if (direction !== this.state.spinDirection) {\n    changes.spinDirection = direction;\n  }\n\n  changes.spinPosition = position;\n  changes.spinPreviousTime = this.state.spinTime;\n  changes.spinTime = new Date().getTime();\n  this.setState(changes);\n  this.emit('spin', direction, position, throttled); // this.emit('update', changes);\n};\n\nSpin.prototype.processKnob = function (pushed) {\n  //this.log('KNOB', pushed);\n  var me = this;\n  var changes = {};\n  changes.knobPushed = pushed;\n  changes.knobReleased = !pushed;\n\n  if (pushed) {\n    changes.knobPushTime = new Date().getTime();\n    this.setState(changes);\n    clearTimeout(this._knobHoldTimer);\n    this._knobHoldTimer = setTimeout(function () {\n      me.log('knobHoldThreshold exceeded');\n      me.setState({\n        knobHold: true\n      });\n      me.emit('knob-hold');\n    }, this.state.knobHoldThreshold);\n  } else {\n    var wasHeld = this.state.knobHold;\n\n    if (wasHeld) {\n      changes.knobHold = false;\n      me.emit('knob-hold');\n      this.log('knob was held, cancelling presses');\n    }\n\n    changes.knobReleaseTime = new Date().getTime(); // changes.knobReleaseTime;\n    // changes.knobReleaseTime - this.state.knobPushTime;\n\n    clearTimeout(this._knobHoldTimer); // if (me.state.knobPushDuration > me.state.knobLongPressThreshold) {\n    // \tme.log('knobLongPressThreshold exceeded');\n    // \tme.emit('knob-longpress');\n    // }\n    // else {\n    // \tme.emit('knob-press');\n    // }\n\n    this.setState(changes);\n\n    if (wasHeld) {\n      this.emit('knob-longpress');\n    } else {\n      this.emit('knob-press');\n    }\n  }\n\n  this.emit('knob', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processButton = function (pushed) {\n  var me = this;\n  var changes = {};\n  changes.buttonPushed = pushed;\n  changes.buttonReleased = !pushed;\n\n  if (pushed) {\n    changes.buttonPushTime = new Date().getTime();\n    clearTimeout(this._buttonHoldTimer);\n    this._buttonHoldTimer = setTimeout(function () {\n      me.log('buttonHoldThreshold exceeded'); // me.setState({\n      // \tbuttonHold: true\n      // });\n\n      changes.buttonHold = true;\n      me.emit('button-hold');\n    }, this.state.buttonHoldThreshold);\n  } else {\n    var wasHeld = this.state.buttonHold;\n\n    if (wasHeld) {\n      changes.buttonHold = false;\n      this.log('button was held, cancelling presses');\n    }\n\n    changes.buttonReleaseTime = new Date().getTime();\n    changes.buttonPushDuration = changes.buttonReleaseTime - this.state.buttonPushTime;\n    clearTimeout(this._buttonHoldTimer); // if (me.state.buttonPushDuration > me.state.buttonLongPressThreshold) {\n    // \tme.log('buttonLongPressThreshold exceeded');\n    // \tme.emit('button-longpress');\n    // }\n    // else {\n    // \tme.emit('button-press');\n    // }\n  } //debugger;\n\n\n  this.setState(changes);\n\n  if (wasHeld) {\n    this.emit('button-longpress');\n  } else {\n    this.emit('button-press');\n  }\n\n  this.emit('button', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processStatus = function (batteryVoltage, isCharging, isCharged, sleepTimer, inactivityTime, sleepEnabled) {\n  // round off batteryVoltage\n  batteryVoltage = Math.round(batteryVoltage * 10) / 10;\n  var first = this.state.batteryVoltage === 0;\n  var changes = {};\n  var hasChanges = false;\n\n  if (this.state.sleepTimer !== sleepTimer) {\n    this.state.sleepTimer = changes.sleepTimer = sleepTimer;\n    hasChanges = true;\n  }\n\n  if (this.state.inactivityTime !== inactivityTime) {\n    this.state.inactivityTime = changes.inactivityTime = inactivityTime;\n  }\n\n  if (this.state.sleepEnabled !== sleepEnabled) {\n    this.state.sleepEnabled = changes.sleepEnabled = sleepEnabled;\n    hasChanges = true;\n  }\n\n  if (this.state.isCharged !== isCharged) {\n    this.state.isCharged = isCharged;\n    changes.isCharged = isCharged;\n    if (!first) this.emit('charged', isCharged);\n  }\n\n  if (this.state.batteryVoltage !== batteryVoltage) {\n    hasChanges = true;\n    this.state.batteryVoltage = changes.batteryVoltage = batteryVoltage;\n    this.state.batteryPercent = changes.batteryPercent = isCharging ? 1 : Math.min(batteryVoltage / 4.2, 1);\n\n    if (!first) {\n      // dont emit event on first reception\n      this.emit('battery', batteryVoltage, changes.batteryPercent);\n    }\n\n    if (this.state.isCharging !== isCharging) {\n      this.state.isCharging = isCharging;\n      changes.isCharging = isCharging;\n      if (!first) this.emit('charging', isCharging);\n    }\n  } // if (hasChanges) this.emit('update', changes);\n\n};\n\nSpin.prototype.processSleep = function (status, millis) {\n  switch (status) {\n    case 0:\n      this.emit('wake');\n      break;\n\n    case 1:\n      this.emit('sleep-warning', millis);\n      break;\n\n    case 2:\n      this._sleeping();\n\n      break;\n  }\n};\n\nSpin.prototype.sendCommand = function () {\n  var args = Array.prototype.slice.call(arguments);\n  this.transport.sendCommand(this, args); // if (this.usbDevice) {\n  // \tusb.sendCommand.apply(usb, args);\n  // }\n  // else {\n  // \ttcp.sendCommand.apply(tcp, args);\n  // } //this.id, 'FLASH', color.join(',') + ',' + repeat);\n};\n\nSpin.prototype.flash = function (color) {\n  this.sendCommand(this.id, 'FLASH', color); //color.join(','));\n  // if (this.bleDevice) this.bleDevice.flash(color);\n  // else {\n  // \tcolor.push(1);\n  // \tthis.sendCommand(this.id, 'FLASH', color.join(','));\n  // }\n};\n\nSpin.prototype.quickFlash = function (color, repeat) {\n  if (!repeat) repeat = 1;\n  if (this.bleDevice) this.bleDevice.quickFlash(color, repeat);else this.sendCommand(this.id, 'QUICKFLASH', color.join(',') + ',' + repeat);\n}; // Spin.prototype.quickFlashSingle = function (color, index) {\n// \tif (!index) index = 0;\n// \tindex = parseInt(index);\n// \tthis.sendCommand(this.id, 'QUICKFLASHONE', color.join(',') + ',' + index);\n// };\n\n\nSpin.prototype.lightsOn = function (color) {\n  if (this.bleDevice) this.bleDevice.lights(color);else this.sendCommand(this.id, 'LIGHTSON', color);\n};\n\nSpin.prototype.lightsOff = function () {\n  if (this.bleDevice) this.bleDevice.lights([0, 0, 0]);else this.sendCommand(this.id, 'LIGHTSOFF');\n};\n\nSpin.prototype.setThrottle = function (throttle) {\n  this.setState({\n    throttle: 0\n  });\n  if (!this.bleDevice) this.sendCommand(this.id, 'THROTTLE', throttle);\n};\n\nSpin.prototype.setBrightness = function (brightness) {\n  if (this.bleDevice) this.bleDevice.setBrightness(brightness);else this.sendCommand(this.id, 'BRIGHTNESS', brightness);\n};\n\nSpin.prototype.setName = function (name) {\n  if (this.bleDevice) this.bleDevice.setName(name);\n}; // Spin.prototype.setRotateColors = function (mode, colorLeft, colorRight) {\n// \tthis.sendCommand(this.id, 'ROTATECOLORS', colorLeft.concat(colorRight));\n// };\n\n\nSpin.prototype.rotate = function (direction, mode, color1, color2) {\n  if (!mode) mode = 0;\n  this.log('rotate', direction, mode);\n  if (this.bleDevice) this.bleDevice.rotate(mode, direction, color1, color2);else this.sendCommand(this.id, 'ROTATE', [mode, direction]);\n}; // Spin.prototype.setScaleColors = function (mode, colorLow, colorHigh, colorPoint) {\n// \tthis.sendCommand(this.id, 'SCALECOLORS', colorLow.concat(colorHigh).concat(colorPoint));\n// };\n\n\nSpin.prototype.scale = function (percent, mode, color1, color2, color3) {\n  if (this.bleDevice) this.bleDevice.scale(mode, percent, color1, color2, color3);else this.sendCommand(this.id, 'SCALAR', [mode, percent]);\n};\n\nSpin.prototype.sleep = function () {\n  if (this.bleDevice) this.bleDevice.sleep();\n  this.sendCommand(this.id, 'SLEEP');\n};\n\nSpin.prototype.delaySleep = function () {\n  if (this.bleDevice) this.bleDevice.delaySleep();else this.sendCommand(this.id, 'DELAYSLEEP');\n}; // Spin.prototype.setSleepEnabled = function (enabled) {\n// \tif (enabled) this.sendCommand(this.id, 'ENABLESLEEP');\n// \telse this.sendCommand(this.id, 'DISABLESLEEP');\n// };\n// Spin.prototype.enableSleep = function () {\n// \ttcp.sendCommand(this.id, 'ENABLESLEEP');\n// };\n// Spin.prototype.disableSleep = function () {\n// \ttcp.sendCommand(this.id, 'DISABLESLEEP');\n// };\n\n\nSpin.prototype.setKnobHoldThreshold = function (th) {\n  this.changeSettings({\n    knobHoldThreshold: th\n  });\n};\n\nSpin.prototype.setButtonHoldThreshold = function (th) {\n  this.changeSettings({\n    buttonHoldThreshold: th\n  });\n};\n\nSpin.prototype.setSleepTimer = function (minutes) {\n  if (this.bleDevice) this.bleDevice.setSleepTimer(minutes);else {\n    var ms = minutes * 60 * 1000;\n    this.sendCommand(this.id, 'SLEEPTIMER', ms);\n  }\n};\n\nSpin.prototype.destroy = function () {\n  this.disconnect();\n  this.log('destroying');\n\n  this._removeEvents();\n\n  delete this.state;\n};\n\nSpin.debug = function (q) {\n  plugin.logger.quiet(!q);\n};\n\nSpin.spinIds; // Spin.startServices = function () {\n// \tudp.startService();\n// \ttcp.startService();\n// };\n//\n// Spin.scan = function () {\n// \tSpin.startServices();\n//\n// \tvar _id;\n// \tvar callback;\n// \tif (arguments.length === 2) {\n// \t\tif (arguments[0] === null) {\n// \t\t\tlog('scanning');\n// \t\t}\n// \t\telse {\n// \t\t\tlog('scanning for ' + arguments[0]);\n// \t\t}\n// \t\tcallback = arguments[1];\n// \t}\n// \telse {\n// \t\tcallback = arguments[0];\n// \t\tlog('scanning');\n// \t}\n//\n// \t// var found = {};\n//\n// \tvar stop = function () {\n// \t\tudp.removeListener('ping', scanPing);\n// \t\tlog('stopped scanning');\n// \t};\n//\n// \tvar rescan = function () {\n// \t\t// found = {};\n// \t\tSpin.scan(callback);\n// \t};\n//\n// \tvar scanPing = function (pingNumber, ip, id, port, protocol, version, name, lastModified) {\n// \t\tif (!udp.isConnecting(id)) {\n//\n// \t\t\tif (!_id || _id === id) {\n// \t\t\t\t// if (found[id]) {\n// \t\t\t\t// \tlog('previously found', id);\n// \t\t\t\t// }\n// \t\t\t\t// else {\n// \t\t\t\t// \tfound[id] = true;\n//\n// \t\t\t\tcallback({\n// \t\t\t\t\tip: ip,\n// \t\t\t\t\tid: id,\n// \t\t\t\t\tport: port\n// \t\t\t\t}, stop, rescan);\n//\n// \t\t\t\t//}\n// \t\t\t}\n//\n// \t\t}\n// \t\telse log('connectAll isConnecting', id);\n// \t};\n//\n// \tudp.addListener('ping', scanPing);\n// };\n//\n// Spin.connectAll = function (callback) {\n// \tSpin.connectWifi(callback);\n// \t// Spin.connectUSB(callback);\n// \tSpin.connectBLE(callback);\n// };\n//\n// Spin.connectWifi = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tlog('connectAll found', device);\n// \t\tvar spin = Spin.create(device);\n// \t\tspin.once('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n// \t\tspin.connect();\n// \t});\n// };\n//\n// Spin.connectOne = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tdone();\n// \t\tlog('connectOne found', device);\n//\n// \t\tvar spin = Spin.create(device);\n//\n// \t\tspin.on('disconnect', function () {\n// \t\t\tlog('scan disconnect');\n// \t\t\trescan();\n// \t\t});\n//\n// \t\tcallback(spin);\n//\n// \t\tspin.connect();\n// \t});\n//\n// \t// Spin.connectTo(null, callback);\n// };\n//\n\nSpin.create = function (device, transport) {\n  if (device.id in spinIds) {\n    log('device exists', device);\n    spinIds[device.id].destroy();\n    delete spinIds[device.id];\n    var spin = new Spin(device, transport);\n    return spinIds[device.id];\n  } else {\n    log('creating new device', device, transport);\n    return new Spin(device, transport);\n  }\n}; //\n// Spin.connectTo = function (id, callback) {\n// \tSpin.scan(id, function (device, done, rescan) {\n// \t\tif (!id || device.id === id) {\n// \t\t\tdone();\n//\n// \t\t\tlog('connectTo found', device);\n//\n// \t\t\tvar spin = Spin.create(device);\n//\n// \t\t\tspin.on('disconnect', function () {\n// \t\t\t\tlog('scan disconnect');\n// \t\t\t\trescan();\n// \t\t\t});\n//\n// \t\t\tcallback(spin);\n//\n// \t\t\tspin.connect();\n// \t\t}\n// \t});\n// };\n//\n// Spin.connectUSBDevice = function (devicePath, callback) {\n// \tif (devicePath in usb.ids) {\n// \t\tlog(devicePath,'already exists');\n// \t\tusb.open(devicePath);\n// \t\treturn false;\n// \t}\n// \tlog('connecting usb', devicePath);\n//\n// \tvar spin = Spin.create({\n// \t\tid: devicePath,\n// \t\tusbDevice: devicePath\n// \t});\n//\n// \tspin.on('connect', function () {\n// \t\tlog('usb connect');\n// \t\tcallback(spin);\n// \t});\n//\n// \tspin.on('disconnect', function () {\n// \t\tlog('usb disconnect');\n// \t});\n//\n// \tspin.connect();\n// \treturn true;\n// };\n//\n// function startInterval(cb,t) {\n// \tcb();\n// \treturn setInterval(cb,t);\n// }\n//\n// Spin.connectUSB = function () {\n// \tvar devicePath, callback;\n// \tif (arguments.length === 1) {\n// \t\tcallback = arguments[0];\n// \t\tstartInterval(function() {\n// \t\t\tusb.getSpinUSBPorts(function(devicePaths) {\n// \t\t\t\tlog('usb', devicePaths);\n// \t\t\t\tdevicePaths.forEach(function(devicePath) {\n// \t\t\t\t\tSpin.connectUSBDevice(devicePath, callback);\n// \t\t\t\t});\n// \t\t\t});\n// \t\t},5000);\n// \t}\n// \telse if (arguments.length === 2) {\n// \t\tdevicePath = arguments[0];\n// \t\tcallback = arguments[1];\n// \t\tSpin.connectUSBDevice(devicePath, callback);\n// \t}\n// };\n//\n// Spin.connectBLE = function() {\n// \tif (typeof ble==='undefined') return;\n// \tvar deviceId, callback;\n//\n// \tif (arguments.length===2) {\n// \t\tdeviceId = arguments[0];\n// \t\tcallback = arguments[1];\n// \t}\n// \telse callback = arguments[0];\n//\n// \tble.on('discover', function(peripheral) {\n// \t\tvar id = peripheral.id;\n// \t\tif (deviceId) {\n// \t\t\tif (id !== deviceId) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n//\n// \t\tif (deviceId) {\n// \t\t\tble.stopScan();\n// \t\t}\n//\n// \t\tif (id in ble.ids) {\n// \t\t\tlog('ble already exists',id);\n// \t\t\t//ble.connect(devicePath);\n// \t\t\treturn false;\n// \t\t}\n//\n// \t\tlog('connecting ble', id);\n//\n// \t\tvar spin = Spin.create({\n// \t\t\tid: id,\n// \t\t\tblePeripheral: peripheral\n// \t\t});\n//\n// \t\tspin.on('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n//\n// \t\t// spin.on('disconnect', function() {\n// \t\t// \t//callback(spin);\n// \t\t// \tconsole.log('disconnect ble??');\n// \t\t// });\n//\n// \t\tble.connectSpin(spin);\n//\n// \t});\n//\n// \tble.scan();\n// };\n\n\nmodule.exports = Spin;","// var chalk = require('chalk');\nvar chalk = {\n  green: console.log,\n  yellow: console.log,\n  cyan: console.log,\n  magenta: console.log\n};\n\nvar _quiet = process.env.NODE_ENV !== 'dev';\n\nvar logger = {\n  quiet: function quiet(q) {\n    _quiet = q;\n  },\n  log: function log() {\n    if (_quiet) return;\n    var args = Array.prototype.slice.call(arguments);\n    args = args.map(function (arg, index) {\n      if (index === 0 && typeof arg === 'object' && arg.loggerName) {\n        return chalk.green(arg.loggerName);\n      }\n\n      if (typeof arg === 'string') {\n        if (index >= 2 && typeof args[0] === 'object' && args[0].loggerName && typeof args[1] === 'string') return arg;\n        return chalk.cyan(arg);\n      }\n\n      if (typeof arg === 'number') return chalk.magenta(arg);\n      if (arg === null) return chalk.yellow('null');\n      if (typeof arg === 'undefined') return chalk.yellow('undefined');\n      return arg;\n    });\n    console.log.apply(null, args);\n  },\n  create: function create(name, colors) {\n    return function (n) {\n      return function log() {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift({\n          loggerName: n\n        });\n        logger.log.apply(logger, args);\n      };\n    }(name);\n  }\n};\nmodule.exports = logger;","var EventEmitter = require('events');\n\nvar createLogger = require('./logger').create;\n\nfunction Store(name) {\n  this.constructor();\n  this.log = createLogger(name);\n  this.log('created');\n  this.ids = {};\n}\n\nStore.prototype = new EventEmitter();\nStore.prototype.constructor = EventEmitter;\n\nStore.prototype.destroy = function (id) {\n  this.log('destroying', id);\n  this[id].removeAllListeners('created');\n  this[id].removeAllListeners('update');\n  delete this.ids[id];\n  delete this[id];\n  this.emit('destroyed', id);\n};\n\nStore.prototype.set = function (id, data) {\n  // console.log('set', id, data);\n  if (!id) {\n    console.log('no set id', data);\n    return;\n  }\n\n  var changes = {};\n  var hasChanges = false;\n  var created = false;\n\n  if (!this[id]) {\n    this[id] = data;\n    this.ids[id] = true;\n    this.emit('created', id, data);\n    this.log('created', id, data);\n    hasChanges = true;\n    created = true;\n    changes = data;\n  } else {\n    var s = this[id];\n\n    for (var i in data) {\n      if (s[i] !== data[i]) {\n        hasChanges = true;\n        changes[i] = s[i] = data[i];\n      }\n    }\n  }\n\n  if (hasChanges) {\n    if (!created) {// this.log(id + ' update', changes);\n      // console.log(id + ' update', changes);\n    }\n\n    this.emit('update', id, changes);\n    return changes;\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = Store;","function isColor(c) {\n  return c instanceof Color;\n}\n\nvar colors = require('./colors');\n\nvar Color = function Color() {\n  if (arguments.length === 1 && typeof arguments[0] === 'number' && arguments[0] >= 0 && arguments[0] <= 255) {\n    return this.value = colors.rgb(arguments[0], arguments[0], arguments[0]);\n  }\n\n  if (isColor(arguments[0])) this.value = arguments[0].value;else this.value = arguments.length > 0 ? colors.rgb.apply(null, Array.from(arguments)) : '#000';\n};\n\nColor.prototype = {\n  toString: function toString() {\n    return this.value;\n  },\n  // setters\n\n  /**\n   * Sets the transparency of a color\n   *\n   * @method alpha\n   * @memberof Color\n   * @param {Number} alpha transparency level between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').alpha(0.5);  // returns {value:\"rgba(255,0,0,0.5)\"}\n   *\n   */\n  alpha: function alpha(v) {\n    return new Color(colors.alpha(this.value, v));\n  },\n\n  /**\n   * Increases the \"lightness\" of a color value\n   *\n   * @method lighten\n   * @memberof Color\n   * @param {Number} lightenBy amount to lighten between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').lighten(0.5); // returns {value:\"#FF8080\"}\n   *\n   */\n  lighten: function lighten(v) {\n    return new Color(colors.lighten(this.value, v));\n  },\n\n  /**\n   * Decreases the \"lightness\" of a color value\n   *\n   * @method darken\n   * @memberof Color\n   * @param {Number} darkenBy amount to darken between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').darken(0.5); // returns {value:\"#800000\"}\n   *\n   */\n  darken: function darken(v) {\n    return new Color(colors.darken(this.value, v));\n  },\n\n  /**\n   * Increases the \"saturation\" of a color value\n   *\n   * @method saturate\n   * @memberof Color\n   * @param {Number} saturateBy amount to saturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(125,0,0)').saturate(0.2); // returns {value:\"#7D0000\"}\n   *\n   */\n  saturate: function saturate(v) {\n    return new Color(colors.saturate(this.value, v));\n  },\n\n  /**\n   * Decreases the \"saturation\" of a color value\n   *\n   * @method desaturate\n   * @memberof Color\n   * @param {Number} desaturateBy amount to desaturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(125,0,0).desaturate(0.2); // returns {value:\"#710C0C\"}\n   *\n   */\n  desaturate: function desaturate(v) {\n    return new Color(colors.desaturate(this.value, v));\n  },\n\n  /**\n   * Modify the hue, lightness, and saturation of a color\n   *\n   * @method shiftHSL\n   * @memberof Color\n   * @param {Number} hue amount to change the hue by, between 0 and 1\n   * @param {Number} saturation amount to change the hue by, between 0 and 1\n   * @param {Number} lightness amount to change the hue by, between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHSL(0.1,0.2,0.3); // returns {value:\"#94FF4D\"}\n   *\n   */\n  shiftHSL: function shiftHSL(h, s, l, a) {\n    var c = new Color(colors.shiftHSL(this.value, h, s, l));\n    if (a) c = c.alpha(a);\n    return c;\n  },\n\n  /**\n   * Shifts the \"hue\" of a color value by a given percentage\n   *\n   * @method shiftHue\n   * @memberof Color\n   * @param {Number} hueShift amount to modify the hue by between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHue(0.25); // returns {value:\"#00FF7F\"}\n   *\n   */\n  shiftHue: function shiftHue(v) {\n    return new Color(colors.shiftHue(this.value, v));\n  },\n\n  /**\n   * Shifts the hue of a color closer to another color by a given percentage\n   *\n   * @method combine\n   * @memberof Color\n   * @param {Object} targetColor color string, array, or object\n   * @param {Number} [amount=0.5] how close to the target color between 0 and 1 (0.5 is half-way between)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(0).combine('#fff'); // returns {value:\"#808080\"}\n   * new Color(255,0,0).combine('#00f',0.7); // returns {value:\"#4D00B3\"}\n   *\n   */\n  combine: function combine(t, v) {\n    if (isColor(t)) t = t.value;\n    var c = colors.combine(this.value, t, v);\n    return new Color(c);\n  },\n\n  /**\n   * Shifts the \"hue\" of a color closer to another color by a given percentage\n   *\n   * @method tint\n   * @memberof Color\n   * @param {String} targetColor color string or array\n   * @param {Number} amount amount to shift the hue toward the target color between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').tint('#00f',0.5); // returns {value:\"#F0F\"}\n   * new Color('rgb(0,0,100)').tint('rgb(100,0,0)',0.1); // returns {value:\"#140064\"}\n   *\n   */\n  tint: function tint(t, v) {\n    if (isColor(t)) t = t.value;\n    return new Color(colors.tint(this.value, t, v));\n  },\n\n  /**\n   * Set the \"hue\" of a color\n   *\n   * @method hue\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hue(2/3); // returns {value:\"#00F\"}\n   * new Color('#0f0').hue(1); // returns {value:\"#F00\"}\n   * new Color('#00f').hue(1/3); // returns {value:\"#0F0\"}\n   *\n   */\n  hue: function hue(v) {\n    return new Color(colors.hue(this.value, v));\n  },\n\n  /**\n   * Set the \"saturation\" of a color\n   *\n   * @method saturation\n   * @memberof Color\n   * @param {Number} saturation saturation value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,50,50)').saturation(0); // returns {value:\"#4B4B4B\")\n   * new Color('rgb(50,0,0)').saturation(0.5);  // returns {value:\"#260C0C\")\n   * new Color('rgb(50,50,100)').saturation(1); // returns {value:\"#000096\")\n   *\n   */\n  saturation: function saturation(v) {\n    return new Color(colors.saturation(this.value, v));\n  },\n\n  /**\n   * Set the lightness of a color, how close to white or black the color will be\n   *\n   * @method lightness\n   * @memberof Color\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').lightness(0); // returns {value:\"#000\"}\n   * new Color('rgb(255,0,0)').lightness(0.5); // returns {value:\"#F00\"}\n   * new Color('rgb(255,0,0)').lightness(1); // returns {value:\"#FFF\"}\n   *\n   */\n  lightness: function lightness(v) {\n    return new Color(colors.lightness(this.value, v));\n  },\n\n  /**\n   * Inverts the color\n   *\n   * @method invert\n   * @memberof Color\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').invert(1); // returns {value:\"#0FF\"}  // cyan\n   * new Color('#fff').invert();  // returns {value:\"#000\"}   // black\n   *\n   */\n  invert: function invert() {\n    return new Color(colors.invert(this.value));\n  },\n\n  /**\n   * Modify the red, green, or blue component of a color\n   *\n   * @method rgb\n   * @memberof Color\n   * @param {Number} red red component (0-255)\n   * @param {Number} green green component (0-255)\n   * @param {Number} blue blue component (0-255)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').rgb(null,null,255); // returns {value:\"#F0F\"}\n   * new Color('#0f0').rgb(null,255,null); // returns {value:\"#0F0\"}\n   * new Color('#ff0').rgb(null,null,255); // returns {value:\"#FFF\"}\n   * new Color('#fff').rgb(100);           // returns {value:\"#64FFFF\"}\n   *\n   */\n  rgb: function rgb() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setRGB.apply(null, a));\n  },\n\n  /**\n   * Set the hue, saturation, or lightness of a color and return the new color\n   *\n   * @method hsl\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @param {Number} saturation saturation value between 0 and 1\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hsl(null,0.5,0.5); // returns {value:\"#BF4040\"}\n   *\n   */\n  hsl: function hsl() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setHSL.apply(null, a));\n  },\n\n  /**\n   * Set the red component of a color\n   *\n   * @method red\n   * @memberof Color\n   * @param {Number} red red component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,255)').red(255);  // returns {value:\"#F0F\"}\n   *\n   */\n  red: function red(r) {\n    return this.rgb(r);\n  },\n\n  /**\n   * Set the green component of a color\n   *\n   * @method green\n   * @memberof Color\n   * @param {Number} green green component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').green(255);  // returns {value:\"#FF0\"}\n   *\n   */\n  green: function green(g) {\n    return this.rgb(null, g);\n  },\n\n  /**\n   * Set the blue component of a color\n   *\n   * @method blue\n   * @memberof Color\n   * @param {Number} blue blue component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#FF0').blue(255);  // returns {value:\"#FFF\"}\n   *\n   */\n  blue: function blue(b) {\n    return this.rgb(null, null, b);\n  },\n  // getters\n\n  /**\n   * Returns the transparency of a color\n   *\n   * @method getAlpha\n   * @memberof Color\n   * @return {Number} alpha transparency level between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getAlpha(); // returns 0\n   * new Color('rgba(255,0,0,0.5)').getAlpha(); // returns 0.5\n   *\n   */\n  getAlpha: function getAlpha() {\n    return colors.getAlpha(this.value);\n  },\n\n  /**\n   * Returns the computed red, green, blue, and alpha values as an array\n   *\n   * @method getRGB\n   * @memberof Color\n   * @return {Number[]} rgb array\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getRGB(); // returns [255,0,0]\n   * new Color('rgba(255,0,0,0.5)').getRGB()(); // returns [255,0,0,0.5]\n   *\n   */\n  getRGB: function getRGB() {\n    return colors.getRGB(this.value);\n  },\n\n  /**\n   * Returns the hexidecimal value of the color\n   *\n   * @method getHex\n   * @memberof Color\n   * @param {Boolean} full return the full 6 character hexidecimal value (eg. do not shorten #FFFFFF to #FFF)\n   * @return {String} hex color value\n   * @instance\n   *\n   * @example\n   * new Color('rgba(255,0,0,0.5)').getHex(); // returns \"#F0F\"\n   * new Color('rgba(255,0,0,0.5)').getHex(true); // returns \"#FF0000\"\n   *\n   */\n  getHex: function getHex(full) {\n    return colors.getHex(this.value, full);\n  },\n\n  /**\n   * Returns the red component of a color string\n   *\n   * @method getRed\n   * @memberof Color\n   * @return {Number} red component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getRed(); // returns 255\n   *\n   */\n  getRed: function getRed() {\n    return this.getRGB()[0];\n  },\n\n  /**\n   * Returns the green component of a color string\n   *\n   * @method getGreen\n   * @memberof Color\n   * @return {Number} green component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getGreen(); // returns 255\n   *\n   */\n  getGreen: function getGreen() {\n    return this.getRGB()[1];\n  },\n\n  /**\n   * Returns the blue component of a color string\n   *\n   * @method getBlue\n   * @memberof Color\n   * @return {Number} blue component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getBlue(); // returns 255\n   *\n   */\n  getBlue: function getBlue() {\n    return this.getRGB()[2];\n  },\n\n  /**\n   * Returns an [h,s,l] array from color string\n   *\n   * @method getHSL\n   * @memberof Color\n   * @return {Number[]} hsl array of [hue,saturation,lightness]\n   * @instance\n   *\n   * @example\n   * new Color('#f00').getHSL(); // returns [0,1,0.5]\n   *\n   */\n  getHSL: function getHSL() {\n    return colors.getHSL(this.value);\n  },\n\n  /**\n   * Return the \"hue\" of a color\n   *\n   * @method getHue\n   * @memberof Color\n   * @return {Number} hue hue value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#a1b2c1').getHue(); // returns {value:\"0.578125\"}\n   * new Color('#f00').getHue(); // returns 0\n   * new Color('#0f0').getHue(); // returns 0.3333333333333333\n   * new Color('#00f').getHue(); // returns 0.6666666666666666\n   *\n   */\n  getHue: function getHue() {\n    return this.getHSL()[0];\n  },\n\n  /**\n   * Return the \"saturation\" of a color\n   *\n   * @method getSaturation\n   * @memberof Color\n   * @return {Number} saturation saturation value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,100,100)').getSaturation(); // returns 0\n   * new Color('rgb(100,50,100)').getSaturation();  // returns 0.8333333333333334\n   * new Color('rgb(100,0,100)').getSaturation();   // returns 1\n   *\n   */\n  getSaturation: function getSaturation() {\n    return this.getHSL()[1];\n  },\n\n  /**\n   * Return the lightness of a color (how close to white or black the color is)\n   *\n   * @method getLightness\n   * @memberof Color\n   * @return {Number} lightness lightness value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,0)').getLightness();       // returns 0\n   * new Color('rgb(100,50,100)').getLightness();  // returns 0.29411764705882354\n   * new Color('rgb(255,255,255)').getLightness(); // returns 1\n   *\n   */\n  getLightness: function getLightness() {\n    return this.getHSL()[2];\n  }\n};\nColor.prototype.rgba = Color.prototype.rgb;\nColor.prototype.hsla = Color.prototype.hsl;\nmodule.exports = Color;","import React, {Component} from 'react';\nimport Jaxcore, {Listen, MonauralScope} from 'jaxcore-client';\n\nimport wordsToNumbers from 'words-to-numbers';\n\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\nconst letterPhonetics = {\n\ta: ['ah', 'and'],\n\tb: ['be'],\n\tc: ['see'],\n\td: ['de'],\n\te: ['he'],\n\tf: ['as', 'at'],\n\t// g: [],\n\th: ['each', 'eh'],\n\t// i: [''],\n\tj: ['je'],\n\tk: ['kay', 'kate', 'can'],\n\tl: [''],\n\tm: [''],\n\tn: [''],\n\to: [''],\n\tp: [''],\n\tq: [''],\n\tr: [''],\n\ts: [''],\n\tt: ['tea'],\n\tu: [''],\n\tv: [''],\n\tw: [''],\n\tx: [''],\n\ty: [''],\n\tz: ['']\n};\n\nfunction wordsToLetters(words) {\n\tif (words.length === 1) {\n\t\treturn words;\n\t}\n\tlet word = words.split(/ /)[0];\n\t\n\tfor (let letter in letterPhonetics) {\n\t\tfor (let p = 0; p < letterPhonetics[letter].length; p++) {\n\t\t\tif (word === letterPhonetics[letter][p]) {\n\t\t\t\treturn letter;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log('not a letter:', words);\n}\n\nfunction wordsToAlphaNumberic(words) {\n\n}\n\nclass ListenApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.canvasRef = React.createRef();\n\t\t\n\t\tthis.state = {\n\t\t\tisRecording: false,\n\t\t\tresults: [],\n\t\t\tconnectedExtension: false,\n\t\t\tmode: 'anything'\n\t\t};\n\t\t\n\t\tglobal.app = this;\n\t}\n\t\n\tcomponentDidMount() {\n\t\tJaxcore.subscribe((jaxcoreState) => {\n\t\t\t\n\t\t\tconst {state} = this;\n\t\t\tstate.connectedExtension = jaxcoreState.connectedExtension;\n\t\t\tthis.setState(state);\n\t\t\t\n\t\t});\n\t\t\n\t\tthis.connect();\n\t\t\n\t\tthis.micVisualization = new MonauralScope(this.canvasRef.current, {\n\t\t\tcolor: '#FF0000'\n\t\t});\n\t\t\n\t\tthis.micVisualization.draw();\n\t}\n\t\n\tconnect() {\n\t\tJaxcore.connect(() => {\n\t\t\tListen.on('recognized', (text) => {\n\t\t\t\tif (this.state.mode === 'numbers') {\n\t\t\t\t\ttext = wordsToNumbers(text);\n\t\t\t\t} else if (this.state.mode === 'letters') {\n\t\t\t\t\ttext = wordsToLetters(text);\n\t\t\t\t} else if (this.state.mode === 'alphanum') {\n\t\t\t\t\ttext = wordsToAlphaNumberic(text);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet results = this.state.results;\n\t\t\t\tresults.unshift(text);\n\t\t\t\tthis.setState({\n\t\t\t\t\tresults\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tJaxcore.connectSpins(spin => {\n\t\t\t\tconsole.log('spin connected', spin);\n\t\t\t\t\n\t\t\t\tspin.on('spin', (direction) => {\n\t\t\t\t\tconsole.log('spin', direction, spin.state.spinPosition);\n\t\t\t\t});\n\t\t\t\tspin.on('button', (pushed) => {\n\t\t\t\t\tconsole.log('x button', pushed);\n\t\t\t\t\tif (pushed) {\n\t\t\t\t\t\tthis.startRecording();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stopRecording();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tspin.on('knob', (pushed) => {\n\t\t\t\t\tconsole.log('knob', pushed);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t});\n\t\t});\n\t};\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t<canvas ref={this.canvasRef} width=\"300\" height=\"300\"/>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<button onMouseDown={e => this.startRecording()} onMouseUp={e => this.stopRecording()}\n\t\t\t\t\t\t\tonMouseOut={e => this.stopRecording()}>Start Listening\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\tRecognize:\n\t\t\t\t\t\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<input id=\"anything\" name=\"mode\" type=\"radio\" value=\"anything\"\n\t\t\t\t\t\t   checked={this.state.mode === 'anything'} onChange={e => this.onChangeMode(e)}/>\n\t\t\t\t\t<label htmlFor=\"anything\">Anything</label>\n\t\t\t\t\t\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<input id=\"numbers\" name=\"mode\" type=\"radio\" value=\"numbers\" checked={this.state.mode === 'numbers'}\n\t\t\t\t\t\t   onChange={e => this.onChangeMode(e)}/>\n\t\t\t\t\t<label htmlFor=\"numbers\">Numbers</label>\n\t\t\t\t\t\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<input id=\"letters\" name=\"mode\" type=\"radio\" value=\"letters\" checked={this.state.mode === 'letters'}\n\t\t\t\t\t\t   onChange={e => this.onChangeMode(e)}/>\n\t\t\t\t\t<label htmlFor=\"letters\">Letters</label>\n\t\t\t\t\t\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<input id=\"alphanum\" name=\"mode\" type=\"radio\" value=\"alphanum\"\n\t\t\t\t\t\t   checked={this.state.mode === 'alphanum'} onChange={e => this.onChangeMode(e)}/>\n\t\t\t\t\t<label htmlFor=\"alphanum\">Alpha Numeric</label>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<button onMouseDown={e => this.startMicVisualization()} onMouseUp={e => this.stopMicVisualization()}\n\t\t\t\t\t\t\tonMouseOut={e => this.stopMicVisualization()}>Test Mic\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\tListen Status {this.state.isRecording ? 'Recording' : 'Stopped'}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tExtension Status {this.state.connectedExtension ? 'Connected' : 'Disconnected'}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\tResults:\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.results.map((r, i) => {\n\t\t\t\t\t\treturn (<li key={i}>{r}</li>);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tonChangeMode(e) {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({\n\t\t\tmode: e.target.value\n\t\t});\n\t}\n\t\n\tstartRecording() {\n\t\tthis.setState({\n\t\t\tisRecording: true\n\t\t}, () => {\n\t\t\tListen.start();\n\t\t\tthis.startMicVisualization();\n\t\t});\n\t}\n\t\n\tstopRecording() {\n\t\tthis.setState({\n\t\t\tisRecording: false\n\t\t}, () => {\n\t\t\tListen.stop();\n\t\t\tthis.stopMicVisualization();\n\t\t});\n\t}\n\t\n\tstartMicVisualization() {\n\t\tthis.setState({isRecording: true});\n\t\tthis.micVisualization.startRecording();\n\t}\n\t\n\tstopMicVisualization() {\n\t\tthis.setState({isRecording: false});\n\t\tthis.micVisualization.stopRecording();\n\t}\n}\n\nexport default ListenApp;\n","var plugin = require('jaxcore-plugin'); // var log = plugin.createLogger('Spin Buffer');\n\n\nvar _instance = 0;\n\nfunction SpinBuffer(spin, config) {\n  this.log = plugin.createLogger('Spin Buffer ' + _instance++);\n  this.log('created buffer', spin.id);\n  this.delayTime = 0;\n  this.spinDelayed = false;\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n  this.spinDirection = 0;\n  this.lastSpinTime = 0;\n  if (!config) config = {};\n  this.defaultDelay = config.defaultDelay || 500;\n  this.staticTimeout = config.staticTimeout || 3000;\n  this.delayLength = this.defaultDelay;\n  this._onPushKnob = this.onPushKnob.bind(this);\n  spin.on('knob', this._onPushKnob);\n  var me = this;\n\n  this.destroy = function () {\n    spin.removeListener('knob', me._onPushKnob);\n  };\n}\n\nSpinBuffer.prototype = {};\n\nSpinBuffer.prototype.reset = function (forceStatic) {\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n\n  if (forceStatic) {\n    this.spinDirection = 0;\n  }\n};\n\nSpinBuffer.prototype.onPushKnob = function () {\n  this.log('reset');\n  this.reset();\n};\n\nSpinBuffer.prototype.spin = function (direction, kineticBuffer, staticBuffer) {\n  //if (!kineticBuffer) kineticBuffer = 0;\n  if (typeof staticBuffer === 'undefined') {\n    if (kineticBuffer) staticBuffer = kineticBuffer;else staticBuffer = 0;\n  }\n\n  kineticBuffer += 1;\n  staticBuffer += 1; // if (!kineticBuffer) kineticBuffer = 1;\n  // if (!staticBuffer) staticBuffer = kineticBuffer || 2;\n\n  var timeSinceLastSpin = new Date().getTime() - this.lastSpinTime;\n  this.lastSpinTime = new Date().getTime();\n\n  if (this.isDelayed()) {\n    this.reset();\n    return false;\n  }\n\n  var staticTimeoutExceeded = timeSinceLastSpin > this.staticTimeout; // after 3 sec reset static buffer\n\n  if (staticTimeoutExceeded) {\n    this.log('static timeout exceeded');\n    this.reset(true);\n  }\n\n  var directionChanged = direction !== this.spinDirection;\n\n  if (directionChanged) {\n    this.kineticBuffer = 0;\n    this.staticBuffer++;\n\n    if (this.staticBuffer >= staticBuffer) {\n      this.log('static buffer exeeded, spinDirection is now', direction);\n      this.spinDirection = direction;\n      this.reset();\n      return true;\n    } else {\n      this.log('static buffer:', this.staticBuffer, '-');\n      return false;\n    }\n  } else {\n    if (this.staticBuffer > 0) {\n      this.staticBuffer--;\n      this.log('static buffer:', this.staticBuffer, '+');\n      if (this.staticBuffer < 0) this.staticBuffer = 0;\n      return false;\n    }\n\n    this.kineticBuffer++;\n    this.staticBuffer = 0;\n    if (kineticBuffer > 0) this.log('kinetic buffer:', this.kineticBuffer, direction === 1 ? '+' : '-');\n\n    if (this.kineticBuffer >= kineticBuffer) {\n      if (kineticBuffer > 0) this.log('kinetic buffer exceeded');\n      this.reset();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nSpinBuffer.prototype.isDelayed = function () {\n  if (this.spinDelayed) {\n    var diff = new Date().getTime() - this.delayTime;\n    var d = diff > this.delayLength;\n\n    if (d) {\n      this.log('delay timed out', new Date().getTime() - this.delayTime);\n      this.delayLength = this.defaultDelay;\n      this.spinDelayed = false;\n      return false;\n    } else {\n      this.log('delaying for ' + (this.delayLength + ' ' + diff));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nSpinBuffer.prototype.delay = function (ms) {\n  this.delayLength = ms || this.defaultDelay;\n  this.log('delaying for ' + this.delayLength + 'ms');\n  this.delayTime = new Date().getTime();\n  this.spinDelayed = true;\n};\n\nSpinBuffer.prototype.cancelDelay = function () {\n  this.delayTime = 0;\n  this.spinDelayed = false;\n};\n\nmodule.exports = SpinBuffer;","var isArray = function isArray(o) {\n  return typeof o === 'object' && Object.prototype.toString.apply(o) === '[object Array]';\n};\n\nvar isString = function isString(o) {\n  return typeof o === 'string' || o instanceof String;\n};\n\nfunction alpha(color, a) {\n  if (typeof a === 'number' && a >= 0 && a <= 1) {\n    var c = getRGB(color);\n    return rgb(c[0], c[1], c[2], a);\n  }\n\n  return color;\n}\n\nfunction lighten(c, l) {\n  if (c.value) c = c.value;else if (typeof l === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, 0, l));\n}\n\nfunction darken(c, l) {\n  return lighten(c, -l);\n}\n\nfunction saturate(c, s) {\n  if (c.value) c = c.value;else if (typeof s === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, s, 0));\n}\n\nfunction desaturate(c, s) {\n  return saturate(c, -s);\n}\n\nfunction hslval(x, y, r) {\n  if (r < 0) r += 1;\n  if (r > 1) r -= 1;\n  var c;\n  if (6 * r < 1) c = x + (y - x) * 6 * r;else if (2 * r < 1) c = y;else if (3 * r < 2) c = x + (y - x) * (2 / 3 - r) * 6;else c = x;\n  return c * 255;\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0],\n      s = hsl[1],\n      l = hsl[2],\n      r,\n      g,\n      b;\n\n  if (s === 0) {\n    r = g = b = l * 255;\n  } else {\n    var x, y;\n    if (l < 0.5) y = l * (1 + s);else y = l + s - l * s;\n    x = 2 * l - y;\n    r = hslval(x, y, h + 1 / 3);\n    g = hslval(x, y, h);\n    b = hslval(x, y, h - 1 / 3);\n  }\n\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  if (hsl.length === 4) return [r, g, b, hsl[3]];else return [r, g, b];\n}\n\nfunction hsl(h, s, l, a) {\n  var x = [h / 360, s / 100, l / 100];\n  var r = hsl2rgb(x).map(Math.round);\n  if (arguments.length === 4) r[3] = a;\n  return rgb(r);\n}\n\nfunction shiftHSL(c, h, s, l) {\n  if (typeof h === 'undefined') h = 0;\n  if (typeof s === 'undefined') s = 0;\n  if (typeof l === 'undefined') l = 0;\n  var o = getRGB(c);\n  var x = getHSL(o);\n  x[0] += h;\n  if (x[0] < 0) x[0] += 1;\n  if (x[0] > 1) x[0] -= 1;\n  x[1] *= 1 + s;\n  if (x[1] < 0) x[1] = 0;\n  if (x[1] > 1) x[1] = 1;\n  x[2] *= 1 + l;\n  if (x[2] < 0) x[2] = 0;\n  if (x[2] > 1) x[2] = 1;\n  var n = hsl2rgb(x);\n  if (o.length === 4) n[3] = o[3];\n  return n;\n}\n\nfunction shiftHue(c, h) {\n  if (typeof h === 'undefined') return c;\n  return rgb(shiftHSL(c, h, 0, 0));\n}\n\nfunction combine(sourceColor, targetColor, amount) {\n  amount = amount || 0.5;\n  var al = getAlpha(sourceColor);\n  var s = getRGB(sourceColor);\n  var t = getRGB(targetColor);\n  var r = Math.round((t[0] - s[0]) * amount);\n  var g = Math.round((t[1] - s[1]) * amount);\n  var b = Math.round((t[2] - s[2]) * amount);\n  return rgb(s[0] + r, s[1] + g, s[2] + b, al);\n}\n\nfunction tint(sourceColor, targetColor, amount) {\n  var sH = getHue(sourceColor);\n  var tH = getHue(targetColor);\n  var diff = tH - sH;\n  if (diff > 0 && diff > 0.5) diff -= 1;else if (diff < 0 && diff < -0.5) diff += 1;\n  var dH = diff * amount;\n  return rgb(shiftHSL(sourceColor, dH, null, null));\n}\n\nfunction hue(c, h) {\n  return setHSL(c, h);\n}\n\nfunction saturation(c, s) {\n  return setHSL(c, null, s);\n}\n\nfunction lightness(c, l) {\n  return setHSL(c, null, null, l);\n}\n\nfunction setHSL(c, h, s, l) {\n  var x = getHSL(c);\n  if (typeof h === 'undefined' || h === null) h = x[0];\n  if (typeof s === 'undefined' || s === null) s = x[1];\n  if (typeof l === 'undefined' || l === null) l = x[2];\n  if (x.length === 4) return rgb(hsl2rgb([h, s, l, x[3]]));else return rgb(hsl2rgb([h, s, l]));\n}\n\nfunction rgb() {\n  if (arguments.length === 1) {\n    var a = arguments[0];\n\n    if (typeof a === 'string') {\n      var r = getRGB(a);\n      if (isArray(r)) return rgb(r);else return getHex(r);\n    }\n\n    if (isArray(a) && a.length === 3) {\n      return getHex(a);\n    }\n\n    if (isArray(a) && a.length === 4) {\n      return 'rgba(' + Math.round(a[0]) + ',' + Math.round(a[1]) + ',' + Math.round(a[2]) + ',' + a[3] + ')';\n    }\n  } else if (arguments.length === 3) {\n    return getHex(Array.from(arguments));\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'number' && arguments[3] > 0 && arguments[3] <= 1) {\n      return 'rgba(' + Math.round(arguments[0]) + ',' + Math.round(arguments[1]) + ',' + Math.round(arguments[2]) + ',' + arguments[3] + ')';\n    } else return getHex(Array.from(arguments));\n  }\n}\n\nfunction setRGB(c, r, g, b, a) {\n  c = getRGB(c);\n  if (typeof r === 'number') c[0] = r;\n  if (typeof g === 'number') c[1] = g;\n  if (typeof b === 'number') c[2] = b;\n  if (typeof a === 'number') c[3] = a;\n  return rgb(c);\n}\n\nfunction getAlpha(color) {\n  var x = getRGB(color);\n  if (x.length === 4) return x[3];\n  return 0;\n}\n\nfunction getRGB() {\n  if (isArray(arguments[0])) return arguments[0];\n\n  if (typeof arguments[0] === 'string') {\n    var c = arguments[0];\n\n    if (/^#/.test(c)) {\n      var h = c.substring(1);\n      if (/^[0-9a-f]{6}$/i.test(h)) return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n      if (/^[0-9a-f]{3}$/i.test(h)) return [parseInt(h[0] + h[0], 16), parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16)];\n      return [0, 0, 0];\n    }\n\n    var m;\n\n    if (m = c.match(/rgb\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3])];\n    }\n\n    if (m = c.match(/rgba\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [Number(m[1]), Number(m[2]), Number(m[3]), Number(m[4])];\n    } else {}\n  }\n}\n\nfunction getRed(c) {\n  return getRGB(c)[0];\n}\n\nfunction getGreen(c) {\n  return getRGB(c)[1];\n}\n\nfunction getBlue(c) {\n  return getRGB(c)[2];\n}\n\nfunction getHex(color, full) {\n  if (color) {\n    var c = getRGB(color);\n\n    if (c) {\n      var r = int2hex(Math.round(c[0]));\n      var g = int2hex(Math.round(c[1]));\n      var b = int2hex(Math.round(c[2]));\n      if (!full && r[0] === r[1] && g[0] === g[1] && b[0] === b[1]) return ('#' + r[0] + g[0] + b[0]).toUpperCase();\n      return ('#' + r + g + b).toUpperCase();\n    }\n  }\n\n  return '#000';\n}\n\nfunction int2hex(i) {\n  var v = i.toString(16);\n  return v.length === 1 ? '0' + v : v;\n}\n\nfunction getHSL(color) {\n  var rgb;\n  if (isArray(color)) rgb = color;else if (isString(color)) rgb = getRGB(color);else {\n    console.log('no rgb for ', color);\n    return [0, 0, 0];\n  }\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var x = Math.max(r, g, b);\n  var n = Math.min(r, g, b);\n  var l = (x + n) / 2;\n  var s = 0,\n      h = 0;\n\n  if (x === n) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = x - n;\n    if (l > 0.5) s = d / (2 - x - n);else s = d / (x + n);\n    if (x === r) h = (g - b) / d + (g < b ? 6 : 0);\n    if (x === g) h = 2 + (b - r) / d;\n    if (x === b) h = 4 + (r - g) / d;\n    h /= 6;\n    if (h < 0) h += 1;\n  }\n\n  if (rgb.length === 4) return [h, s, l, rgb[3]];else return [h, s, l];\n}\n\nfunction getHue(c) {\n  return getHSL(c)[0];\n}\n\nfunction getSaturation(c) {\n  return getHSL(c)[1];\n}\n\nfunction getLightness(c) {\n  return getHSL(c)[2];\n}\n\nfunction invert(color) {\n  var rgba = getRGB(color);\n\n  for (var i = 0; i < 3; i++) {\n    rgba[i] = 255 - rgba[i];\n  }\n\n  return rgb(rgba);\n}\n\nmodule.exports = {\n  hsl2rgb: hsl2rgb,\n  hslval: hslval,\n  int2hex: int2hex,\n  alpha: alpha,\n  lighten: lighten,\n  darken: darken,\n  saturate: saturate,\n  desaturate: desaturate,\n  shiftHSL: shiftHSL,\n  shiftHue: shiftHue,\n  combine: combine,\n  tint: tint,\n  hue: hue,\n  saturation: saturation,\n  lightness: lightness,\n  hsl: hsl,\n  hsla: hsl,\n  setHSL: setHSL,\n  rgb: rgb,\n  rgba: rgb,\n  setRGB: setRGB,\n  getAlpha: getAlpha,\n  getRGB: getRGB,\n  getRed: getRed,\n  getGreen: getGreen,\n  getBlue: getBlue,\n  getHex: getHex,\n  getHSL: getHSL,\n  getHue: getHue,\n  getSaturation: getSaturation,\n  getLightness: getLightness,\n  invert: invert\n};"],"sourceRoot":""}