{"version":3,"sources":["interpreters/ascii.js","interpreters/chess.js","interpreters/datetime.js","interpreters/index.js","serviceWorker.js","index.js","../../../../jaxcore-client/lib/spin/transports/browser.js","../../../../jaxcore-client/lib/spin/spin.js","../../../../jaxcore-client/lib/logger.js","../../../../jaxcore-client/lib/Store.js","../../../../jaxcore-client/lib/Color.js","VocabApp.js","../../../../jaxcore-client/lib/CollectionModel.js","../../../../jaxcore-client/lib/Listen.js","../../../../jaxcore-client/lib/State.js","../../../../jaxcore-client/lib/Sound.js","../../../../jaxcore-client/lib/MonauralScope.js","../../../../jaxcore-client/lib/index.js","../../../../jaxcore-client/lib/spin/buffer.js","../../../../jaxcore-client/lib/colors.js"],"names":["sortWordLength","a","b","length","parseInt","interpreter","dec","ch","words","asciiWords","asciiData","lch","toLowerCase","letter","letterwords","forEach","lw","unshift","push","w","sort","asciiInterpreter","text","strIndex","index","i","reg","RegExp","m","match","found","before","substring","after","ret","flat","loadAscii","chessWords","_loop","key","chessData","word","chessInterpreter","prevText","prevIndex","afterBefore","console","log","loadChess","datetimeWords","weekdayMap","weekdays","monthMap","months","datetimeData","keys","replacements","trim","map","wordsToNumbers","indexOf","split","test","month","weekday","Date","loadDatetime","__webpack_require__","d","__webpack_exports__","interpreterData","ascii","chess","datetime","interpreters","Boolean","window","location","hostname","ReactDOM","render","react_default","createElement","VocabApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","EventEmitter","Spin","BrowserTransport","this","constructor","prototype","data","store","id","add","created","update","spinIds","destroyed","changes","spin","c","state","emit","knobPushed","buttonPushed","_lastSpinPosition","spinPosition","spinDirection","connected","create","remove","sendCommand","args","shift","method","postCommandFn","spinCommand","setPostCommand","fn","spinBrowser","module","exports","plugin","createLogger","spinStore","createStore","Client","SpinBuffer","_instance","device","transport","instance","ip","now","setStore","setDefaults","spinPreviousTime","spinTime","knobPushTime","knobReleaseTime","knobPushDuration","knobHold","buttonPushTime","buttonReleaseTime","buttonPushDuration","buttonHold","batteryVoltage","batteryPercent","isCharging","isCharged","sleeping","inactivityTime","createSettings","brightness","knobHoldThreshold","buttonHoldThreshold","sleepEnabled","sleepTimer","Buffer","config","defaults","setState","settings","settingDefaults","settingNames","changeSettings","hasChanges","name","value","buffer","_buffer","apply","Array","slice","call","arguments","bufferDelay","delay","bufferReset","reset","cancelHoldEvents","clearTimeout","_knobHoldTimer","_buttonHoldTimer","isConnected","_connected","resetDefaults","connect","_sleeping","_removeEvents","disconnect","knobReleased","buttonReleased","processSpin","position","direction","processEncoder","throttled","getTime","processKnob","pushed","me","setTimeout","wasHeld","processButton","processStatus","Math","round","first","min","processSleep","status","millis","flash","color","quickFlash","repeat","bleDevice","join","lightsOn","lights","lightsOff","setThrottle","throttle","setBrightness","setName","rotate","mode","color1","color2","scale","percent","color3","sleep","delaySleep","setKnobHoldThreshold","th","setButtonHoldThreshold","setSleepTimer","minutes","ms","destroy","debug","q","logger","quiet","chalk","green","yellow","cyan","magenta","_quiet","arg","loggerName","colors","n","Store","ids","removeAllListeners","set","s","isColor","Color","rgb","from","toString","alpha","v","lighten","darken","saturate","desaturate","shiftHSL","h","l","shiftHue","combine","t","tint","hue","saturation","lightness","invert","setRGB","hsl","setHSL","red","r","g","blue","getAlpha","getRGB","getHex","full","getRed","getGreen","getBlue","getHSL","getHue","getSaturation","getLightness","rgba","hsla","global","Speak","addLanguages","en","voice","language","profile","_this","Object","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_vocab_tester_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_vocab_tester_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_vocab_tester_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","numSpins","firstRecognition","isRecording","mouseSelected","recognizedChars","recognizedText","selectedInterpreter","bumbleBeeStarted","speakScopeRef","React","createRef","listenScopeRef","soundBBStart","Audio","soundBBStop","app","_Users_dstein_dev_jaxcore_jaxcore_listen_examples_web_vocab_tester_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_this2","continuousStarted","Listen","stopContinuous","play","startContinuous","stopBumbleBee","startBumbleBee","_this3","bumblebee","sensitivity","start","toggleContinuous","stop","_this4","speakScope","MonauralScope","current","lineWidth","strokeColor","fillColor","bgOnColor","bgOffColor","dotColor","dotSize","background","draw","setVisualizer","listenScope","addEventListener","e","keyCode","preventDefault","startRecording","stopRecording","Jaxcore","on","receiveText","connectAll","speak","processorResult","result","k","toLocaleString","processedResult","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","onClick","onChange","changeInterpreter","ref","width","height","renderTable","target","options","selectedIndex","_this6","renderAscii","_ret","trs","wordLinks","clss","rowi","clickTR","stopPropagation","_this7","rows","_loop2","wordElms","href","clickRow","words2","firstWord","colSpan","Component","events_default","_EventEmitter","Listener","postCommand","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","listenCommand","command","lib_State","State","callback","handler","addListener","removeListener","lib_MonauralScope","canvas","audioContext","meter","mediaStreamSource","_draw","bind","assertThisInitialized","setTheme","clipColor","theme","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","event","x","buf","inputBuffer","getChannelData","bufLength","sum","abs","clipping","lastClip","performance","rms","sqrt","volume","max","maxVolume","destination","checkClipping","shutdown","close","isDrawing","AudioContext","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","stream","createMediaStreamSource","createAudioMeter","startDrawing","alert","source","onended","isPlaying","stopDrawing","ctx","getContext","fillStyle","fillRect","clearRect","maxsize","beginPath","arc","PI","fill","closePath","size","error","strokeStyle","_maxsize","_size","stroke","requestAnimationFrame","postMessage","msg","_jaxcore_client","message","protocol","host","lib_Listen","spin_default","browser_default","lib_JaxcoreClient","_State","JaxcoreClient","reconnect","connectedExtension","extensionReady","origin","_jaxcore_content","socketDisconnected","listen","disconnectExtension","once","connectExtension","jaxcore","logger_default","connectSpins","delayTime","spinDelayed","staticBuffer","kineticBuffer","lastSpinTime","defaultDelay","staticTimeout","delayLength","_onPushKnob","onPushKnob","forceStatic","timeSinceLastSpin","isDelayed","diff","cancelDelay","isArray","o","isString","String","hslval","y","hsl2rgb","Number","int2hex","toUpperCase","sourceColor","targetColor","amount","al","sH"],"mappings":"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","file":"static/js/main.30cff47e.chunk.js","sourcesContent":["import asciiData from './ascii.json';\n\nfunction sortWordLength(a, b) {\n\tif (a[0].length === b[0].length) {\n\t\treturn parseInt(a[1]) > parseInt(b[1]);\n\t}\n\treturn a[0].length < b[0].length ? 1 : -1;\n}\n\nfunction loadAscii() {\n\tlet asciiWords = [];\n\t\n\tlet dec, ch;\n\t\n\tvar words;\n\t\n\t// todo: improve performance by converting all single words to a hash\n\t\n\tfor (dec in asciiData) {\n\t\tch = asciiData[dec][0];\n\t\twords = asciiData[dec][1];\n\t\tif (!words) {\n\t\t\tasciiData[dec][1] = [];\n\t\t\twords = [];\n\t\t}\n\t\t\n\t\tdec = parseInt(dec);\n\t\t\n\t\tif (dec >= 65 && dec <= 90) { // A-Z\n\t\t\tlet lch = ch.toLowerCase();\n\t\t\tlet letter = dec + 32;\n\t\t\tlet letterwords = asciiData[letter][1];\n\t\t\tif (!letterwords) {\n\t\t\t\tasciiData[letter][1] = [];\n\t\t\t\tletterwords = [lch];\n\t\t\t}\n\t\t\t\n\t\t\tletterwords.forEach((lw) => {\n\t\t\t\twords.unshift(\"upper case \" + lw);\n\t\t\t\tasciiData[dec][1].push(words[0]);\n\t\t\t\twords.unshift(\"capital \" + lw);\n\t\t\t\tasciiData[dec][1].push(words[0]);\n\t\t\t});\n\t\t\t\n\t\t\t// words = words.concat(letterwords);\n\t\t\t// words.unshift(\"uppercase \" + lch);\n\t\t\twords.unshift(\"upper case \" + lch);\n\t\t\twords.unshift(\"capital \" + lch);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t} else if (dec >= 97 && dec <= 122) { // a-z\n\t\t\t// words.unshift(\"lowercase \" + ch);\n\t\t\twords.unshift(\"letter \" + ch);\n\t\t\twords.unshift(\"lower case \" + ch);\n\t\t\twords.unshift(ch);\n\t\t}\n\t\t\n\t\tif (words.length === 0) {\n\t\t\tdebugger;\n\t\t\tasciiWords.push([ch, dec]);\n\t\t} else {\n\t\t\tfor (let w=0;w<words.length;w++) {\n\t\t\t\tasciiWords.push([words[w], dec]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tasciiWords.sort(sortWordLength);\n\t\n\tconst asciiInterpreter = function(text) {\n\t\tlet index = null;\n\t\t\n\t\tlet w;\n\t\tlet strIndex;\n\t\tfor (let i = 0; i < asciiWords.length; i++) {\n\t\t\tw = asciiWords[i][0];\n\t\t\t\n\t\t\tlet same = false;\n\t\t\tif (text === w) {\n\t\t\t\tindex = i;\n\t\t\t\tstrIndex = 0;\n\t\t\t\tsame = true;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tlet reg = new RegExp(\"^\" + w + \" | \" + w + \" | \" + w + \"$\");\n\t\t\t\tlet m = text.match(reg);\n\t\t\t\tif (m) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tstrIndex = m.index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tlet found = asciiWords[index][0];\n\t\t\tlet dec = asciiWords[index][1];\n\t\t\t// let ch = asciiData[dec][0];\n\t\t\tlet before = text.substring(0, strIndex);\n\t\t\tlet after = text.substring(strIndex + found.length + 1);\n\t\t\tlet ret = []; //b,found,a];\n\t\t\tlet b = asciiInterpreter(before);\n\t\t\tlet a = asciiInterpreter(after);\n\t\t\t\n\t\t\tif (b) ret.push(b);\n\t\t\t\n\t\t\tret.push(dec);\n\t\t\t\n\t\t\tif (a) ret.push(a);\n\t\t\tlet r = ret.flat();\n\t\t\treturn r;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t};\n\t\n\treturn asciiInterpreter;\n}\n\nexport {asciiData};\n\nconst interpreter = loadAscii();\n\nexport default interpreter;","import chessData from './chess.json';\n\nfunction sortWordLength(a, b) {\n\tif (a[0].length === b[0].length) {\n\t\treturn 0; //parseInt(a[1]) > parseInt(b[1]);\n\t}\n\treturn a[0].length < b[0].length ? 1 : -1;\n}\n\nlet chessWords = [];\n\nfunction loadChess() {\n\t\n\tfor (let key in chessData) {\n\t\tlet words = chessData[key];\n\t\twords.forEach(word => {\n\t\t\tchessWords.push([word,key]);\n\t\t})\n\t}\n\tchessWords.sort(sortWordLength);\n\t\n\t\n\tconst chessInterpreter = function(text, prevText, prevIndex, afterBefore) {\n\t\tlet index = null;\n\n\t\tlet w;\n\t\tlet strIndex;\n\t\t\n\t\tfor (let i = 0; i < chessWords.length; i++) {\n\t\t\tw = chessWords[i][0];\n\t\t\t\n\t\t\tlet same = false;\n\t\t\tif (text === w) {\n\t\t\t\tindex = i;\n\t\t\t\tstrIndex = 0;\n\t\t\t\tsame = true;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tlet reg = new RegExp(\"^\" + w + \" | \" + w + \" | \" + w + \"$\");\n\t\t\t\tlet m = text.match(reg);\n\t\t\t\tif (m) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tstrIndex = m.index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tlet found = chessWords[index][0];\n\t\t\tlet key = chessWords[index][1];\n\t\t\t// let ch = ascii[dec][0];\n\t\t\tlet before = text.substring(0, strIndex);\n\t\t\tlet after = text.substring(strIndex + found.length + 1);\n\t\t\tlet ret = []; //b,found,a];\n\t\t\t\n\t\t\tconsole.log('found chess:', found);\n\t\t\t\n\t\t\tif (before) {\n\t\t\t\tlet b = chessInterpreter(before, text, strIndex, 0);\n\t\t\t\tif (b) ret.push(b);\n\t\t\t}\n\t\t\t\n\t\t\tret.push({\n\t\t\t\tkey,\n\t\t\t\tword: w,\n\t\t\t\tindex: strIndex\n\t\t\t});\n\t\t\t\n\t\t\tif (after) {\n\t\t\t\tlet a = chessInterpreter(after, text, strIndex, 1);\n\t\t\t\tif (a) ret.push(a);\n\t\t\t}\n\t\t\t\n\t\t\tlet r = ret.flat();\n\t\t\treturn r;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t};\n\t\n\t\n\t\n\treturn chessInterpreter;\n}\n\nconst interpreter = loadChess();\n\nexport {chessData, chessWords};\n\nexport default interpreter;","// todo: this is not done yet\n\n\nimport datetimeData from './datetime.json';\nimport wordsToNumbers from 'words-to-numbers';\n\nfunction sortWordLength(a, b) {\n\tif (a[0].length === b[0].length) {\n\t\treturn 0; //parseInt(a[1]) > parseInt(b[1]);\n\t}\n\treturn a[0].length < b[0].length ? 1 : -1;\n}\n\nconst datetimeWords = [];\n\n\n\nfunction replacements(text) {\n\tlet index = null;\n\tlet w;\n\tlet strIndex;\n\t\n\tfor (let i = 0; i < datetimeWords.length; i++) {\n\t\tw = datetimeWords[i][0];\n\t\t\n\t\tlet same = false;\n\t\tif (text === w) {\n\t\t\tindex = i;\n\t\t\tstrIndex = 0;\n\t\t\tsame = true;\n\t\t\tbreak;\n\t\t} else {\n\t\t\tlet reg = new RegExp(\"^\" + w + \" | \" + w + \" | \" + w + \"$\");\n\t\t\tlet m = text.match(reg);\n\t\t\tif (m) {\n\t\t\t\tindex = i;\n\t\t\t\tstrIndex = m.index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (index !== null) {\n\t\tlet found = datetimeWords[index][0];\n\t\tlet key = datetimeWords[index][1];\n\t\t// let ch = ascii[dec][0];\n\t\tlet before = text.substring(0, strIndex);\n\t\tlet after = text.substring(strIndex + found.length + 1);\n\t\tlet ret = []; //b,found,a];\n\t\t\n\t\tconsole.log('found datetime:', found);\n\t\t\n\t\tif (before) {\n\t\t\tlet b = replacements(before);\n\t\t\tif (b) ret.push(b);\n\t\t}\n\t\t\n\t\tret.push(key);\n\t\t\n\t\tif (after) {\n\t\t\tlet a = replacements(after);\n\t\t\tif (a) ret.push(a);\n\t\t}\n\t\tlet r = ret.flat();\n\t\treturn r;\n\t} else {\n\t\treturn [text.trim()];\n\t}\n}\n\nconst weekdayMap = {};\nconst weekdays = ['monday','tuesday','wednesday','thursday','friday','saturday','sunday'];\nweekdays.forEach(function(m) {\n\tweekdayMap[m] = true;\n});\n\nconst monthMap = {};\nconst months = ['january','frebruary','march','april','may','june','july','august','september','october','november','december'];\nmonths.forEach(function(m) {\n\tmonthMap[m] = true;\n});\n\nfunction loadDatetime() {\n\t\n\tfor (let key in datetimeData) {\n\t\tlet words = datetimeData[key];\n\t\t\n\t\twords.forEach(word => {\n\t\t\tdatetimeWords.push([word,key]);\n\t\t})\n\t}\n\t\n\tdatetimeWords.sort(sortWordLength);\n\t\n\tconst datetimeInterpreter = function(text) {\n\t\tlet keys = replacements(text);\n\t\tconsole.log('orig', keys);\n\t\t\n\t\t// keys = keys.map(function(key) {\n\t\t// \tif (typeof key === 'string' && /[0-9]+/.test(key)) {\n\t\t// \t\treturn {\n\t\t// \t\t\tmonth: months.indexOf(key)\n\t\t// \t\t};\n\t\t// \t}\n\t\t// \treturn key;\n\t\t// });\n\t\t// console.log('months', keys);\n\t\t\n\t\tkeys = keys.map(wordsToNumbers);\n\t\tconsole.log('numbers', keys);\n\t\t\n\t\tkeys = keys.map(function(key) {\n\t\t\tif (key.indexOf(' ')) {\n\t\t\t\treturn key.split(' ');\n\t\t\t}\n\t\t\treturn key;\n\t\t}).flat();\n\t\t\n\t\tkeys = keys.map(function(key) {\n\t\t\tif (/[0-9]+/.test(key)) {\n\t\t\t\treturn parseInt(key);\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t\t\n\t\tkeys = keys.map(function(key) {\n\t\t\tif (typeof key === 'string' && key in monthMap) {\n\t\t\t\treturn {\n\t\t\t\t\tmonth: months.indexOf(key)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t\tconsole.log('months', keys);\n\t\t\n\t\tkeys = keys.map(function(key) {\n\t\t\tif (typeof key === 'string' && key in weekdayMap) {\n\t\t\t\treturn {\n\t\t\t\t\tweekday: weekdays.indexOf(key)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t\tconsole.log('weekdays', keys);\n\t\t\n\t\t// debugger;\n\t\treturn new Date();\n\t};\n\t\n\treturn datetimeInterpreter;\n}\n\nconst interpreter = loadDatetime();\n\ninterpreter(\"thursday he pro first twenty nineteen at ten thirty five p m\");\n\nexport {datetimeData, datetimeWords};\n\nexport default interpreter;","import ascii, {asciiData} from './ascii.js';\nimport chess, {chessData} from './chess.js';\nimport datetime, {datetimeData} from './datetime.js';\n\nconst interpreterData = {\n\tascii: asciiData,\n\tchess: chessData,\n\tdatetime: datetimeData\n};\n\nexport {interpreterData};\n\nconst interpreters = {\n\tascii,\n\tchess,\n\tdatetime\n};\n\nexport default interpreters;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport VocabApp from './VocabApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<VocabApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var EventEmitter = require('events');\n\nvar Spin = require('../spin');\n\nfunction BrowserTransport() {\n  this.constructor();\n}\n\nBrowserTransport.prototype = new EventEmitter();\nBrowserTransport.prototype.constructor = EventEmitter;\n\nBrowserTransport.prototype.data = function (data) {\n  // console.log('onStoreUpdate', data);\n  if (data.store) {\n    // console.log('transport store', data.store);\n    for (var id in data.store) {\n      // console.log('on store', id, data.store[id]);\n      this.add(data.store[id]);\n    } //this.emit('spin-connected', spin);\n\n  } else if (data.created) {\n    // console.log('transport created', data.id, data.created);\n    this.add(data.created);\n  } else if (data.update) {\n    if (data.id in Spin.spinIds) {\n      // console.log('transport update', data.id);\n      this.update(data.id, data.update); //Spin.store.set();\n    } else {\n      console.log('transport postcreate', data.id);\n      data.update.id = data.id;\n      this.add(data.update); // this.add(data);\n    }\n  } else if (data.destroyed) {// console.log('transport created', data.id, data.created);\n  }\n};\n\nBrowserTransport.prototype.update = function (id, changes) {\n  var spin = Spin.spinIds[id]; // var changed = spin.setState(changes);\n  // if (!changed) {\n  // \tconsole.log('no changes');\n  // \treturn;\n  // }\n\n  for (var c in changes) {\n    spin.state[c] = changes[c];\n  } // console.log('update changed', changed);\n\n\n  if ('knobPushed' in changes) {\n    spin.emit('knob', changes.knobPushed);\n  }\n\n  if ('buttonPushed' in changes) {\n    spin.emit('button', changes.buttonPushed);\n  }\n\n  if ('spinPosition' in changes) {\n    // let diff;\n    // let throttled = false;\n    // if (spin._lastSpinPosition !== undefined) {\n    // \tdiff = spin.state.spinPosition - spin._lastSpinPosition;\n    // \tif (Math.abs(diff) > 1) {\n    // \t\tthrottled = true;\n    // \t\twhile (spin._lastSpinPosition !== spin.state.spinPosition) {\n    // \t\t\tconsole.log('skipping from', spin._lastSpinPosition, 'to', spin.state.spinPosition);\n    // \t\t\tspin._lastSpinPosition += diff>0? 1 : -1;\n    // \t\t\tspin.emit('spin', spin.state.spinDirection, spin._lastSpinPosition);\n    // \t\t}\n    // \t}\n    // }\n    // if (!throttled) {\n    // \tconsole.log('SPIN not throttled', spin.state.spinPosition);\n    // \tspin._lastSpinPosition = spin.state.spinPosition;\n    // \tspin.emit('spin', spin.state.spinDirection, spin.state.spinPosition);\n    // }\n    spin._lastSpinPosition = spin.state.spinPosition; // TODO: connected gets set to false upon reconnections\n    // if (spin.state.connected) {\n    // \tconsole.log('emit connected', spin.state.spinPosition);\n\n    spin.emit('spin', spin.state.spinDirection, spin.state.spinPosition); // }\n    // else {\n    // \tconsole.log('not connected?', spin.state.connected);\n    // }\n    // if (spin._lastSpinPosition === undefined) {\n    // \tconsole.log('first _lastSpinPosition', spin.state.spinPosition);\n    // \tdebugger;\n    // }\n    // else {\n    // }\n    // this.emit('update', spin.state);\n  }\n\n  if ('connected' in changes) {\n    if (changes.connected) {\n      this.emit('spin-connected', spin);\n      spin.emit('connect');\n    } else {\n      this.emit('spin-disconnected', spin);\n      spin.emit('disconnect');\n    }\n  }\n\n  console.log('update', changes);\n  spin.emit('update', changes); // spin.on('update', function(changes) {\n  // \tconsole.log('on update', changes);\n  // });\n};\n\nBrowserTransport.prototype.add = function (state) {\n  if (state.id in Spin.spinIds) {\n    // console.log('already added', state.id);\n    this.update(state.id, state);\n    return;\n  }\n\n  var spin = Spin.create(state, this);\n  this.emit('spin-created', spin); // if ('knobPushed' in data) {\n  // \tspin.processKnob(data['knobPushed']);\n  // }\n  // if ('buttonPushed' in data) {\n  // \tspin.processButton(data['buttonPushed']);\n  // }\n  // var me = this;\n  // if (spin.state.connected) {\n  // \t// me.emit('spin-created', spin);\n  // }\n  // else {\n  // \tspin.once('connect', function() {\n  // \t\tme.emit('spin-connected', spin);\n  // \t});\n  // }\n};\n\nBrowserTransport.prototype.remove = function (data) {};\n\nBrowserTransport.prototype.sendCommand = function (spin, args) {\n  // this.emit('command', spin, args);\n  console.log('sendCommand', spin.id, args);\n  var id = args.shift();\n  var method = args.shift();\n  console.log('args', args); //debugger;\n\n  this.postCommandFn({\n    spinCommand: {\n      id: id,\n      method: method,\n      args: args\n    }\n  });\n};\n\nBrowserTransport.prototype.setPostCommand = function (fn) {\n  this.postCommandFn = fn;\n};\n\nvar spinBrowser = new BrowserTransport();\nmodule.exports = spinBrowser;","var EventEmitter = require('events');\n\nvar plugin = require('jaxcore-plugin');\n\nvar log = plugin.createLogger('Spin Service');\nvar spinStore = plugin.createStore('Spin Store');\nvar Client = plugin.Client;\n\nvar SpinBuffer = require('./buffer'); // var udp, tcp, usb;\n// var SpinUDPService = require('./udp');\n// var udp = new SpinUDPService();\n//\n// var SpinTCPService = require('./tcp');\n// var tcp = new SpinTCPService();\n//\n// var SpinUSBService = require('./usb');\n// var usb = new SpinUSBService();\n//\n// var SpinBLEService = require('./ble');\n// var ble = new SpinBLEService();\n\n\nvar spinIds = {};\nvar spinIps = {}; // tcp.on('connect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp connect', id);\n//\n// \tudp.connectedTCP(id);\n//\n// \tspinIps[ip] = id;\n//\n// \tif (id in spinIds) {\n// \t\tspinIds[id]._connected();\n// \t\t// spinIds[id].emit('connect', spinIds[id]);\n// \t}\n// \t// var ip = socket.remoteAddress;\n// \t// log('connected',id,ip);\n// });\n//\n// tcp.on('disconnect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp disconnect', id, ip, spinIps);\n//\n// \tudp.disconnectedTCP(id);\n//\n// \tif (ip in spinIps) {\n//\n//\n// \t\tlog('destroying ', id, ip, spinIps[ip]);\n// \t\t//spinIds[id]._disconnected();\n//\n// \t\tspinIds[id].destroy();\n// \t\tdelete spinIds[id];\n// \t\tdelete spinIps[ip];\n//\n// \t}\n// \telse {\n// \t\tlog('got disconnected from unknown', ip);\n// \t}\n// });\n//\n// usb.on('connect', function (id) {\n// \tif (id in spinIds) {\n// \t\tlog('on usb connect', id);\n// \t\tspinIds[id]._connected();\n// \t}\n// \telse {\n// \t\tlog('error on usb connect', id);\n// \t}\n// });\n\nvar _instance = 0;\n\nfunction Spin(device, transport) {\n  this.constructor();\n  if (transport) this.transport = transport;else {\n    debugger;\n  }\n  var instance = _instance++;\n  this.log = plugin.createLogger('Spin ' + instance);\n  var ip = device.ip;\n  var id = device.id;\n  spinIds[id] = this;\n  this.id = id; // if (device.port) {\n  // \tthis.udpPort = device.port;\n  // }\n  // if (device.usbDevice) {\n  // \tthis.usbDevice = device.usbDevice;\n  // }\n  // if (device.blePeripheral) {\n  // \tthis.blePeripheral = device.blePeripheral;\n  // }\n\n  var now = new Date();\n  this.setStore(spinStore);\n  this.setDefaults(device, {\n    id: id,\n    ip: ip,\n    // remove ?\n    instance: instance,\n    connected: false,\n    spinPosition: 0,\n    spinDirection: 1,\n    spinPreviousTime: now,\n    spinTime: now,\n    knobPushed: false,\n    knobPushTime: now,\n    knobReleaseTime: now,\n    knobPushDuration: 0,\n    knobHold: false,\n    buttonPushed: false,\n    buttonPushTime: now,\n    buttonReleaseTime: now,\n    buttonPushDuration: 0,\n    buttonHold: false,\n    batteryVoltage: 0,\n    batteryPercent: 0,\n    isCharging: false,\n    isCharged: false,\n    sleeping: false,\n    inactivityTime: 0\n  });\n  this.createSettings({\n    brightness: 16,\n    knobHoldThreshold: 2000,\n    buttonHoldThreshold: 2000,\n    sleepEnabled: true,\n    sleepTimer: 0\n  }); // if (this.usbDevice) {\n  // \t// usb.addSpin(this);\n  // }\n  // else {\n  // \t// tcp.addSpin(spinIds, id);\n  // }\n}\n\nSpin.store = spinStore;\nSpin.spinIds = spinIds;\nSpin.Buffer = SpinBuffer;\nSpin.prototype = new Client();\nSpin.prototype.constructor = Client;\n\nSpin.prototype.setDefaults = function (config, defaults) {\n  this.setState(config);\n  var d = {};\n\n  for (var i in defaults) {\n    if (!(i in config)) {\n      d[i] = defaults[i];\n    }\n  }\n\n  this.setState(d);\n};\n\nSpin.prototype.createSettings = function (settings) {\n  this.settingDefaults = {};\n  this.settingNames = [];\n\n  for (var i in settings) {\n    this.settingNames.push(i);\n    this.settingDefaults[i] = settings[i];\n    this.state[i] = settings[i];\n  } //this.log('created settings', this.state);\n\n};\n\nSpin.prototype.changeSettings = function (settings) {\n  log('changing settings', settings);\n  var changes = {};\n  var hasChanges = false;\n\n  for (var name in settings) {\n    if (name in this.settingDefaults) {\n      var value = settings[name];\n      var d = {};\n      d[name] = settings[name];\n      var c = this.setState(d);\n\n      if (c) {\n        this.log('changed setting:', name + ' = ' + value, '(default ' + this.settingDefaults[name] + ')');\n        hasChanges = true;\n        changes[name] = value;\n      }\n    }\n  }\n\n  if (hasChanges) {\n    this.log('settings-changed', changes);\n    this.emit('settings-changed', changes);\n  }\n};\n\nSpin.prototype.buffer = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.spin.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferDelay = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.delay.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferReset = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.reset.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.cancelHoldEvents = function () {\n  clearTimeout(this._knobHoldTimer);\n  clearTimeout(this._buttonHoldTimer);\n};\n\nSpin.prototype.isConnected = function () {\n  return this.state.connected;\n};\n\nSpin.prototype._connected = function () {\n  this.resetDefaults();\n  this.setState({\n    connected: true,\n    sleeping: false\n  });\n  this.emit('connect', this);\n};\n\nSpin.prototype.connect = function () {\n  Spin.transport.connect(this); // if (this.usbDevice) {\n  // \tusb.connectSpin(this);\n  // }\n  // else {\n  // \tthis.log('connecting (' + this.udpPort + ')');\n  // \tudp.connectTCP(this.state.id, this.state.ip, this.udpPort);\n  // }\n};\n\nSpin.prototype._sleeping = function () {\n  this.setState({\n    sleeping: true\n  });\n  this.emit('sleeping');\n};\n\nSpin.prototype._removeEvents = function () {\n  var id = this.id; //tcp.disconnect(this.state.id, this.state.ip);\n\n  Spin.transport.remove(this); // if (this.usbDevice) {\n  // \tusb.removeSpin(this);\n  // }\n  // else {\n  // \ttcp.removeSpin(this);\n  // }\n};\n\nSpin.prototype.disconnect = function () {\n  this.setState({\n    connected: false\n  });\n  this.resetDefaults();\n  this.emit('disconnect', this);\n};\n\nSpin.prototype.resetDefaults = function () {\n  this.setState({\n    spinPosition: 0,\n    knobPushed: false,\n    knobReleased: true,\n    buttonPushed: false,\n    buttonReleased: true\n  });\n};\n\nSpin.prototype.processSpin = function (position) {\n  console.log('processSpin', position);\n  var direction = position > this.state.spinPosition ? 1 : -1;\n\n  if (position !== this.state.spinPosition) {\n    // var diff = this.state.spinPosition - position;\n    //\n    // if (Math.abs(diff) > 1 && this.state.throttle!=0) {\n    // \tvar throttledPosition = this.state.spinPosition;\n    // \t// while (this.state.spinPosition !== position) {\n    // \t// \tthrottledPosition = throttledPosition + direction;\n    // \t// \tthis.processEncoder(throttledPosition, direction, true);\n    // \t// \tthis.log(direction, 'position:', throttledPosition, this.state.spinPosition === position?'(synced)':'(throttled)');\n    // \t// }\n    // }\n    // else {\n    // \tthis.log(direction, 'position:', position);\n    // \tthis.processEncoder(position, direction, false);\n    // }\n    //\n    // this.setState({\n    // \tdirection\n    // });\n    this.processEncoder(position, direction, false);\n  }\n};\n\nSpin.prototype.processEncoder = function (position, direction, throttled) {\n  var changes = {};\n  this.cancelHoldEvents();\n\n  if (direction !== this.state.spinDirection) {\n    changes.spinDirection = direction;\n  }\n\n  changes.spinPosition = position;\n  changes.spinPreviousTime = this.state.spinTime;\n  changes.spinTime = new Date().getTime();\n  this.setState(changes);\n  this.emit('spin', direction, position, throttled); // this.emit('update', changes);\n};\n\nSpin.prototype.processKnob = function (pushed) {\n  //this.log('KNOB', pushed);\n  var me = this;\n  var changes = {};\n  changes.knobPushed = pushed;\n  changes.knobReleased = !pushed;\n\n  if (pushed) {\n    changes.knobPushTime = new Date().getTime();\n    this.setState(changes);\n    clearTimeout(this._knobHoldTimer);\n    this._knobHoldTimer = setTimeout(function () {\n      me.log('knobHoldThreshold exceeded');\n      me.setState({\n        knobHold: true\n      });\n      me.emit('knob-hold');\n    }, this.state.knobHoldThreshold);\n  } else {\n    var wasHeld = this.state.knobHold;\n\n    if (wasHeld) {\n      changes.knobHold = false;\n      me.emit('knob-hold');\n      this.log('knob was held, cancelling presses');\n    }\n\n    changes.knobReleaseTime = new Date().getTime(); // changes.knobReleaseTime;\n    // changes.knobReleaseTime - this.state.knobPushTime;\n\n    clearTimeout(this._knobHoldTimer); // if (me.state.knobPushDuration > me.state.knobLongPressThreshold) {\n    // \tme.log('knobLongPressThreshold exceeded');\n    // \tme.emit('knob-longpress');\n    // }\n    // else {\n    // \tme.emit('knob-press');\n    // }\n\n    this.setState(changes);\n\n    if (wasHeld) {\n      this.emit('knob-longpress');\n    } else {\n      this.emit('knob-press');\n    }\n  }\n\n  this.emit('knob', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processButton = function (pushed) {\n  var me = this;\n  var changes = {};\n  changes.buttonPushed = pushed;\n  changes.buttonReleased = !pushed;\n\n  if (pushed) {\n    changes.buttonPushTime = new Date().getTime();\n    clearTimeout(this._buttonHoldTimer);\n    this._buttonHoldTimer = setTimeout(function () {\n      me.log('buttonHoldThreshold exceeded'); // me.setState({\n      // \tbuttonHold: true\n      // });\n\n      changes.buttonHold = true;\n      me.emit('button-hold');\n    }, this.state.buttonHoldThreshold);\n  } else {\n    var wasHeld = this.state.buttonHold;\n\n    if (wasHeld) {\n      changes.buttonHold = false;\n      this.log('button was held, cancelling presses');\n    }\n\n    changes.buttonReleaseTime = new Date().getTime();\n    changes.buttonPushDuration = changes.buttonReleaseTime - this.state.buttonPushTime;\n    clearTimeout(this._buttonHoldTimer); // if (me.state.buttonPushDuration > me.state.buttonLongPressThreshold) {\n    // \tme.log('buttonLongPressThreshold exceeded');\n    // \tme.emit('button-longpress');\n    // }\n    // else {\n    // \tme.emit('button-press');\n    // }\n  } //debugger;\n\n\n  this.setState(changes);\n\n  if (wasHeld) {\n    this.emit('button-longpress');\n  } else {\n    this.emit('button-press');\n  }\n\n  this.emit('button', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processStatus = function (batteryVoltage, isCharging, isCharged, sleepTimer, inactivityTime, sleepEnabled) {\n  // round off batteryVoltage\n  batteryVoltage = Math.round(batteryVoltage * 10) / 10;\n  var first = this.state.batteryVoltage === 0;\n  var changes = {};\n  var hasChanges = false;\n\n  if (this.state.sleepTimer !== sleepTimer) {\n    this.state.sleepTimer = changes.sleepTimer = sleepTimer;\n    hasChanges = true;\n  }\n\n  if (this.state.inactivityTime !== inactivityTime) {\n    this.state.inactivityTime = changes.inactivityTime = inactivityTime;\n  }\n\n  if (this.state.sleepEnabled !== sleepEnabled) {\n    this.state.sleepEnabled = changes.sleepEnabled = sleepEnabled;\n    hasChanges = true;\n  }\n\n  if (this.state.isCharged !== isCharged) {\n    this.state.isCharged = isCharged;\n    changes.isCharged = isCharged;\n    if (!first) this.emit('charged', isCharged);\n  }\n\n  if (this.state.batteryVoltage !== batteryVoltage) {\n    hasChanges = true;\n    this.state.batteryVoltage = changes.batteryVoltage = batteryVoltage;\n    this.state.batteryPercent = changes.batteryPercent = isCharging ? 1 : Math.min(batteryVoltage / 4.2, 1);\n\n    if (!first) {\n      // dont emit event on first reception\n      this.emit('battery', batteryVoltage, changes.batteryPercent);\n    }\n\n    if (this.state.isCharging !== isCharging) {\n      this.state.isCharging = isCharging;\n      changes.isCharging = isCharging;\n      if (!first) this.emit('charging', isCharging);\n    }\n  } // if (hasChanges) this.emit('update', changes);\n\n};\n\nSpin.prototype.processSleep = function (status, millis) {\n  switch (status) {\n    case 0:\n      this.emit('wake');\n      break;\n\n    case 1:\n      this.emit('sleep-warning', millis);\n      break;\n\n    case 2:\n      this._sleeping();\n\n      break;\n  }\n};\n\nSpin.prototype.sendCommand = function () {\n  var args = Array.prototype.slice.call(arguments);\n  this.transport.sendCommand(this, args); // if (this.usbDevice) {\n  // \tusb.sendCommand.apply(usb, args);\n  // }\n  // else {\n  // \ttcp.sendCommand.apply(tcp, args);\n  // } //this.id, 'FLASH', color.join(',') + ',' + repeat);\n};\n\nSpin.prototype.flash = function (color) {\n  this.sendCommand(this.id, 'FLASH', color); //color.join(','));\n  // if (this.bleDevice) this.bleDevice.flash(color);\n  // else {\n  // \tcolor.push(1);\n  // \tthis.sendCommand(this.id, 'FLASH', color.join(','));\n  // }\n};\n\nSpin.prototype.quickFlash = function (color, repeat) {\n  if (!repeat) repeat = 1;\n  if (this.bleDevice) this.bleDevice.quickFlash(color, repeat);else this.sendCommand(this.id, 'QUICKFLASH', color.join(',') + ',' + repeat);\n}; // Spin.prototype.quickFlashSingle = function (color, index) {\n// \tif (!index) index = 0;\n// \tindex = parseInt(index);\n// \tthis.sendCommand(this.id, 'QUICKFLASHONE', color.join(',') + ',' + index);\n// };\n\n\nSpin.prototype.lightsOn = function (color) {\n  if (this.bleDevice) this.bleDevice.lights(color);else this.sendCommand(this.id, 'LIGHTSON', color);\n};\n\nSpin.prototype.lightsOff = function () {\n  if (this.bleDevice) this.bleDevice.lights([0, 0, 0]);else this.sendCommand(this.id, 'LIGHTSOFF');\n};\n\nSpin.prototype.setThrottle = function (throttle) {\n  this.setState({\n    throttle: 0\n  });\n  if (!this.bleDevice) this.sendCommand(this.id, 'THROTTLE', throttle);\n};\n\nSpin.prototype.setBrightness = function (brightness) {\n  if (this.bleDevice) this.bleDevice.setBrightness(brightness);else this.sendCommand(this.id, 'BRIGHTNESS', brightness);\n};\n\nSpin.prototype.setName = function (name) {\n  if (this.bleDevice) this.bleDevice.setName(name);\n}; // Spin.prototype.setRotateColors = function (mode, colorLeft, colorRight) {\n// \tthis.sendCommand(this.id, 'ROTATECOLORS', colorLeft.concat(colorRight));\n// };\n\n\nSpin.prototype.rotate = function (direction, mode, color1, color2) {\n  if (!mode) mode = 0;\n  this.log('rotate', direction, mode);\n  if (this.bleDevice) this.bleDevice.rotate(mode, direction, color1, color2);else this.sendCommand(this.id, 'ROTATE', [mode, direction]);\n}; // Spin.prototype.setScaleColors = function (mode, colorLow, colorHigh, colorPoint) {\n// \tthis.sendCommand(this.id, 'SCALECOLORS', colorLow.concat(colorHigh).concat(colorPoint));\n// };\n\n\nSpin.prototype.scale = function (percent, mode, color1, color2, color3) {\n  if (this.bleDevice) this.bleDevice.scale(mode, percent, color1, color2, color3);else this.sendCommand(this.id, 'SCALAR', [mode, percent]);\n};\n\nSpin.prototype.sleep = function () {\n  if (this.bleDevice) this.bleDevice.sleep();\n  this.sendCommand(this.id, 'SLEEP');\n};\n\nSpin.prototype.delaySleep = function () {\n  if (this.bleDevice) this.bleDevice.delaySleep();else this.sendCommand(this.id, 'DELAYSLEEP');\n}; // Spin.prototype.setSleepEnabled = function (enabled) {\n// \tif (enabled) this.sendCommand(this.id, 'ENABLESLEEP');\n// \telse this.sendCommand(this.id, 'DISABLESLEEP');\n// };\n// Spin.prototype.enableSleep = function () {\n// \ttcp.sendCommand(this.id, 'ENABLESLEEP');\n// };\n// Spin.prototype.disableSleep = function () {\n// \ttcp.sendCommand(this.id, 'DISABLESLEEP');\n// };\n\n\nSpin.prototype.setKnobHoldThreshold = function (th) {\n  this.changeSettings({\n    knobHoldThreshold: th\n  });\n};\n\nSpin.prototype.setButtonHoldThreshold = function (th) {\n  this.changeSettings({\n    buttonHoldThreshold: th\n  });\n};\n\nSpin.prototype.setSleepTimer = function (minutes) {\n  if (this.bleDevice) this.bleDevice.setSleepTimer(minutes);else {\n    var ms = minutes * 60 * 1000;\n    this.sendCommand(this.id, 'SLEEPTIMER', ms);\n  }\n};\n\nSpin.prototype.destroy = function () {\n  this.disconnect();\n  this.log('destroying');\n\n  this._removeEvents();\n\n  delete this.state;\n};\n\nSpin.debug = function (q) {\n  plugin.logger.quiet(!q);\n};\n\nSpin.spinIds; // Spin.startServices = function () {\n// \tudp.startService();\n// \ttcp.startService();\n// };\n//\n// Spin.scan = function () {\n// \tSpin.startServices();\n//\n// \tvar _id;\n// \tvar callback;\n// \tif (arguments.length === 2) {\n// \t\tif (arguments[0] === null) {\n// \t\t\tlog('scanning');\n// \t\t}\n// \t\telse {\n// \t\t\tlog('scanning for ' + arguments[0]);\n// \t\t}\n// \t\tcallback = arguments[1];\n// \t}\n// \telse {\n// \t\tcallback = arguments[0];\n// \t\tlog('scanning');\n// \t}\n//\n// \t// var found = {};\n//\n// \tvar stop = function () {\n// \t\tudp.removeListener('ping', scanPing);\n// \t\tlog('stopped scanning');\n// \t};\n//\n// \tvar rescan = function () {\n// \t\t// found = {};\n// \t\tSpin.scan(callback);\n// \t};\n//\n// \tvar scanPing = function (pingNumber, ip, id, port, protocol, version, name, lastModified) {\n// \t\tif (!udp.isConnecting(id)) {\n//\n// \t\t\tif (!_id || _id === id) {\n// \t\t\t\t// if (found[id]) {\n// \t\t\t\t// \tlog('previously found', id);\n// \t\t\t\t// }\n// \t\t\t\t// else {\n// \t\t\t\t// \tfound[id] = true;\n//\n// \t\t\t\tcallback({\n// \t\t\t\t\tip: ip,\n// \t\t\t\t\tid: id,\n// \t\t\t\t\tport: port\n// \t\t\t\t}, stop, rescan);\n//\n// \t\t\t\t//}\n// \t\t\t}\n//\n// \t\t}\n// \t\telse log('connectAll isConnecting', id);\n// \t};\n//\n// \tudp.addListener('ping', scanPing);\n// };\n//\n// Spin.connectAll = function (callback) {\n// \tSpin.connectWifi(callback);\n// \t// Spin.connectUSB(callback);\n// \tSpin.connectBLE(callback);\n// };\n//\n// Spin.connectWifi = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tlog('connectAll found', device);\n// \t\tvar spin = Spin.create(device);\n// \t\tspin.once('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n// \t\tspin.connect();\n// \t});\n// };\n//\n// Spin.connectOne = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tdone();\n// \t\tlog('connectOne found', device);\n//\n// \t\tvar spin = Spin.create(device);\n//\n// \t\tspin.on('disconnect', function () {\n// \t\t\tlog('scan disconnect');\n// \t\t\trescan();\n// \t\t});\n//\n// \t\tcallback(spin);\n//\n// \t\tspin.connect();\n// \t});\n//\n// \t// Spin.connectTo(null, callback);\n// };\n//\n\nSpin.create = function (device, transport) {\n  if (device.id in spinIds) {\n    log('device exists', device);\n    spinIds[device.id].destroy();\n    delete spinIds[device.id];\n    var spin = new Spin(device, transport);\n    return spinIds[device.id];\n  } else {\n    log('creating new device', device, transport);\n    return new Spin(device, transport);\n  }\n}; //\n// Spin.connectTo = function (id, callback) {\n// \tSpin.scan(id, function (device, done, rescan) {\n// \t\tif (!id || device.id === id) {\n// \t\t\tdone();\n//\n// \t\t\tlog('connectTo found', device);\n//\n// \t\t\tvar spin = Spin.create(device);\n//\n// \t\t\tspin.on('disconnect', function () {\n// \t\t\t\tlog('scan disconnect');\n// \t\t\t\trescan();\n// \t\t\t});\n//\n// \t\t\tcallback(spin);\n//\n// \t\t\tspin.connect();\n// \t\t}\n// \t});\n// };\n//\n// Spin.connectUSBDevice = function (devicePath, callback) {\n// \tif (devicePath in usb.ids) {\n// \t\tlog(devicePath,'already exists');\n// \t\tusb.open(devicePath);\n// \t\treturn false;\n// \t}\n// \tlog('connecting usb', devicePath);\n//\n// \tvar spin = Spin.create({\n// \t\tid: devicePath,\n// \t\tusbDevice: devicePath\n// \t});\n//\n// \tspin.on('connect', function () {\n// \t\tlog('usb connect');\n// \t\tcallback(spin);\n// \t});\n//\n// \tspin.on('disconnect', function () {\n// \t\tlog('usb disconnect');\n// \t});\n//\n// \tspin.connect();\n// \treturn true;\n// };\n//\n// function startInterval(cb,t) {\n// \tcb();\n// \treturn setInterval(cb,t);\n// }\n//\n// Spin.connectUSB = function () {\n// \tvar devicePath, callback;\n// \tif (arguments.length === 1) {\n// \t\tcallback = arguments[0];\n// \t\tstartInterval(function() {\n// \t\t\tusb.getSpinUSBPorts(function(devicePaths) {\n// \t\t\t\tlog('usb', devicePaths);\n// \t\t\t\tdevicePaths.forEach(function(devicePath) {\n// \t\t\t\t\tSpin.connectUSBDevice(devicePath, callback);\n// \t\t\t\t});\n// \t\t\t});\n// \t\t},5000);\n// \t}\n// \telse if (arguments.length === 2) {\n// \t\tdevicePath = arguments[0];\n// \t\tcallback = arguments[1];\n// \t\tSpin.connectUSBDevice(devicePath, callback);\n// \t}\n// };\n//\n// Spin.connectBLE = function() {\n// \tif (typeof ble==='undefined') return;\n// \tvar deviceId, callback;\n//\n// \tif (arguments.length===2) {\n// \t\tdeviceId = arguments[0];\n// \t\tcallback = arguments[1];\n// \t}\n// \telse callback = arguments[0];\n//\n// \tble.on('discover', function(peripheral) {\n// \t\tvar id = peripheral.id;\n// \t\tif (deviceId) {\n// \t\t\tif (id !== deviceId) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n//\n// \t\tif (deviceId) {\n// \t\t\tble.stopScan();\n// \t\t}\n//\n// \t\tif (id in ble.ids) {\n// \t\t\tlog('ble already exists',id);\n// \t\t\t//ble.connect(devicePath);\n// \t\t\treturn false;\n// \t\t}\n//\n// \t\tlog('connecting ble', id);\n//\n// \t\tvar spin = Spin.create({\n// \t\t\tid: id,\n// \t\t\tblePeripheral: peripheral\n// \t\t});\n//\n// \t\tspin.on('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n//\n// \t\t// spin.on('disconnect', function() {\n// \t\t// \t//callback(spin);\n// \t\t// \tconsole.log('disconnect ble??');\n// \t\t// });\n//\n// \t\tble.connectSpin(spin);\n//\n// \t});\n//\n// \tble.scan();\n// };\n\n\nmodule.exports = Spin;","// var chalk = require('chalk');\nvar chalk = {\n  green: console.log,\n  yellow: console.log,\n  cyan: console.log,\n  magenta: console.log\n};\n\nvar _quiet = process.env.NODE_ENV !== 'dev';\n\nvar logger = {\n  quiet: function quiet(q) {\n    _quiet = q;\n  },\n  log: function log() {\n    if (_quiet) return;\n    var args = Array.prototype.slice.call(arguments);\n    args = args.map(function (arg, index) {\n      if (index === 0 && typeof arg === 'object' && arg.loggerName) {\n        return chalk.green(arg.loggerName);\n      }\n\n      if (typeof arg === 'string') {\n        if (index >= 2 && typeof args[0] === 'object' && args[0].loggerName && typeof args[1] === 'string') return arg;\n        return chalk.cyan(arg);\n      }\n\n      if (typeof arg === 'number') return chalk.magenta(arg);\n      if (arg === null) return chalk.yellow('null');\n      if (typeof arg === 'undefined') return chalk.yellow('undefined');\n      return arg;\n    });\n    console.log.apply(null, args);\n  },\n  create: function create(name, colors) {\n    return function (n) {\n      return function log() {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift({\n          loggerName: n\n        });\n        logger.log.apply(logger, args);\n      };\n    }(name);\n  }\n};\nmodule.exports = logger;","var EventEmitter = require('events');\n\nvar createLogger = require('./logger').create;\n\nfunction Store(name) {\n  this.constructor();\n  this.log = createLogger(name);\n  this.log('created');\n  this.ids = {};\n}\n\nStore.prototype = new EventEmitter();\nStore.prototype.constructor = EventEmitter;\n\nStore.prototype.destroy = function (id) {\n  this.log('destroying', id);\n  this[id].removeAllListeners('created');\n  this[id].removeAllListeners('update');\n  delete this.ids[id];\n  delete this[id];\n  this.emit('destroyed', id);\n};\n\nStore.prototype.set = function (id, data) {\n  // console.log('set', id, data);\n  if (!id) {\n    console.log('no set id', data);\n    return;\n  }\n\n  var changes = {};\n  var hasChanges = false;\n  var created = false;\n\n  if (!this[id]) {\n    this[id] = data;\n    this.ids[id] = true;\n    this.emit('created', id, data);\n    this.log('created', id, data);\n    hasChanges = true;\n    created = true;\n    changes = data;\n  } else {\n    var s = this[id];\n\n    for (var i in data) {\n      if (s[i] !== data[i]) {\n        hasChanges = true;\n        changes[i] = s[i] = data[i];\n      }\n    }\n  }\n\n  if (hasChanges) {\n    if (!created) {// this.log(id + ' update', changes);\n      // console.log(id + ' update', changes);\n    }\n\n    this.emit('update', id, changes);\n    return changes;\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = Store;","function isColor(c) {\n  return c instanceof Color;\n}\n\nvar colors = require('./colors');\n\nvar Color = function Color() {\n  if (arguments.length === 1 && typeof arguments[0] === 'number' && arguments[0] >= 0 && arguments[0] <= 255) {\n    return this.value = colors.rgb(arguments[0], arguments[0], arguments[0]);\n  }\n\n  if (isColor(arguments[0])) this.value = arguments[0].value;else this.value = arguments.length > 0 ? colors.rgb.apply(null, Array.from(arguments)) : '#000';\n};\n\nColor.prototype = {\n  toString: function toString() {\n    return this.value;\n  },\n  // setters\n\n  /**\n   * Sets the transparency of a color\n   *\n   * @method alpha\n   * @memberof Color\n   * @param {Number} alpha transparency level between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').alpha(0.5);  // returns {value:\"rgba(255,0,0,0.5)\"}\n   *\n   */\n  alpha: function alpha(v) {\n    return new Color(colors.alpha(this.value, v));\n  },\n\n  /**\n   * Increases the \"lightness\" of a color value\n   *\n   * @method lighten\n   * @memberof Color\n   * @param {Number} lightenBy amount to lighten between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').lighten(0.5); // returns {value:\"#FF8080\"}\n   *\n   */\n  lighten: function lighten(v) {\n    return new Color(colors.lighten(this.value, v));\n  },\n\n  /**\n   * Decreases the \"lightness\" of a color value\n   *\n   * @method darken\n   * @memberof Color\n   * @param {Number} darkenBy amount to darken between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').darken(0.5); // returns {value:\"#800000\"}\n   *\n   */\n  darken: function darken(v) {\n    return new Color(colors.darken(this.value, v));\n  },\n\n  /**\n   * Increases the \"saturation\" of a color value\n   *\n   * @method saturate\n   * @memberof Color\n   * @param {Number} saturateBy amount to saturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(125,0,0)').saturate(0.2); // returns {value:\"#7D0000\"}\n   *\n   */\n  saturate: function saturate(v) {\n    return new Color(colors.saturate(this.value, v));\n  },\n\n  /**\n   * Decreases the \"saturation\" of a color value\n   *\n   * @method desaturate\n   * @memberof Color\n   * @param {Number} desaturateBy amount to desaturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(125,0,0).desaturate(0.2); // returns {value:\"#710C0C\"}\n   *\n   */\n  desaturate: function desaturate(v) {\n    return new Color(colors.desaturate(this.value, v));\n  },\n\n  /**\n   * Modify the hue, lightness, and saturation of a color\n   *\n   * @method shiftHSL\n   * @memberof Color\n   * @param {Number} hue amount to change the hue by, between 0 and 1\n   * @param {Number} saturation amount to change the hue by, between 0 and 1\n   * @param {Number} lightness amount to change the hue by, between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHSL(0.1,0.2,0.3); // returns {value:\"#94FF4D\"}\n   *\n   */\n  shiftHSL: function shiftHSL(h, s, l, a) {\n    var c = new Color(colors.shiftHSL(this.value, h, s, l));\n    if (a) c = c.alpha(a);\n    return c;\n  },\n\n  /**\n   * Shifts the \"hue\" of a color value by a given percentage\n   *\n   * @method shiftHue\n   * @memberof Color\n   * @param {Number} hueShift amount to modify the hue by between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHue(0.25); // returns {value:\"#00FF7F\"}\n   *\n   */\n  shiftHue: function shiftHue(v) {\n    return new Color(colors.shiftHue(this.value, v));\n  },\n\n  /**\n   * Shifts the hue of a color closer to another color by a given percentage\n   *\n   * @method combine\n   * @memberof Color\n   * @param {Object} targetColor color string, array, or object\n   * @param {Number} [amount=0.5] how close to the target color between 0 and 1 (0.5 is half-way between)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(0).combine('#fff'); // returns {value:\"#808080\"}\n   * new Color(255,0,0).combine('#00f',0.7); // returns {value:\"#4D00B3\"}\n   *\n   */\n  combine: function combine(t, v) {\n    if (isColor(t)) t = t.value;\n    var c = colors.combine(this.value, t, v);\n    return new Color(c);\n  },\n\n  /**\n   * Shifts the \"hue\" of a color closer to another color by a given percentage\n   *\n   * @method tint\n   * @memberof Color\n   * @param {String} targetColor color string or array\n   * @param {Number} amount amount to shift the hue toward the target color between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').tint('#00f',0.5); // returns {value:\"#F0F\"}\n   * new Color('rgb(0,0,100)').tint('rgb(100,0,0)',0.1); // returns {value:\"#140064\"}\n   *\n   */\n  tint: function tint(t, v) {\n    if (isColor(t)) t = t.value;\n    return new Color(colors.tint(this.value, t, v));\n  },\n\n  /**\n   * Set the \"hue\" of a color\n   *\n   * @method hue\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hue(2/3); // returns {value:\"#00F\"}\n   * new Color('#0f0').hue(1); // returns {value:\"#F00\"}\n   * new Color('#00f').hue(1/3); // returns {value:\"#0F0\"}\n   *\n   */\n  hue: function hue(v) {\n    return new Color(colors.hue(this.value, v));\n  },\n\n  /**\n   * Set the \"saturation\" of a color\n   *\n   * @method saturation\n   * @memberof Color\n   * @param {Number} saturation saturation value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,50,50)').saturation(0); // returns {value:\"#4B4B4B\")\n   * new Color('rgb(50,0,0)').saturation(0.5);  // returns {value:\"#260C0C\")\n   * new Color('rgb(50,50,100)').saturation(1); // returns {value:\"#000096\")\n   *\n   */\n  saturation: function saturation(v) {\n    return new Color(colors.saturation(this.value, v));\n  },\n\n  /**\n   * Set the lightness of a color, how close to white or black the color will be\n   *\n   * @method lightness\n   * @memberof Color\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').lightness(0); // returns {value:\"#000\"}\n   * new Color('rgb(255,0,0)').lightness(0.5); // returns {value:\"#F00\"}\n   * new Color('rgb(255,0,0)').lightness(1); // returns {value:\"#FFF\"}\n   *\n   */\n  lightness: function lightness(v) {\n    return new Color(colors.lightness(this.value, v));\n  },\n\n  /**\n   * Inverts the color\n   *\n   * @method invert\n   * @memberof Color\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').invert(1); // returns {value:\"#0FF\"}  // cyan\n   * new Color('#fff').invert();  // returns {value:\"#000\"}   // black\n   *\n   */\n  invert: function invert() {\n    return new Color(colors.invert(this.value));\n  },\n\n  /**\n   * Modify the red, green, or blue component of a color\n   *\n   * @method rgb\n   * @memberof Color\n   * @param {Number} red red component (0-255)\n   * @param {Number} green green component (0-255)\n   * @param {Number} blue blue component (0-255)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').rgb(null,null,255); // returns {value:\"#F0F\"}\n   * new Color('#0f0').rgb(null,255,null); // returns {value:\"#0F0\"}\n   * new Color('#ff0').rgb(null,null,255); // returns {value:\"#FFF\"}\n   * new Color('#fff').rgb(100);           // returns {value:\"#64FFFF\"}\n   *\n   */\n  rgb: function rgb() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setRGB.apply(null, a));\n  },\n\n  /**\n   * Set the hue, saturation, or lightness of a color and return the new color\n   *\n   * @method hsl\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @param {Number} saturation saturation value between 0 and 1\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hsl(null,0.5,0.5); // returns {value:\"#BF4040\"}\n   *\n   */\n  hsl: function hsl() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setHSL.apply(null, a));\n  },\n\n  /**\n   * Set the red component of a color\n   *\n   * @method red\n   * @memberof Color\n   * @param {Number} red red component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,255)').red(255);  // returns {value:\"#F0F\"}\n   *\n   */\n  red: function red(r) {\n    return this.rgb(r);\n  },\n\n  /**\n   * Set the green component of a color\n   *\n   * @method green\n   * @memberof Color\n   * @param {Number} green green component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').green(255);  // returns {value:\"#FF0\"}\n   *\n   */\n  green: function green(g) {\n    return this.rgb(null, g);\n  },\n\n  /**\n   * Set the blue component of a color\n   *\n   * @method blue\n   * @memberof Color\n   * @param {Number} blue blue component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#FF0').blue(255);  // returns {value:\"#FFF\"}\n   *\n   */\n  blue: function blue(b) {\n    return this.rgb(null, null, b);\n  },\n  // getters\n\n  /**\n   * Returns the transparency of a color\n   *\n   * @method getAlpha\n   * @memberof Color\n   * @return {Number} alpha transparency level between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getAlpha(); // returns 0\n   * new Color('rgba(255,0,0,0.5)').getAlpha(); // returns 0.5\n   *\n   */\n  getAlpha: function getAlpha() {\n    return colors.getAlpha(this.value);\n  },\n\n  /**\n   * Returns the computed red, green, blue, and alpha values as an array\n   *\n   * @method getRGB\n   * @memberof Color\n   * @return {Number[]} rgb array\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getRGB(); // returns [255,0,0]\n   * new Color('rgba(255,0,0,0.5)').getRGB()(); // returns [255,0,0,0.5]\n   *\n   */\n  getRGB: function getRGB() {\n    return colors.getRGB(this.value);\n  },\n\n  /**\n   * Returns the hexidecimal value of the color\n   *\n   * @method getHex\n   * @memberof Color\n   * @param {Boolean} full return the full 6 character hexidecimal value (eg. do not shorten #FFFFFF to #FFF)\n   * @return {String} hex color value\n   * @instance\n   *\n   * @example\n   * new Color('rgba(255,0,0,0.5)').getHex(); // returns \"#F0F\"\n   * new Color('rgba(255,0,0,0.5)').getHex(true); // returns \"#FF0000\"\n   *\n   */\n  getHex: function getHex(full) {\n    return colors.getHex(this.value, full);\n  },\n\n  /**\n   * Returns the red component of a color string\n   *\n   * @method getRed\n   * @memberof Color\n   * @return {Number} red component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getRed(); // returns 255\n   *\n   */\n  getRed: function getRed() {\n    return this.getRGB()[0];\n  },\n\n  /**\n   * Returns the green component of a color string\n   *\n   * @method getGreen\n   * @memberof Color\n   * @return {Number} green component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getGreen(); // returns 255\n   *\n   */\n  getGreen: function getGreen() {\n    return this.getRGB()[1];\n  },\n\n  /**\n   * Returns the blue component of a color string\n   *\n   * @method getBlue\n   * @memberof Color\n   * @return {Number} blue component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getBlue(); // returns 255\n   *\n   */\n  getBlue: function getBlue() {\n    return this.getRGB()[2];\n  },\n\n  /**\n   * Returns an [h,s,l] array from color string\n   *\n   * @method getHSL\n   * @memberof Color\n   * @return {Number[]} hsl array of [hue,saturation,lightness]\n   * @instance\n   *\n   * @example\n   * new Color('#f00').getHSL(); // returns [0,1,0.5]\n   *\n   */\n  getHSL: function getHSL() {\n    return colors.getHSL(this.value);\n  },\n\n  /**\n   * Return the \"hue\" of a color\n   *\n   * @method getHue\n   * @memberof Color\n   * @return {Number} hue hue value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#a1b2c1').getHue(); // returns {value:\"0.578125\"}\n   * new Color('#f00').getHue(); // returns 0\n   * new Color('#0f0').getHue(); // returns 0.3333333333333333\n   * new Color('#00f').getHue(); // returns 0.6666666666666666\n   *\n   */\n  getHue: function getHue() {\n    return this.getHSL()[0];\n  },\n\n  /**\n   * Return the \"saturation\" of a color\n   *\n   * @method getSaturation\n   * @memberof Color\n   * @return {Number} saturation saturation value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,100,100)').getSaturation(); // returns 0\n   * new Color('rgb(100,50,100)').getSaturation();  // returns 0.8333333333333334\n   * new Color('rgb(100,0,100)').getSaturation();   // returns 1\n   *\n   */\n  getSaturation: function getSaturation() {\n    return this.getHSL()[1];\n  },\n\n  /**\n   * Return the lightness of a color (how close to white or black the color is)\n   *\n   * @method getLightness\n   * @memberof Color\n   * @return {Number} lightness lightness value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,0)').getLightness();       // returns 0\n   * new Color('rgb(100,50,100)').getLightness();  // returns 0.29411764705882354\n   * new Color('rgb(255,255,255)').getLightness(); // returns 1\n   *\n   */\n  getLightness: function getLightness() {\n    return this.getHSL()[2];\n  }\n};\nColor.prototype.rgba = Color.prototype.rgb;\nColor.prototype.hsla = Color.prototype.hsl;\nmodule.exports = Color;","import React, {Component} from 'react';\nimport Jaxcore, {Spin, Listen, MonauralScope} from 'jaxcore-client';\n\nimport bumblebee from 'bumblebee-hotword';\n\nimport Speak from \"jaxcore-speak\";\nimport en from \"jaxcore-speak/voices/en/en.json\";\n\nimport interpreters, {interpreterData} from './interpreters';\n\nglobal.interpreterData = interpreterData;\nglobal.interpreters = interpreters;\n\nSpeak.addLanguages(en);\n\nlet voice = new Speak({language: 'en/en', profile: 'Jack'});\nglobal.voice = voice;\n\nclass VocabApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.numSpins = 0;\n\t\tthis.firstRecognition = true;\n\t\tthis.isRecording = true;\n\t\t\n\t\tthis.state = {\n\t\t\tmouseSelected: null,\n\t\t\trecognizedChars: [],\n\t\t\ttext: '',\n\t\t\trecognizedText: '',\n\t\t\tselectedInterpreter: 'ascii',\n\t\t\tbumbleBeeStarted: false\n\t\t};\n\t\t\n\t\tthis.speakScopeRef = React.createRef();\n\t\tthis.listenScopeRef = React.createRef();\n\t\t\n\t\tthis.interpreters = Object.keys(interpreterData);\n\t\t\n\t\tthis.soundBBStart = new Audio('ding-start.wav');\n\t\tthis.soundBBStop = new Audio('end.wav');\n\t\tglobal.app = this;\n\t}\n\t\n\ttoggleContinuous() {\n\t\tlet {continuousStarted} = this.state;\n\t\tif (!continuousStarted) {\n\t\t\tthis.soundBBStart.play();\n\t\t\tListen.startContinuous();\n\t\t}\n\t\telse {\n\t\t\tListen.stopContinuous();\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.soundBBStop.play();\n\t\t\t},500);\n\t\t}\n\t\tthis.setState({continuousStarted:!continuousStarted});\n\t}\n\t\n\ttoggleBumbleBee() {\n\t\tif (this.state.bumbleBeeStarted) this.stopBumbleBee();\n\t\telse this.startBumbleBee();\n\t}\n\tstartBumbleBee() {\n\t\tif (!this.state.bumbleBeeStarted) {\n\t\t\tbumblebee.sensitivity(0);\n\t\t\tbumblebee.start(() => {\n\t\t\t\tthis.toggleContinuous();\n\t\t\t});\n\t\t\tthis.setState({bumbleBeeStarted:true});\n\t\t\t\n\t\t}\n\t}\n\tstopBumbleBee() {\n\t\tif (this.state.bumbleBeeStarted) {\n\t\t\tbumblebee.stop();\n\t\t\tthis.setState({bumbleBeeStarted:false});\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\t\n\t\t\n\t\tthis.speakScope = new MonauralScope(this.speakScopeRef.current, {\n\t\t\tlineWidth: 1,\n\t\t\tstrokeColor: '#FF0000',\n\t\t\tfillColor: 'rgba(255,0,0,0.1)',\n\t\t\tbgOnColor: 'rgba(180,64,64,0.08)',\n\t\t\tbgOffColor: 'rgba(180,180,180,0.08)',\n\t\t\tdotColor: '#FF0000',\n\t\t\tdotSize: 2,\n\t\t\tbackground: null\n\t\t});\n\t\tthis.speakScope.draw();\n\t\tvoice.setVisualizer(this.speakScope);\n\t\t\n\t\tthis.listenScope = new MonauralScope(this.listenScopeRef.current, {\n\t\t\tlineWidth: 1,\n\t\t\tstrokeColor: '#0000FF',\n\t\t\tfillColor: 'rgba(0,0,255,0.1)',\n\t\t\tbgOnColor: 'rgba(64,64,180,0.08)',\n\t\t\tbgOffColor: 'rgba(180,180,180,0.08)',\n\t\t\tdotColor: '#0000FF',\n\t\t\tdotSize: 2,\n\t\t\tbackground: null\n\t\t});\n\t\tthis.listenScope.draw();\n\t\t\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tif (e.keyCode === 32) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.startRecording();\n\t\t\t}\n\t\t\t// console.log('d', e.keyCode);\n\t\t\t\n\t\t});\n\t\twindow.addEventListener('keyup', (e) => {\n\t\t\tif (e.keyCode === 32) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.stopRecording();\n\t\t\t}\n\t\t});\n\t\t\n\t\tJaxcore.connect(() => {\n\t\t\t\n\t\t\tListen.on('recognized', (text) => {\n\t\t\t\tconsole.log('recognized:', text);\n\t\t\t\tthis.receiveText(text);\n\t\t\t});\n\t\t\t\n\t\t\tSpin.connectAll((spin) => {\n\t\t\t\tconsole.log('connected', spin);\n\t\t\t\t\n\t\t\t\tthis.numSpins++;\n\t\t\t\t\n\t\t\t\tvoice.speak('Connected Spin ' + this.numSpins);\n\t\t\t\t\n\t\t\t\tspin.on('knob', (pushed) => {\n\t\t\t\t\tvoice.speak('knob ' + (pushed ? 'pushed' : 'released'));\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tspin.on('button', (pushed) => {\n\t\t\t\t\tif (pushed) {\n\t\t\t\t\t\tif (this.firstRecognition) {\n\t\t\t\t\t\t\tthis.firstRecognition = false;\n\t\t\t\t\t\t\tvoice.speak('voice recognition activating').then(() => {\n\t\t\t\t\t\t\t\tthis.startRecording();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.startRecording();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stopRecording();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t\n\t}\n\t\n\treceiveText(text) {\n\t\tconsole.log('raw text', text);\n\t\t\n\t\tlet processorResult = interpreters[this.state.selectedInterpreter](text);\n\t\t\n\t\t// let recognizedChars;\n\t\t// if (this.state.selectedInterpreter === 'ascii') {\n\t\t// \trecognizedChars = recognizedKeys;\n\t\t// }\n\t\t// else if (this.state.selectedInterpreter === 'chess') {\n\t\t// \trecognizedChars = recognizedKeys.map((k) => {\n\t\t// \t\treturn k.key\n\t\t// \t});\n\t\t// }\n\t\t// else if (this.state.selectedInterpreter === 'datetime') {\n\t\t//\n\t\t// }\n\t\t\n\t\tlet result = '';\n\t\t\n\t\tif (this.state.selectedInterpreter === 'ascii') {\n\t\t\tif (processorResult) {\n\t\t\t\tresult = processorResult.map((key) => {\n\t\t\t\t\treturn interpreterData.ascii[key][0];\n\t\t\t\t}).join(' ');\n\t\t\t}\n\t\t}\n\t\telse if (this.state.selectedInterpreter === 'chess') {\n\t\t\tif (processorResult) {\n\t\t\t\tresult = processorResult.map((k) => {\n\t\t\t\t\treturn k.key\n\t\t\t\t}).join(' ');\n\t\t\t}\n\t\t}\n\t\telse if (this.state.selectedInterpreter === 'datetime') {\n\t\t\tif (processorResult) {\n\t\t\t\tresult = processorResult.toLocaleString();\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\trecognizedText: text,\n\t\t\tprocessedResult: result\n\t\t\t// recognizedKeys,\n\t\t\t// recognizedChars\n\t\t});\n\t\t\n\t\tconsole.log('processorResult', processorResult);\n\t\t\n\t\t// if (this.state.selectedInterpreter === 'ascii') {\n\t\t// \tlet recognizedChars = interpreters.ascii(text);\n\t\t// \tthis.setState({\n\t\t// \t\trecognizedText: text,\n\t\t// \t\trecognizedChars\n\t\t// \t});\n\t\t// } else {\n\t\t// \tconsole.log('interpreting', text);\n\t\t// \tlet recognizedWords = interpreters.chess(text);\n\t\t// \tconsole.log('recognizedWords', recognizedWords);\n\t\t//\n\t\t// }\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"panel\">\n\t\t\t\t\tRecognized Text: {this.state.recognizedText}\n\t\t\t\t\t<br/>\n\t\t\t\t\tInterpreted Result: {this.state.processedResult}\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"panelOptions\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{/*<button onClick={e=>this.toggleBumbleBee()}>*/}\n\t\t\t\t\t\t\t\t{/*{this.state.bumbleBeeStarted?'Stop':'Start'} BumbleBee*/}\n\t\t\t\t\t\t\t{/*</button>*/}\n\t\t\t\t\t\t\tPress Space for momentary, or:\n\t\t\t\t\t\t\t<button onClick={e=>this.toggleContinuous()}>\n\t\t\t\t\t\t\t\t{this.state.continuousStarted?'Stop':'Start'} Continuous\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Interpreter:</span>\n\t\t\t\t\t\t\t<select className=\"selectedInterpreter\" value={this.state.selectedInterpreter}\n\t\t\t\t\t\t\t\t\tonChange={e => this.changeInterpreter(e)}>\n\t\t\t\t\t\t\t\t{ this.interpreters.map((interpreter,i) => {\n\t\t\t\t\t\t\t\t\treturn (<option value={interpreter} key={i}>{interpreter}</option>);\n\t\t\t\t\t\t\t\t}) }\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<canvas id=\"speak\" ref={this.speakScopeRef} width=\"70\" height=\"70\"/>\n\t\t\t\t\t<canvas id=\"listen\" ref={this.listenScopeRef} width=\"70\" height=\"70\"/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{this.renderTable()}\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderprocessedResult() {\n\t\t// let interpreter = this.state.selectedInterpreter;\n\t\t//\n\t\t// if (interpreter === 'ascii') {\n\t\t// \treturn this.state.recognizedChars.map((key) => {\n\t\t// \t\treturn interpreterData[interpreter][key][0];\n\t\t// \t}).join(' ');\n\t\t// }\n\t\t// else if (interpreter === 'chess') {\n\t\t// \treturn this.state.recognizedChars.join(' ');\n\t\t// }\n\t\t// else if (interpreter === 'datetime') {\n\t\t// \treturn this.state.recognizedResult;\n\t\t// }\n\t}\n\t\n\tchangeInterpreter(e) {\n\t\tlet selectedInterpreter = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\tselectedInterpreter\n\t\t});\n\t}\n\t\n\tonChangeText(e) {\n\t\tthis.setState({\n\t\t\ttext: e.target.value\n\t\t});\n\t}\n\t\n\trenderTable() {\n\t\tif (this.state.selectedInterpreter === 'ascii') return this.renderAscii();\n\t\telse {\n\t\t\tlet data = interpreterData[this.state.selectedInterpreter];\n\t\t\tlet trs = [];\n\t\t\tlet i = 0;\n\t\t\tfor (let key in data) {\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t\tlet wordLinks = [];\n\t\t\t\tdata[key].forEach((word,index) => {\n\t\t\t\t\twordLinks.push(<span key={index}>\n\t\t\t\t\t\t{word}\n\t\t\t\t\t</span>);\n\t\t\t\t\tif (index < data[key].length-1) {\n\t\t\t\t\t\twordLinks.push((<span key={'s_' + index}>{' '}/{' '}</span>));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tlet clss = '';\n\t\t\t\tif (this.state.mouseSelected === i) clss += 'mouseSelected ';\n\t\t\t\tif (this.state.recognizedChars.indexOf(key) > -1) clss += 'voiceSelected';\n\t\t\t\t\n\t\t\t\tlet rowi = i;\n\t\t\t\ttrs.push((<tr key={i} className={clss} onClick={e => this.clickTR(e, rowi, key)}>\n\t\t\t\t\t<td key={0}>{key}</td>\n\t\t\t\t\t<td key={1}>{wordLinks}</td>\n\t\t\t\t</tr>));\n\t\t\t}\n\t\t\treturn (<table>\n\t\t\t\t<tbody className=\"header\">\n\t\t\t\t<tr className=\"header\">\n\t\t\t\t\t<th className=\"dec\">{this.state.selectedInterpreter}</th>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t\t<tbody>\n\t\t\t\t{trs}\n\t\t\t\t</tbody>\n\t\t\t</table>);\n\t\t}\n\t}\n\t\n\tclickTR(e, i, word) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.setState({\n\t\t\tmouseSelected: i\n\t\t});\n\t\tvoice.speak(word);\n\t}\n\t\n\trenderAscii() {\n\t\t\n\t\tlet i = 0;\n\t\tlet words;\n\t\tlet rows = [];\n\t\tlet a;\n\t\tfor (let dec in interpreterData.ascii) {\n\t\t\ta = interpreterData.ascii[dec][0];\n\t\t\twords = interpreterData.ascii[dec][1];\n\t\t\tif (!words) words = [a];\n\t\t\t\n\t\t\tlet clss = '';\n\t\t\tif (this.state.mouseSelected === i) clss += 'mouseSelected ';\n\t\t\tif (this.state.recognizedChars.indexOf(i) > -1) clss += 'voiceSelected';\n\t\t\t\n\t\t\tlet wordElms = [];\n\t\t\t\n\t\t\tlet rowi = i;\n\t\t\twords.forEach((word, index) => {\n\t\t\t\twordElms.push(<a key={index} href=\"/\" onClick={e => this.clickRow(e, rowi, a, word)}>\n\t\t\t\t\t{word}\n\t\t\t\t</a>);\n\t\t\t});\n\t\t\t\n\t\t\tlet words2 = [];\n\t\t\twordElms.forEach((w, i) => {\n\t\t\t\twords2.push(w);\n\t\t\t\tif (i < words.length - 1) {\n\t\t\t\t\twords2.push((<span key={'s_' + i}>{' '}/{' '}</span>));\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tlet firstWord = words[0];\n\t\t\trows.push(<tr key={i} className={clss} onClick={e => this.clickRow(e, rowi, a, firstWord)}>\n\t\t\t\t<td className=\"dec\">{dec}</td>\n\t\t\t\t<td className=\"char\">{a}</td>\n\t\t\t\t<td>{words2}</td>\n\t\t\t</tr>);\n\t\t\t\n\t\t\ti++;\n\t\t}\n\t\t\n\t\treturn (<table>\n\t\t\t<tbody className=\"header\">\n\t\t\t<tr className=\"header\">\n\t\t\t\t<th className=\"dec\">dec</th>\n\t\t\t\t<th className=\"char\">char</th>\n\t\t\t\t<th className=\"words\" colSpan=\"6\">words</th>\n\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<tbody>\n\t\t\t{rows}\n\t\t\t</tbody>\n\t\t</table>);\n\t}\n\t\n\tclickRow(e, i, a, word) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.setState({\n\t\t\tmouseSelected: i\n\t\t});\n\t\tif (!word) {\n\t\t\tword = a;\n\t\t\tif (/[A-Z]/.test(word)) {\n\t\t\t\tword = \"uppercase \" + word;\n\t\t\t} else if (/[a-z]/.test(word)) {\n\t\t\t\tword = \"letter \" + word;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvoice.speak(word);\n\t}\n\t\n\tstartRecording() {\n\t\tif (!this.state.isRecording) {\n\t\t\tListen.start();\n\t\t\tthis.listenScope.startRecording();\n\t\t\tthis.setState({\n\t\t\t\tisRecording: true,\n\t\t\t\trecognizedText: '',\n\t\t\t\trecognizedChars: [],\n\t\t\t});\n\t\t}\n\t}\n\t\n\tstopRecording() {\n\t\tif (this.state.isRecording) {\n\t\t\tListen.stop();\n\t\t\tthis.listenScope.stopRecording();\n\t\t\tthis.setState({\n\t\t\t\tisRecording: false\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default VocabApp;\n","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\n// The object previously known as Client (minus bindInterface)\nimport EventEmitter from 'events';\n\nvar CollectionModel =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(CollectionModel, _EventEmitter);\n\n  function CollectionModel() {\n    _classCallCheck(this, CollectionModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionModel).apply(this, arguments));\n  }\n\n  _createClass(CollectionModel, [{\n    key: \"setStore\",\n    value: function setStore(store, singleton) {\n      if (singleton) {\n        this.store = null;\n        this.state = store;\n      } else {\n        this.store = store;\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(data) {\n      if (typeof arguments[0] === 'string') {\n        var type = arguments[0];\n        data = arguments[1];\n        var d = Object.assign({}, this.state[type]);\n        this.state[type] = d;\n        var changes = {};\n        changes[type] = {};\n\n        for (var name in data) {\n          if (d[name] !== data[name]) {\n            d[name] = data[name];\n            changes[type][name] = data[name];\n          }\n        }\n\n        return changes;\n      } else {\n        if (this.store) {\n          var id = this.state ? this.state.id : data.id;\n          var changes = this.store.set(id, data);\n          this.state = this.store[id];\n          this.emit('update', changes);\n          return changes;\n        } else {\n          return this._setState(data);\n        }\n      }\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(data) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        // this.emit('update', this.state, changes);\n        this.emit('update', changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state.id in this.store ? this.store[this.state.id] : {};\n    }\n  }]);\n\n  return CollectionModel;\n}(EventEmitter);\n\nexport default CollectionModel;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Listener =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Listener, _EventEmitter);\n\n  function Listener(postCommand) {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listener).call(this));\n    _this.postCommand = postCommand;\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"start\",\n    value: function start() {\n      console.log('listen start');\n      this.postCommand({\n        listenCommand: {\n          command: 'start'\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      console.log('listen stop');\n      this.postCommand({\n        listenCommand: {\n          command: 'stop'\n        }\n      });\n    }\n  }, {\n    key: \"startContinuous\",\n    value: function startContinuous(options) {\n      console.log('startContinuous', options);\n      this.postCommand({\n        listenCommand: {\n          command: 'start-continuous',\n          arguments: options\n        }\n      });\n    }\n  }, {\n    key: \"stopContinuous\",\n    value: function stopContinuous() {\n      this.postCommand({\n        listenCommand: {\n          command: 'stop-continuous'\n        }\n      });\n    }\n  }, {\n    key: \"recognizedText\",\n    value: function recognizedText(text) {\n      this.emit('recognized', text);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.emit('start', text);\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.emit('stop', text);\n    }\n  }, {\n    key: \"onStartContinuous\",\n    value: function onStartContinuous() {\n      this.emit('start-continuous', text);\n    }\n  }, {\n    key: \"onStopContinuous\",\n    value: function onStopContinuous() {\n      this.emit('stop-continuous', text);\n    }\n  }]);\n\n  return Listener;\n}(EventEmitter);\n\nexport default Listener;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar State =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(defaults) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(State).call(this));\n    _this.state = defaults || {};\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: \"setState\",\n    value: function setState(data, callback) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        this.emit('update', this.state, changes);\n        if (callback) callback(changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.addListener('update', handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.removeListener('update', handler);\n    }\n  }]);\n\n  return State;\n}(EventEmitter);\n\nexport default State;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Sound =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Sound, _EventEmitter);\n\n  function Sound(url, options) {\n    var _this;\n\n    _classCallCheck(this, Sound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sound).call(this));\n    if (!options) options = {};\n    if (options.context) _this.context = options.context;\n\n    if (options.source) {\n      _this.source = options.source;\n    }\n\n    _this.connected = false;\n    _this.loaded = false;\n    _this.looping = false;\n\n    if (options.autoplay) {\n      _this.connect();\n\n      _this.on('load', function () {\n        if (options.loop) {\n          _this.loop();\n        } else _this.play(options.callback);\n      });\n    }\n\n    if (typeof url === 'string') {\n      _this.url = url;\n\n      _this.load();\n    } else if (typeof url === 'object') {\n      _this.loadArrayBuffer(url);\n    }\n\n    return _this;\n  }\n\n  _createClass(Sound, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.context) {\n        this.createContext(); // this.context = new AudioContext();\n        // this.reset();\n      } // if (!this.source) {\n      // \tthis.source = this.context.createBufferSource();\n      // }\n\n\n      if (!this.source.buffer) this.source.buffer = this.buffer;\n      this.source.connect(this.context.destination);\n      this.connected = true;\n    }\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(data) {}\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open('GET', this.url, true);\n      request.responseType = 'arraybuffer';\n\n      request.onload = function () {\n        _this2.response = request.response;\n\n        if (_this2.context) {\n          // debugger;\n          _this2.loadData();\n        } else {\n          console.log('loaded no context', _this2.url);\n        }\n      };\n\n      request.send();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      if (!this.response) {\n        debugger;\n      }\n\n      this.context.decodeAudioData(this.response, function (response) {\n        _this3.buffer = response;\n\n        if (_this3.source) {\n          // debugger;\n          _this3.source.buffer = _this3.buffer;\n        }\n\n        _this3.loaded = true;\n\n        _this3.emit('load');\n      }, function (e) {\n        console.error('Sound: failed to load', this.url); // this.emit('error', e);\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      this.context = new AudioContext();\n      this.source = this.context.createBufferSource();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.createContext();\n      this.connect(); // this.source.buffer = this.buffer;\n      // this.source.connect(this.context.destination);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.source.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.source.resume();\n    }\n  }, {\n    key: \"play\",\n    value: function play(callback) {\n      var _this4 = this;\n\n      if (this.isPlaying) {\n        console.log('isPlaying');\n        return;\n      }\n\n      if (!this.loaded) {\n        if (!this.context) {\n          this.createContext();\n        }\n\n        this.once('load', function () {\n          _this4.connect();\n\n          _this4.source.loop = _this4.looping;\n\n          _this4.source.onended = function () {\n            _this4.stop();\n\n            if (callback) callback();\n          };\n\n          _this4.isPlaying = true;\n\n          _this4.source.start(0);\n        });\n        this.loadData();\n      } else {\n        if (!this.connected) {\n          // debugger;\n          this.connect();\n        }\n\n        this.source.onended = function () {\n          // debugger;\n          _this4.stop();\n\n          if (callback) callback();\n        };\n\n        this.isPlaying = true;\n        this.source.start(0);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n      this.source.stop();\n      this.source.disconnect();\n      this.context.close();\n      this.connected = false;\n      this.looping = false;\n      this.reset();\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      this.looping = true;\n      this.play(); // if (!this.loaded) {\n      // \tthis.once('load', () => {\n      // \t\tthis.connect();\n      // \t\tthis.source.loop = true;\n      // \t\tthis.source.start(0);\n      // \t});\n      // \tthis.load();\n      // }\n      // else {\n      // \tif (!this.connected) this.connect();\n      // }\n      // this.source.loop = true;\n      // this.source.start(0);\n    }\n  }]);\n\n  return Sound;\n}(EventEmitter);\n\nexport default Sound;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport EventEmitter from 'events';\n\nvar MonauralScope =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(MonauralScope, _EventEmitter);\n\n  function MonauralScope(canvas, options) {\n    var _this;\n\n    _classCallCheck(this, MonauralScope);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonauralScope).call(this));\n    if (!options) options = {};\n    _this.canvas = canvas;\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n    _this.audioContext = null;\n    _this.meter = null;\n    _this.mediaStreamSource = null;\n    _this._draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isRecording = false;\n\n    _this.setTheme({\n      lineWidth: options.lineWidth || 3,\n      strokeColor: options.strokeColor || '#FF0000',\n      clipColor: options.clipColor || options.strokeColor || '#FF0000',\n      fillColor: options.fillColor || 'rgba(255,0,0,0.1)',\n      bgOnColor: options.bgOnColor || null,\n      bgOffColor: options.bgOffColor || null,\n      dotColor: options.dotColor || '#FF0000',\n      dotSize: options.dotSize || 3,\n      background: options.background || null\n    });\n\n    return _this;\n  }\n\n  _createClass(MonauralScope, [{\n    key: \"setTheme\",\n    value: function setTheme(options) {\n      this.theme = options;\n    }\n  }, {\n    key: \"createAudioMeter\",\n    value: function createAudioMeter(audioContext, clipLevel, averaging, clipLag) {\n      // this.audioContext = audioContext;\n      var processor = audioContext.createScriptProcessor(512); //this.processor = processor;\n\n      processor.onaudioprocess = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var bufLength = buf.length;\n        var sum = 0;\n        var x; // Do a root-mean-square on the samples: sum up the squares...\n\n        for (var i = 0; i < bufLength; i++) {\n          x = buf[i];\n\n          if (Math.abs(x) >= this.clipLevel) {\n            this.clipping = true;\n            this.lastClip = window.performance.now();\n          }\n\n          sum += x * x;\n        } // ... then take the square root of the sum.\n\n\n        var rms = Math.sqrt(sum / bufLength); // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n\n        this.volume = Math.max(rms, this.volume * this.averaging);\n        if (!this.maxVolume) this.maxVolume = this.volume;\n        this.maxVolume = Math.max(this.volume, this.maxVolume);\n      };\n\n      processor.clipping = false;\n      processor.lastClip = 0;\n      processor.volume = 0;\n      processor.clipLevel = clipLevel || 0.99; //0.98;\n\n      processor.averaging = averaging || 0.97; //0.95;\n\n      processor.clipLag = clipLag || 500; //750;\n\n      processor.connect(audioContext.destination);\n\n      processor.checkClipping = function () {\n        if (!this.clipping) return false;\n        if (this.lastClip + this.clipLag < window.performance.now()) this.clipping = false;\n        return this.clipping;\n      };\n\n      processor.shutdown = function () {\n        this.disconnect();\n        this.onaudioprocess = null;\n      };\n\n      return processor;\n    }\n  }, {\n    key: \"setIsRecording\",\n    value: function setIsRecording(isRecording) {\n      if (this.isRecording === isRecording) {\n        console.log('same');\n        return;\n      }\n\n      this.isRecording = isRecording;\n      if (isRecording) this.startRecording();else this.stopRecording();\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (this.isRecording) {\n        if (this.audioContext) {\n          this.meter.disconnect(this.audioContext.destination);\n        } else {\n          console.log('error: no audioContext');\n        }\n\n        if (this.mediaStreamSource && this.meter) {\n          this.mediaStreamSource.disconnect(this.meter);\n        }\n\n        if (this.meter) {\n          this.meter.shutdown();\n        }\n\n        if (this.audioContext) {\n          this.audioContext.close();\n        }\n      }\n\n      this.isRecording = false;\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording() {\n      var _this2 = this;\n\n      if (this.isRecording) {\n        console.log('already recording');\n        return;\n      }\n\n      console.log('startRecording');\n      this.isRecording = true;\n      var audioContext = new AudioContext();\n      this.audioContext = audioContext;\n\n      var success = function success(stream) {\n        console.log('startRecording success');\n        _this2.mediaStreamSource = audioContext.createMediaStreamSource(stream);\n        _this2.meter = _this2.createAudioMeter(audioContext);\n\n        _this2.mediaStreamSource.connect(_this2.meter);\n\n        _this2.startDrawing();\n      };\n\n      var fail = function fail(e) {\n        alert('Microphone Error');\n        console.log('startRecording fail');\n        debugger;\n      };\n\n      try {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia; // ask for an audio input\n\n        navigator.getUserMedia({\n          \"audio\": {\n            \"mandatory\": {\n              \"googEchoCancellation\": \"false\",\n              \"googAutoGainControl\": \"false\",\n              \"googNoiseSuppression\": \"false\",\n              \"googHighpassFilter\": \"false\"\n            },\n            \"optional\": []\n          }\n        }, success, fail);\n      } catch (e) {\n        alert('getUserMedia threw exception :' + e);\n      }\n    }\n  }, {\n    key: \"loadAudioData\",\n    value: function loadAudioData(audioContext, source, callback) {\n      var _this3 = this;\n\n      this.audioContext = audioContext;\n      this.source = source;\n      source.connect(audioContext.destination);\n      var meter = this.createAudioMeter(audioContext);\n      this.meter = meter;\n      source.connect(this.meter);\n\n      source.onended = function () {\n        _this3.isPlaying = false;\n        source.disconnect(audioContext.destination);\n\n        _this3.meter.shutdown();\n\n        source.stop();\n\n        _this3.stopDrawing();\n\n        if (callback) callback();\n      };\n\n      this.isPlaying = true;\n      this.startDrawing();\n      source.start(0);\n    }\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing() {\n      this.isDrawing = true;\n      this.draw();\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.meter.volume = 0;\n      this.draw();\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (!this.canvas) {\n        console.log('no canvas');\n        return;\n      }\n\n      var ctx = this.canvas.getContext('2d');\n\n      if (this.theme.background) {\n        ctx.fillStyle = this.theme.background;\n        ctx.fillRect(0, 0, this.width, this.height);\n      } else {\n        ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      if (this.theme.bgOnColor || this.theme.bgOffColor) {\n        var maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, maxsize, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.isPlaying || this.isRecording ? this.theme.bgOnColor : this.theme.bgOffColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      ctx.lineWidth = this.theme.lineWidth;\n\n      if (this.theme.dotSize) {\n        var size = this.theme.dotSize;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, size, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.theme.dotColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      if (!this.isRecording && !this.isDrawing) {\n        console.log('not drawing');\n      } else {\n        // console.log('IS drawing ', this.meter.volume);\n        if (!this.meter) {\n          console.error('no mater');\n          this.startDrawing();\n          this.startRecording();\n          return;\n        }\n\n        ctx.strokeStyle = this.meter.checkClipping() ? this.theme.clipColor : this.theme.strokeColor;\n\n        var _maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n\n        var _size = this.meter.volume * _maxsize * 5;\n\n        if (_size > this.width / 2 - this.theme.lineWidth) _size = this.width / 2 - this.theme.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, _size, 0, 2 * Math.PI, false);\n\n        if (this.theme.fillColor) {\n          ctx.fillStyle = this.theme.fillColor;\n          ctx.fill();\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.isDrawing) {\n          window.requestAnimationFrame(this._draw);\n        }\n      }\n    }\n  }]);\n\n  return MonauralScope;\n}(EventEmitter);\n\nexport default MonauralScope;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-listen/examples/web-vocab-tester/node_modules/@babel/runtime/helpers/esm/inherits\";\n// import EventEmitter from 'events';\nimport spinBrowser from './spin/transports/browser';\nimport CollectionModel from './CollectionModel'; // import SingletonModel from './SingletonModel';\n\nimport Spin from './spin/spin';\nimport Listener from './Listen';\nimport State from './State';\nimport Store from './Store';\nimport logger from './logger';\nimport Color from './Color';\nimport Sound from './Sound'; // import AudioScope from './AudioScope';\n\nimport MonauralScope from './MonauralScope';\n\nfunction postMessage(msg) {\n  console.log('client post', msg);\n  var data = {\n    '_jaxcore_client': {\n      message: msg,\n      protocol: 1\n    }\n  }; // if (msg.spin) {\n  // \tconsole.log(data);\n  // \tdebugger;\n  // }\n\n  window.postMessage(data, window.document.location.protocol + window.document.location.host);\n}\n\nvar Listen = new Listener(postMessage); //.setPostCommand();\n\nspinBrowser.setPostCommand(postMessage);\n\nvar JaxcoreClient =\n/*#__PURE__*/\nfunction (_State) {\n  _inherits(JaxcoreClient, _State);\n\n  function JaxcoreClient() {\n    var _this;\n\n    _classCallCheck(this, JaxcoreClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JaxcoreClient).call(this));\n    _this.reconnect = true;\n\n    _this.setState({\n      connectedExtension: false,\n      extensionReady: false\n    });\n\n    var onMessage = function onMessage(event) {\n      //event.isTrusted &&\n      if (document.location.href.indexOf(event.origin) === 0) {\n        if (event.data._jaxcore_content) {\n          var msg = event.data._jaxcore_content.message;\n\n          if (msg.socketDisconnected) {\n            _this.setState({\n              connectedExtension: false\n            });\n          } else if ('extensionReady' in msg) {\n            //console.log('extensionReady', msg);\n            _this.setState({\n              extensionReady: true\n            });\n\n            _this.emit('extension-ready'); // debugger;\n\n          } else if ('connectedExtension' in msg) {\n            _this.setState({\n              connectedExtension: msg.connectedExtension\n            });\n\n            if (msg.connectedExtension) {\n              //callback(null, true);\n              console.log('connectedExtension !');\n\n              _this.emit('connectedExtension');\n            } else {// this.connectExtension();\n            }\n          } else if (msg.spin) {\n            console.log('got spin data from bg', msg.spin);\n            spinBrowser.data(msg.spin);\n          } else if (msg.listen) {\n            console.log('got listen data from bg', msg.spin); //alert('Listen said: ' + msg.listen.recognizedText);\n            // spinBrowser.data(msg.spin);\n\n            Listen.recognizedText(msg.listen.recognizedText);\n          } else if (event.data.target && event.data.target === 'inpage') {} else {\n            console.log('client unhandled message', event.data);\n          }\n        } else {// console.log('not _jaxcore_content', event.data, event.origin);\n        }\n      } else {\n        console.log('nope', event);\n      }\n    };\n\n    window.addEventListener(\"message\", onMessage);\n    spinBrowser.on('command', function (spin, args) {\n      console.log('spin command', spin, args);\n    });\n    return _this;\n  }\n\n  _createClass(JaxcoreClient, [{\n    key: \"disconnectExtension\",\n    value: function disconnectExtension() {\n      this.reconnect = false; // console.log('disconnectExtension');\n\n      postMessage({\n        disconnectExtension: true\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      this.once('connectedExtension', callback);\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this2.connectExtension();\n        });\n      }\n    }\n  }, {\n    key: \"connectExtension\",\n    value: function connectExtension(callback) {\n      if (this.state.connectedExtension) {\n        console.log('already connectedExtension');\n        this.emit('connectedExtension');\n      } else {\n        // TO DO CHANGE TO LISTENER ?\n        console.log('Jaxcore connectExtension');\n        postMessage({\n          connectExtension: true\n        });\n      }\n    }\n  }, {\n    key: \"connectSpins\",\n    value: function connectSpins(callback) {\n      var _this3 = this;\n\n      console.log('connectSpins');\n      spinBrowser.addListener('spin-created', function (spin) {\n        callback(spin);\n      });\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this3.connectExtension();\n        });\n      } // if (this.state.connectedExtension) {\n      //\n      // }\n      //\n      // if (this.state.connectedExtension) {\n      // \tthis.onCreate(callback);\n      // } else {\n      // \tthis.once('connectedExtension', () => {\n      // \t\tthis.onCreate(callback);\n      // \t});\n      // \t// setTimeout(() => {\n      // \t\tthis.connectExtension(callback);\n      // \t// }, 1000);\n      // }\n\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(callback) {\n      var _this4 = this;\n\n      spinBrowser.addListener('spin-created', function (spin) {\n        _this4.emit(); // if (spin.state.connected) {\n        // \tcallback(spin);\n        // } else {\n        // \tspin.once('connected', function () {\n        // \t\tcallback(spin)\n        // \t});\n        // }\n\n      });\n    }\n  }]);\n\n  return JaxcoreClient;\n}(State);\n\nvar createStore = function createStore(name) {\n  return new Store(name);\n};\n\nvar createLogger = logger.create;\nexport { CollectionModel, State, Store, createStore, logger, createLogger, Color, Sound, Spin, Listen, MonauralScope };\nvar jaxcore = new JaxcoreClient();\nSpin.connectAll = jaxcore.connectSpins.bind(jaxcore); // todo: refactor this in a better way\n\nexport default jaxcore; // var Client = require('./client');\n// // var ES6Client = require('./es6client');\n//\n// module.exports = {\n// \tlogger: logger,\n// \tcreateLogger: logger.create,\n// \tStore: Store,\n// \tcreateStore: function(name) {\n// \t\treturn new Store(name);\n// \t},\n// \tClient: Client\n// \t// ES6Client: ES6Client\n// };","var plugin = require('jaxcore-plugin'); // var log = plugin.createLogger('Spin Buffer');\n\n\nvar _instance = 0;\n\nfunction SpinBuffer(spin, config) {\n  this.log = plugin.createLogger('Spin Buffer ' + _instance++);\n  this.log('created buffer', spin.id);\n  this.delayTime = 0;\n  this.spinDelayed = false;\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n  this.spinDirection = 0;\n  this.lastSpinTime = 0;\n  if (!config) config = {};\n  this.defaultDelay = config.defaultDelay || 500;\n  this.staticTimeout = config.staticTimeout || 3000;\n  this.delayLength = this.defaultDelay;\n  this._onPushKnob = this.onPushKnob.bind(this);\n  spin.on('knob', this._onPushKnob);\n  var me = this;\n\n  this.destroy = function () {\n    spin.removeListener('knob', me._onPushKnob);\n  };\n}\n\nSpinBuffer.prototype = {};\n\nSpinBuffer.prototype.reset = function (forceStatic) {\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n\n  if (forceStatic) {\n    this.spinDirection = 0;\n  }\n};\n\nSpinBuffer.prototype.onPushKnob = function () {\n  this.log('reset');\n  this.reset();\n};\n\nSpinBuffer.prototype.spin = function (direction, kineticBuffer, staticBuffer) {\n  //if (!kineticBuffer) kineticBuffer = 0;\n  if (typeof staticBuffer === 'undefined') {\n    if (kineticBuffer) staticBuffer = kineticBuffer;else staticBuffer = 0;\n  }\n\n  kineticBuffer += 1;\n  staticBuffer += 1; // if (!kineticBuffer) kineticBuffer = 1;\n  // if (!staticBuffer) staticBuffer = kineticBuffer || 2;\n\n  var timeSinceLastSpin = new Date().getTime() - this.lastSpinTime;\n  this.lastSpinTime = new Date().getTime();\n\n  if (this.isDelayed()) {\n    this.reset();\n    return false;\n  }\n\n  var staticTimeoutExceeded = timeSinceLastSpin > this.staticTimeout; // after 3 sec reset static buffer\n\n  if (staticTimeoutExceeded) {\n    this.log('static timeout exceeded');\n    this.reset(true);\n  }\n\n  var directionChanged = direction !== this.spinDirection;\n\n  if (directionChanged) {\n    this.kineticBuffer = 0;\n    this.staticBuffer++;\n\n    if (this.staticBuffer >= staticBuffer) {\n      this.log('static buffer exeeded, spinDirection is now', direction);\n      this.spinDirection = direction;\n      this.reset();\n      return true;\n    } else {\n      this.log('static buffer:', this.staticBuffer, '-');\n      return false;\n    }\n  } else {\n    if (this.staticBuffer > 0) {\n      this.staticBuffer--;\n      this.log('static buffer:', this.staticBuffer, '+');\n      if (this.staticBuffer < 0) this.staticBuffer = 0;\n      return false;\n    }\n\n    this.kineticBuffer++;\n    this.staticBuffer = 0;\n    if (kineticBuffer > 0) this.log('kinetic buffer:', this.kineticBuffer, direction === 1 ? '+' : '-');\n\n    if (this.kineticBuffer >= kineticBuffer) {\n      if (kineticBuffer > 0) this.log('kinetic buffer exceeded');\n      this.reset();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nSpinBuffer.prototype.isDelayed = function () {\n  if (this.spinDelayed) {\n    var diff = new Date().getTime() - this.delayTime;\n    var d = diff > this.delayLength;\n\n    if (d) {\n      this.log('delay timed out', new Date().getTime() - this.delayTime);\n      this.delayLength = this.defaultDelay;\n      this.spinDelayed = false;\n      return false;\n    } else {\n      this.log('delaying for ' + (this.delayLength + ' ' + diff));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nSpinBuffer.prototype.delay = function (ms) {\n  this.delayLength = ms || this.defaultDelay;\n  this.log('delaying for ' + this.delayLength + 'ms');\n  this.delayTime = new Date().getTime();\n  this.spinDelayed = true;\n};\n\nSpinBuffer.prototype.cancelDelay = function () {\n  this.delayTime = 0;\n  this.spinDelayed = false;\n};\n\nmodule.exports = SpinBuffer;","var isArray = function isArray(o) {\n  return typeof o === 'object' && Object.prototype.toString.apply(o) === '[object Array]';\n};\n\nvar isString = function isString(o) {\n  return typeof o === 'string' || o instanceof String;\n};\n\nfunction alpha(color, a) {\n  if (typeof a === 'number' && a >= 0 && a <= 1) {\n    var c = getRGB(color);\n    return rgb(c[0], c[1], c[2], a);\n  }\n\n  return color;\n}\n\nfunction lighten(c, l) {\n  if (c.value) c = c.value;else if (typeof l === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, 0, l));\n}\n\nfunction darken(c, l) {\n  return lighten(c, -l);\n}\n\nfunction saturate(c, s) {\n  if (c.value) c = c.value;else if (typeof s === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, s, 0));\n}\n\nfunction desaturate(c, s) {\n  return saturate(c, -s);\n}\n\nfunction hslval(x, y, r) {\n  if (r < 0) r += 1;\n  if (r > 1) r -= 1;\n  var c;\n  if (6 * r < 1) c = x + (y - x) * 6 * r;else if (2 * r < 1) c = y;else if (3 * r < 2) c = x + (y - x) * (2 / 3 - r) * 6;else c = x;\n  return c * 255;\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0],\n      s = hsl[1],\n      l = hsl[2],\n      r,\n      g,\n      b;\n\n  if (s === 0) {\n    r = g = b = l * 255;\n  } else {\n    var x, y;\n    if (l < 0.5) y = l * (1 + s);else y = l + s - l * s;\n    x = 2 * l - y;\n    r = hslval(x, y, h + 1 / 3);\n    g = hslval(x, y, h);\n    b = hslval(x, y, h - 1 / 3);\n  }\n\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  if (hsl.length === 4) return [r, g, b, hsl[3]];else return [r, g, b];\n}\n\nfunction hsl(h, s, l, a) {\n  var x = [h / 360, s / 100, l / 100];\n  var r = hsl2rgb(x).map(Math.round);\n  if (arguments.length === 4) r[3] = a;\n  return rgb(r);\n}\n\nfunction shiftHSL(c, h, s, l) {\n  if (typeof h === 'undefined') h = 0;\n  if (typeof s === 'undefined') s = 0;\n  if (typeof l === 'undefined') l = 0;\n  var o = getRGB(c);\n  var x = getHSL(o);\n  x[0] += h;\n  if (x[0] < 0) x[0] += 1;\n  if (x[0] > 1) x[0] -= 1;\n  x[1] *= 1 + s;\n  if (x[1] < 0) x[1] = 0;\n  if (x[1] > 1) x[1] = 1;\n  x[2] *= 1 + l;\n  if (x[2] < 0) x[2] = 0;\n  if (x[2] > 1) x[2] = 1;\n  var n = hsl2rgb(x);\n  if (o.length === 4) n[3] = o[3];\n  return n;\n}\n\nfunction shiftHue(c, h) {\n  if (typeof h === 'undefined') return c;\n  return rgb(shiftHSL(c, h, 0, 0));\n}\n\nfunction combine(sourceColor, targetColor, amount) {\n  amount = amount || 0.5;\n  var al = getAlpha(sourceColor);\n  var s = getRGB(sourceColor);\n  var t = getRGB(targetColor);\n  var r = Math.round((t[0] - s[0]) * amount);\n  var g = Math.round((t[1] - s[1]) * amount);\n  var b = Math.round((t[2] - s[2]) * amount);\n  return rgb(s[0] + r, s[1] + g, s[2] + b, al);\n}\n\nfunction tint(sourceColor, targetColor, amount) {\n  var sH = getHue(sourceColor);\n  var tH = getHue(targetColor);\n  var diff = tH - sH;\n  if (diff > 0 && diff > 0.5) diff -= 1;else if (diff < 0 && diff < -0.5) diff += 1;\n  var dH = diff * amount;\n  return rgb(shiftHSL(sourceColor, dH, null, null));\n}\n\nfunction hue(c, h) {\n  return setHSL(c, h);\n}\n\nfunction saturation(c, s) {\n  return setHSL(c, null, s);\n}\n\nfunction lightness(c, l) {\n  return setHSL(c, null, null, l);\n}\n\nfunction setHSL(c, h, s, l) {\n  var x = getHSL(c);\n  if (typeof h === 'undefined' || h === null) h = x[0];\n  if (typeof s === 'undefined' || s === null) s = x[1];\n  if (typeof l === 'undefined' || l === null) l = x[2];\n  if (x.length === 4) return rgb(hsl2rgb([h, s, l, x[3]]));else return rgb(hsl2rgb([h, s, l]));\n}\n\nfunction rgb() {\n  if (arguments.length === 1) {\n    var a = arguments[0];\n\n    if (typeof a === 'string') {\n      var r = getRGB(a);\n      if (isArray(r)) return rgb(r);else return getHex(r);\n    }\n\n    if (isArray(a) && a.length === 3) {\n      return getHex(a);\n    }\n\n    if (isArray(a) && a.length === 4) {\n      return 'rgba(' + Math.round(a[0]) + ',' + Math.round(a[1]) + ',' + Math.round(a[2]) + ',' + a[3] + ')';\n    }\n  } else if (arguments.length === 3) {\n    return getHex(Array.from(arguments));\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'number' && arguments[3] > 0 && arguments[3] <= 1) {\n      return 'rgba(' + Math.round(arguments[0]) + ',' + Math.round(arguments[1]) + ',' + Math.round(arguments[2]) + ',' + arguments[3] + ')';\n    } else return getHex(Array.from(arguments));\n  }\n}\n\nfunction setRGB(c, r, g, b, a) {\n  c = getRGB(c);\n  if (typeof r === 'number') c[0] = r;\n  if (typeof g === 'number') c[1] = g;\n  if (typeof b === 'number') c[2] = b;\n  if (typeof a === 'number') c[3] = a;\n  return rgb(c);\n}\n\nfunction getAlpha(color) {\n  var x = getRGB(color);\n  if (x.length === 4) return x[3];\n  return 0;\n}\n\nfunction getRGB() {\n  if (isArray(arguments[0])) return arguments[0];\n\n  if (typeof arguments[0] === 'string') {\n    var c = arguments[0];\n\n    if (/^#/.test(c)) {\n      var h = c.substring(1);\n      if (/^[0-9a-f]{6}$/i.test(h)) return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n      if (/^[0-9a-f]{3}$/i.test(h)) return [parseInt(h[0] + h[0], 16), parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16)];\n      return [0, 0, 0];\n    }\n\n    var m;\n\n    if (m = c.match(/rgb\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3])];\n    }\n\n    if (m = c.match(/rgba\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [Number(m[1]), Number(m[2]), Number(m[3]), Number(m[4])];\n    } else {}\n  }\n}\n\nfunction getRed(c) {\n  return getRGB(c)[0];\n}\n\nfunction getGreen(c) {\n  return getRGB(c)[1];\n}\n\nfunction getBlue(c) {\n  return getRGB(c)[2];\n}\n\nfunction getHex(color, full) {\n  if (color) {\n    var c = getRGB(color);\n\n    if (c) {\n      var r = int2hex(Math.round(c[0]));\n      var g = int2hex(Math.round(c[1]));\n      var b = int2hex(Math.round(c[2]));\n      if (!full && r[0] === r[1] && g[0] === g[1] && b[0] === b[1]) return ('#' + r[0] + g[0] + b[0]).toUpperCase();\n      return ('#' + r + g + b).toUpperCase();\n    }\n  }\n\n  return '#000';\n}\n\nfunction int2hex(i) {\n  var v = i.toString(16);\n  return v.length === 1 ? '0' + v : v;\n}\n\nfunction getHSL(color) {\n  var rgb;\n  if (isArray(color)) rgb = color;else if (isString(color)) rgb = getRGB(color);else {\n    console.log('no rgb for ', color);\n    return [0, 0, 0];\n  }\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var x = Math.max(r, g, b);\n  var n = Math.min(r, g, b);\n  var l = (x + n) / 2;\n  var s = 0,\n      h = 0;\n\n  if (x === n) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = x - n;\n    if (l > 0.5) s = d / (2 - x - n);else s = d / (x + n);\n    if (x === r) h = (g - b) / d + (g < b ? 6 : 0);\n    if (x === g) h = 2 + (b - r) / d;\n    if (x === b) h = 4 + (r - g) / d;\n    h /= 6;\n    if (h < 0) h += 1;\n  }\n\n  if (rgb.length === 4) return [h, s, l, rgb[3]];else return [h, s, l];\n}\n\nfunction getHue(c) {\n  return getHSL(c)[0];\n}\n\nfunction getSaturation(c) {\n  return getHSL(c)[1];\n}\n\nfunction getLightness(c) {\n  return getHSL(c)[2];\n}\n\nfunction invert(color) {\n  var rgba = getRGB(color);\n\n  for (var i = 0; i < 3; i++) {\n    rgba[i] = 255 - rgba[i];\n  }\n\n  return rgb(rgba);\n}\n\nmodule.exports = {\n  hsl2rgb: hsl2rgb,\n  hslval: hslval,\n  int2hex: int2hex,\n  alpha: alpha,\n  lighten: lighten,\n  darken: darken,\n  saturate: saturate,\n  desaturate: desaturate,\n  shiftHSL: shiftHSL,\n  shiftHue: shiftHue,\n  combine: combine,\n  tint: tint,\n  hue: hue,\n  saturation: saturation,\n  lightness: lightness,\n  hsl: hsl,\n  hsla: hsl,\n  setHSL: setHSL,\n  rgb: rgb,\n  rgba: rgb,\n  setRGB: setRGB,\n  getAlpha: getAlpha,\n  getRGB: getRGB,\n  getRed: getRed,\n  getGreen: getGreen,\n  getBlue: getBlue,\n  getHex: getHex,\n  getHSL: getHSL,\n  getHue: getHue,\n  getSaturation: getSaturation,\n  getLightness: getLightness,\n  invert: invert\n};"],"sourceRoot":""}